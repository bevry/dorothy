#!/usr/bin/env bash

function ensure_trailing_newline() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Ensure a file's contents has a trailing newline.

			USAGE:
			ensure-trailing-newline [--] ...<path>
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_paths=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			option_paths+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_paths+=("$item") ;;
		esac
	done

	# check
	if test "${#option_paths[@]}" -eq 0; then
		help "No <path>s provided"
	fi

	# =====================================
	# Action

	local path result=0
	for path in "${option_paths[@]}"; do
		if test -f "$path"; then
			if test "$(tail -n1 <"$path" | wc -l)" -eq 0; then
				if test -w "$path"; then
					echo >>"$path"
				else
					echo-style --error="$0: File is not writable: " --code="$path" >/dev/stderr
					result=13 # EACCES 13 Permission denied
				fi
			fi
		else
			echo-style --error="$0: Path is not a file: " --code="$path" >/dev/stderr
			result=2 # ENOENT 2 No such file or directory
		fi
	done
	return "$result"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	ensure_trailing_newline "$@"
fi
