#!/usr/bin/env bash

function ensure_trailing_slash() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Ensure directories have a trailing newline.
			Ensure files do not have a trailing newline.

			USAGE:
			ensure-trailing-slash [--] ...<path>
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_paths=()
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			option_paths+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_paths+=("$item") ;;
		esac
	done

	# check
	if [[ ${#option_paths[@]} -eq 0 ]]; then
		help 'No <path>s was provided.'
	fi

	# =====================================
	# Action

	local path length
	for path in "${option_paths[@]}"; do
		if [[ -d $path ]]; then
			if [[ $path != */ ]]; then
				__print_lines "$path/"
			else
				__print_lines "$path"
			fi
		elif [[ -f $path ]]; then
			if [[ $path == */ ]]; then
				length="${#path}"
				__print_lines "${path:0:length-1}"
			else
				__print_lines "$path"
			fi
		else
			echo-style --error1='Not a file nor directory: ' --code-error1="$path" >/dev/stderr
			return 1
		fi
	done
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	ensure_trailing_slash "$@"
fi
