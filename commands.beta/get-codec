#!/usr/bin/env bash

function get_codec_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-style --h1="TEST: $0"

	local ogg_media_url='https://upload.wikimedia.org/wikipedia/commons/c/c8/Example.ogg' ogg_media_file
	ogg_media_file="$(fs-temp --directory='get-codec' --file --extension='ogg')"
	down --url="$ogg_media_url" --filepath="$ogg_media_file"

	if __command_exists -- ffprobe; then
		eval-tester --name='ogg vorbis file is ogg vorbis' --stdout='vorbis' \
			-- get-codec --path="$ogg_media_file"
	else
		eval-tester --name='ogg vorbis file is ogg vorbis' --status=6 \
			-- get-codec --path="$ogg_media_file"
	fi

	echo-style --g1="TEST: $0"
	return 0
)
function get_codec() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Get the codec information for a given file path.

			USAGE:
			get-codec [--verbose] <path>
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_path='' option_verbose='no'
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--path='*) option_path="${item#*=}" ;;
		'--no-verbose'* | '--verbose'*)
			option_verbose="$(get-flag-value --affirmative --fallback="$option_verbose" -- "$item")"
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if [[ -z $option_path ]]; then
				option_path="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# check
	if [[ -z $option_path ]]; then
		help "No path was provided"
	fi

	# =====================================
	# Action

	if __command_missing -- ffprobe; then
		echo-error 'ffprobe is required for this command.'
		return 6 # ENXIO 6 No such device or address
	fi

	if [[ $option_verbose == 'no' ]]; then
		ffprobe -i "$option_path" 2>&1 | echo-regexp -fon --regexp='Audio: ([\w\d-]+)' --replace='$1'
	else
		ffprobe -i "$option_path"
	fi
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		get_codec_test
	else
		get_codec "$@"
	fi
fi
