#!/usr/bin/env bash

function mac_address_helper() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Helpers for working with your MAC address.

			USAGE:
			mac-address-helper <action>

			ACTION:
			new
			    Generate a new MAC address.

			apply <interface> <mac>
			    Apply the specified MAC address <mac> to the specified network interface <interface>.

			get <interface>
			    Get the MAC address of the specified network interface <interface>.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item action='' option_args=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			action="$item"
			option_args+=("$@")
			shift $#
			break
			;;
		esac
	done

	# =====================================
	# Dependencies

	source "$DOROTHY/sources/ripgrep.bash"
	setup-util-gsed --quiet

	# =====================================
	# Action

	function act_new {
		openssl rand -hex 6 | gsed 's/\(..\)/\1:/g; s/./0/2; s/.$//'
	}
	function act_apply {
		local interface="${1-}" mac="${2-}"
		if test -z "$interface"; then
			help "<interface> was missing for:" "    mac-address-helper apply <interface> <mac>" '' "Typically [en0] or [p2p0] is used."
		fi
		if test -z "$mac"; then
			help "<mac> was missing for:" "    mac-address-helper apply <interface> <mac>" '' "You can generate one using:" "    mac-address-helper new"
		fi
		sudo-helper -- /system/Library/PrivateFrameworks/Apple80211.framework/Resources/airport --disassociate
		sudo-helper -- ifconfig "$interface" ether "$mac"
		sudo-helper -- ifconfig "$interface" down || :
		sudo-helper -- ifconfig "$interface" up || :
		networksetup -detectnewhardware
	}
	function act_get {
		local interface="${1-}"
		if test -z "$interface"; then
			help "<interface> was missing for:" "    mac-address-helper get <interface>" '' "Typically [en0] or [p2p0] is used."
		fi
		sudo-helper -- ifconfig "$interface" ether | rg --only-matching --regexp='ether ([\w\d:]+)' --replace='$1'
	}

	# =====================================
	# Act

	if test "$(type -t "act_$action")" = 'function'; then
		"act_$action" "${option_args[@]}"
	else
		echo-style --error="Action [$action] not yet implemented." >/dev/stderr
		return 78 # ENOSYS 78 Function not implemented
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	mac_address_helper "$@"
fi
