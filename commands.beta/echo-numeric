#!/usr/bin/env bash

# this command should have a --fallback (or be used with echo-trim-empty-lines), or a --quiet to suppress the error
function echo_numeric() (
	source "$DOROTHY/sources/stdinargs.bash"

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Outputs inputs that are numbers, otherwise note their invalidity to stderr.
			Using [is-number] for the validation.

			USAGE:
			echo-numeric [...options] [--] ...<input>
			echo-lines ...<input> | echo-numeric [...options]

			OPTIONS:
			$(stdinargs_options_help --)

			EXAMPLE:

			echo-numeric -- 1 2

			    1
			    2
			    # exit status: 0

			echo-numeric -- 1 a ''

			    1
			    [a] is not a number
			    [] is not a number
			    # exit status: 1

			echo-numeric -- 1 a '' 2> /dev/stderr || :

			    1
			    # exit status: 0, it was ignored due to || :

		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	local had_an_invalid_input=no
	function on_input {
		if is-number -- "$1"; then
			print_line "$1"
		else
			echo-style --error="[$1] is not a number" >/dev/stderr
			had_an_invalid_input=yes
		fi
	}
	function on_finish {
		if test "$had_an_invalid_input" = yes; then
			return 22 # EINVAL 22 Invalid argument
		fi
	}

	stdinargs "$@"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_numeric "$@"
fi
