#!/usr/bin/env bash
# @BETA @TODO this file and its associated configurations should be split into `set-wallpaper`, `set-vscode-theme`, `set-macos-theme`, etc.

# https://apple.stackexchange.com/a/326863/15131
# https://stackoverflow.com/a/39208361/130638

function macos_theme() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Configuration

	# setup.bash provides:
	source "$DOROTHY/sources/config.sh"
	local WALLPAPER_DIRECTORY_LIGHT='/System/Library/Desktop Pictures'
	local WALLPAPER_DIRECTORY_DARK='/System/Library/Desktop Pictures'
	local VSCODE_SETTINGS_FILE="$HOME/Library/Application Support/Code/User/settings.json"
	local VSCODE_THEME_LIGHT='Noctis Lux'
	local VSCODE_THEME_DARK='Popping and Locking'
	load_dorothy_config 'theme.bash'

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Applies your theme preference to macOS, VSCode, and Wallpaper.

			USAGE:
			macos-theme <light|dark>

			CONFIGURATION [theme.bash]:
			WALLPAPER_DIRECTORY_LIGHT = $WALLPAPER_DIRECTORY_LIGHT
			WALLPAPER_DIRECTORY_DARK = $WALLPAPER_DIRECTORY_DARK
			VSCODE_SETTINGS_FILE = $VSCODE_SETTINGS_FILE
			VSCODE_THEME_LIGHT = $VSCODE_THEME_LIGHT
			VSCODE_THEME_DARK = $VSCODE_THEME_DARK
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item theme=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$theme"; then
				theme="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# assert compatibility
	if ! is-mac; then
		help 'This command is only purposeful on macOS, which you are not running.'
	fi

	# check
	if test -z "$WALLPAPER_DIRECTORY_LIGHT" -o ! -d "$WALLPAPER_DIRECTORY_LIGHT"; then
		help "Missing directory [WALLPAPER_DIRECTORY_LIGHT] = [$WALLPAPER_DIRECTORY_LIGHT]"
	fi
	if test -z "$WALLPAPER_DIRECTORY_DARK" -o ! -d "$WALLPAPER_DIRECTORY_DARK"; then
		help "Missing directory [WALLPAPER_DIRECTORY_DARK] = [$WALLPAPER_DIRECTORY_DARK]"
	fi
	if test -z "$VSCODE_SETTINGS_FILE" -o ! -f "$VSCODE_SETTINGS_FILE"; then
		help "Missing file [VSCODE_SETTINGS_FILE] = [$VSCODE_SETTINGS_FILE]"
	fi
	if test -z "$VSCODE_THEME_LIGHT"; then
		help "Missing value [VSCODE_THEME_LIGHT] = [$VSCODE_THEME_LIGHT]"
	fi
	if test -z "$VSCODE_THEME_DARK"; then
		help "Missing value [VSCODE_THEME_DARK] = [$VSCODE_THEME_DARK]"
	fi

	# ensure
	theme="$(
		choose-option --required \
			--question='Which theme to apply?' \
			--filter="$theme" -- dark light
	)"

	# =====================================
	# Dependencies

	setup-util-jq --quiet

	# =====================================
	# Action

	function macos_set_wallpaper_directory {
		local wallpaper_directory="$1"
		echo-style --bold="Wallpaper Directory:       " "$wallpaper_directory"
		osascript -e "tell application \"System Events\" to tell current desktop to set pictures folder to \"$wallpaper_directory\""
	}
	function vscode_set_theme {
		local vscode_theme="$1"
		echo-style --bold="Visual Studio Code Theme:  " "$vscode_theme"
		jq ".[\"workbench.colorTheme\"] = \"$vscode_theme\"" "$VSCODE_SETTINGS_FILE" | echo-wait "$VSCODE_SETTINGS_FILE"
	}
	function macos_dark_mode_enable {
		local dark_mode="$1"
		if is-affirmative -- "$dark_mode"; then
			echo-style --bold="macOS Theme:               " "Dark Mode"
			dark_mode='true'
		else
			echo-style --bold="macOS Theme:               " --dim="Light Mode"
			dark_mode='false'
		fi
		osascript -e "tell application \"System Events\" to tell appearance preferences to set dark mode to $dark_mode"
	}

	if test "$theme" = 'dark'; then
		# enable dark mode
		macos_dark_mode_enable 'yes'
		vscode_set_theme "$VSCODE_THEME_DARK"
		macos_set_wallpaper_directory "$WALLPAPER_DIRECTORY_DARK"
	else
		# disable dark mode
		macos_dark_mode_enable 'no'
		vscode_set_theme "$VSCODE_THEME_LIGHT"
		macos_set_wallpaper_directory "$WALLPAPER_DIRECTORY_LIGHT"
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	macos_theme "$@"
fi
