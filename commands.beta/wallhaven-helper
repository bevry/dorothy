#!/usr/bin/env bash

function wallhaven_helper() (
	source "$DOROTHY/sources/bash.bash"
	require_array 'mapfile'

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Enter your wallhaven details, and it'll download your wallpaper collections: https://wallhaven.cc

			USAGE:
			wallhaven-helper [--user=...] [--key=...]
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item username='' apikey=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--user='*) username="${item#*=}" ;;
		'--key='*) apikey="${item#*=}" ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# essentials
	if test -z "$username"; then
		username="$(
			ask --required \
				--question="Enter the wallhaven username."
		)"
	fi
	if test -z "$apikey"; then
		apikey="$(
			ask --required --password \
				--question="Enter the wallhaven API Key for $username. You can get this from: https://wallhaven.cc/settings/account"
		)"
	fi

	# =====================================
	# Dependencies

	setup-util-deno --quiet
	setup-util-jq --quiet

	# =====================================
	# Act

	# collections
	local collections collection
	mapfile -t collections < <(fetch "https://wallhaven.cc/api/v1/collections?apikey=$apikey" | jq -r '.data[] | (.id, .label)')
	collection="$(
		choose-option \
			--question='Which collection to download?' \
			--label --visual="\$LABEL [\$VALUE]" \
			-- "${collections[@]}"
	)"

	# collection
	local temp_deno_script
	temp_deno_script="$(
		fs-temp \
			--directory='wallhaven-helper' \
			--file='deno.ts'
	)"
	cat <<EOF >"$temp_deno_script"
const url = new URL(Deno.args[0])
function stderr(text: string) {
	return Deno.stderr.write(
		new TextEncoder().encode(text + "\n")
	);
}
function stdout(text: string) {
	return Deno.stdout.write(
		new TextEncoder().encode(text + "\n")
	);
}
function wait(ms: number, callback: () => void) {
	return new Promise((resolve, reject) => {
		setTimeout(function () {
			try {
				resolve(callback())
			} catch (error) {
				reject(error)
			}
		}, ms)
	})
}
async function fetch_next_page() {
	await stderr('Fetching: ' + url.toString())
	const req = await fetch(url)
	if ( req.status === 429 ) {
		await stderr('Waiting 45 seconds for rate limiting.')
		return await wait(45 * 1000, fetch_next_page)
	}
	const text = await req.text()
	const json: any = await Promise.resolve().then(function () {
		try {
			return JSON.parse(text)
		} catch (err) {
			console.error('Failed to parse JSON:', err, text)
			return Promise.reject('Failed to download ' + url)
		}
	})
	const urls = json.data.map( (item: any) => item.path )
	await stdout(urls.join('\n'))
	if ( json.meta.last_page != json.meta.current_page ) {
		url.searchParams.set('page', String(json.meta.current_page + 1))
		fetch_next_page()
	}
}
await fetch_next_page()
EOF

	# run the deno script to fetch the wallpaper urls via the api and store them in a file
	local temp_list_file
	temp_list_file="$(
		fs-temp \
			--directory='wallhaven-helper' \
			--file="$username-$collection.txt"
	)"
	deno run --allow-net --quiet "$temp_deno_script" "https://wallhaven.cc/api/v1/collections/$username/$collection?apikey=$apikey" | tee "$temp_list_file"

	# with that file, download each of them
	local url
	while read -r url; do
		down "$url"
	done <"$temp_list_file"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	wallhaven_helper "$@"
fi
