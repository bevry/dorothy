#!/usr/bin/env bash

# @todo merge into git-helper

function get_git_default_branch() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Get the default branch of the local repository.

			USAGE:
			get-git-default-branch
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =======================================================
	# Action

	function __branch_exists {
		local branch="$1"
		git rev-parse --abbrev-ref "$branch" &>/dev/null
	}

	local default_local default_global
	default_local="$(git config init.defaultBranch 2>/dev/null || :)"
	default_global="$(git config --global init.defaultBranch 2>/dev/null || :)"

	if [[ -n $default_local ]] && __branch_exists "$default_local"; then
		__print_lines "$default_local"
	elif [[ -n $default_global ]] && __branch_exists "$default_global"; then
		__print_lines "$default_global"
	elif __branch_exists 'main'; then
		__print_lines 'main'
	elif __branch_exists 'master'; then
		__print_lines 'master'
	else
		echo-error 'Unable to determine the default branch.'
		return 1
	fi
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	get_git_default_branch "$@"
fi
