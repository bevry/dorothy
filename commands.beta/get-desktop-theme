#!/usr/bin/env bash

# https://stackoverflow.com/q/2507337/130638
# https://github.com/dandavison/delta/issues/447#issuecomment-1239398586

function get_desktop_theme() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Get whether the desktop environment is light or dark.

			USAGE:
			get-desktop-theme
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Action

	local result
	if is-mac; then
		# result="$(defaults read -globalDomain AppleInterfaceStyle || :)" <-- always reports Dark on macOS Ventura
		result="$(osascript -e 'tell application "System Events" to tell appearance preferences to get dark mode' || :)" # note that this prompts the user if they wish to allow terminal to access system events, so is undesirable
		if [[ $result == 'true' ]]; then
			__print_lines 'dark'
		else
			__print_lines 'light'
		fi
	elif __command_exists -- gsettings; then
		result="$(gsettings get org.gnome.desktop.interface gtk-theme || :)"
		if [[ $result == *'dark'* ]]; then
			__print_lines 'dark'
		else
			__print_lines 'light'
		fi
	else
		echo-style --stderr --error='Unable to determine if the desktop theme is light or dark.'
		return 19 # ENODEV 19 Operation not supported by device
	fi
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	get_desktop_theme "$@"
fi
