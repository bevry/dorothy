#!/usr/bin/env bash

# unfortunately, empty directories may still be 4096 bytes long
# which can be filtered by doing `du -t 4097` however `du -c` still reports such in total
# --apparent-size has no affect
# until this is resolved, this command serves no purpose

function is_empty_size() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Checks if <path> had a file size of zero.

			USAGE:
			is-empty-size [--] ...<path>

			RETURNS:
			[0] if all <path>s were empty.
			[1] if any <path>s were not empty.
			[2] if any <path> were not a file.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_paths=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			option_paths+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_paths+=("$item") ;;
		esac
	done

	# check
	if test "${#option_paths[@]}" -eq 0; then
		help "No <path>s provided."
	fi

	# =====================================
	# Action

	# dependencies
	setup-util-coreutils --quiet # du

	# process
	local path
	for path in "${option_paths[@]}"; do
		if test ! -f "$path"; then
			echo-error 'A path was was not a file: ' --code="$path"
			return 2
		fi
		test "$(du -s "$path")" = $'0\t'"$path"
	done
	return 0
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	is_empty_size "$@"
fi
