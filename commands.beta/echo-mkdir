#!/usr/bin/env bash

function echo_mkdir() (
	source "$DOROTHY/sources/stdinargs.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Make a directory at each input path, if it was not already one, and output its absolute path.

			USAGE:
			echo-mkdir [...options] [--] ...<input>
			echo-lines ...<input> | echo-mkdir [...options]

			OPTIONS:
			--sudo
			    If provided, use sudo to make the directory.

			$(stdinargs_options_help --)

			EXAMPLE:

			echo-mkdir -- ./temp

			    $(pwd)/temp
			    # exit status: 0

		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process our own arguments, delegate everything else to stdinargs
	local item option_quiet='' option_sudo='no' option_args=()
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-verbose'* | '--verbose'*)
			option_quiet="$(get-flag-value --non-affirmative --fallback="$option_quiet" -- "$item")"
			;;
		'--no-quiet'* | '--quiet'*)
			option_quiet="$(get-flag-value --affirmative --fallback="$option_quiet" -- "$item")"
			;;
		'--no-sudo'* | '--sudo'*)
			option_sudo="$(get-flag-value --affirmative --fallback="$option_sudo" -- "$item")"
			;;
		# forward to stdinargs, however support mixing and matching of our options, with stdinargs options
		'--')
			option_args+=("$item" "$@")
			shift $#
			break
			;;
		*) option_args+=("$item") ;;
		esac
	done

	# construct command
	if [[ $option_sudo == 'yes' ]]; then
		function __mkdir {
			sudo-helper --reason='Your sudo/root/login password is required to ensure the directory exists:' -- mkdir -p -- "$@"
		}
	else
		function __mkdir {
			mkdir -p -- "$@"
		}
	fi

	# =====================================
	# Action

	function on_line {
		if [[ -d $1 ]] || __mkdir "$1"; then
			if [[ $option_quiet != 'yes' ]]; then
				fs-absolute -- "$1"
			fi
			return 0
		else
			return 1
		fi
	}

	stdinargs "${option_args[@]}"
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	echo_mkdir "$@"
fi
