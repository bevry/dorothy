#!/usr/bin/env bash

function twitter_helper() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Helpers for dealing with twitter.

			USAGE:
			twitter-helper <action>

			ACTIONS:
			advertisers [twitter_advertiser_list.pdf]
			    Extract sthe usernames from the list of advertisers.
				Fetch the list from: https://twitter.com/settings/your_twitter_data/audiences

			block ...<username>
			    Block's a user.

			mute ...<username>
			    Mute's a user.

			delete ...<tweet-id>
			    Delete's a tweet.

			tweets
			    Fetches the ids of your most recent tweets.

			EXAMPLE:
			# Block all advertisers
			twitter-helper advertisers | twitter-helper block

			# Delete recent tweets
			twitter-helper tweets | twitter-helper delete
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item action='' option_args=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			action="$item"
			option_args+=("$@")
			shift $#
			break
			;;
		esac
	done

	# check
	if test -z "$action"; then
		help "No action was provided"
	fi

	# =====================================
	# Dependencies

	setup-util-jq --quiet
	setup-util --quiet --cli=twurl GEM='twurl'

	if ruby --version | grep --quiet --extended-regexp --regexp='^ruby 3'; then
		cat <<-EOF >/dev/stderr
			[twitter-helper] requires [twurl] to run against ruby v2
			In your user source file, set the version

			    RUBY_VERSION='2.7'

			Then run [setup-ruby] and try again.
		EOF
		return 1
	fi

	if ! twurl accounts &>/dev/null; then
		cat <<-EOF >/dev/stderr
			Blocking Twitter users requires twurl to be authorized.
			Follow the instructions here: https://github.com/twitter/twurl#getting-started
			Then run the following once:

			    twurl authorize --consumer-key <api-key> --consumer-secret <api-secret-key>
		EOF
		return 1
	fi

	# =====================================
	# Actions

	function advertisers {
		local advertiser_list="${1:-'twitter_advertiser_list.pdf'}"
		if test ! -f "$advertiser_list"; then
			cat <<-EOF >/dev/stderr
				You need to download your advertiser list PDF file first.
				Get it from: https://twitter.com/settings/your_twitter_data/audiences
				Then run this command either in the same directory, or have the file as an argument.
			EOF
			return 1
		fi
		extract-pdf "$advertiser_list" '@([^@]+)'
	}
	function tweets {
		# must use id_str: https://github.com/twitter/twurl/issues/160#issuecomment-757491365
		twurl /1.1/statuses/user_timeline.json | jq -r '.[].id_str'
	}
	function delete() (
		# Doesn't work currently, until this issue is resolved:
		# https://github.com/twitter/twurl/issues/160
		source "$DOROTHY/sources/stdinargs.bash"
		function on_input {
			# https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-destroy-id
			# https://developer.twitter.com/en/docs/labs/tweets-and-users/api-reference
			local tweet_id="$1"
			eval_collapse \
				--pending="$(echo-style --bold="Deleting tweet $tweet_id...")" \
				--success="$(echo-style --success="Deleted tweet $tweet_id")" \
				--failure="$(echo-style --error="Failed to delete tweet $tweet_id")" \
				-- twurl -X POST "/1.1/statuses/destroy/$tweet_id.json"
		}
		stdinargs "$@"
	)
	function block() (
		source "$DOROTHY/sources/stdinargs.bash"
		function on_input {
			# https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/mute-block-report-users/api-reference/post-blocks-create
			local user_id="$1"
			eval_collapse \
				--pending="$(echo-style --bold="Blocking user $user_id...")" \
				--success="$(echo-style --success="Blocked user $user_id")" \
				--failure="$(echo-style --error="Failed to block user $user_id")" \
				-- twurl -d "screen_name=$1" '/1.1/blocks/create.json'
		}
		stdinargs "$@"
	)
	function mute() (
		source "$DOROTHY/sources/stdinargs.bash"
		function on_input {
			local user_id="$1"
			eval_collapse \
				--pending="$(echo-style --bold="Muting user $user_id...")" \
				--success="$(echo-style --success="Muted user $user_id")" \
				--failure="$(echo-style --error="Failed to mute user $user_id")" \
				-- twurl -d "screen_name=$user_id" '/1.1/mutes/users/create.json'
		}
		stdinargs "$@"
	)

	# =====================================
	# Act

	case "$action" in
	'advertisers' | 'tweets' | 'delete' | 'block' | 'mute')
		# trunk-ignore(shellcheck/SC2031)
		"$action" "${option_args[@]}"
		;;
	*)
		help "Unknown action: $action"
		;;
	esac
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	twitter_helper "$@"
fi
