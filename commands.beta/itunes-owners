#!/usr/bin/env bash
# dependencies: ffmpeg, php, pv

function itunes_owners() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Outputs ownership data for your iTunes media library.

			USAGE:
			itunes-owners
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Dependencies

	setup-util-pv --quiet

	# =====================================
	# Action

	local song_list owner_list missing_list database
	song_list="$(fs-temp --directory='itunes-owners' --file='songs.txt' --touch)"
	owner_list="$(fs-temp --directory='itunes-owners' --file='owner.txt' --touch)"
	missing_list="$(fs-temp --directory='itunes-owners' --file='missing.txt' --touch)"
	database="$HOME/Music/iTunes/iTunes Music Library.xml"
	echo-style --header2="Reading $database"

	# fetch songs
	local song_count=0
	function fetch_songs {
		echo-style --header2="Fetching songs to $song_list"
		echo-regexp -ong --regexp='<string>file://(.+)</string>' --replace='$1' <"$database" |
			echo-url-decode --stdin |
			echo-html-decode --stdin >"$song_list"
		song_count="$(wc -l <"$song_list" | xargs)"
		echo-style --good2="...found $song_count media files."
	}
	fetch_songs # @todo use eval-helper

	# fetch owners
	function fetch_owners {
		local song owner
		echo-style --header2="Fetching owners to $owner_list"
		while read -r song; do
			# check
			if [[ ! -f $song ]]; then
				echo-style "$song" ' ' --notice='is missing'
				__print_lines "$song" >>"$missing_list"
				continue
			fi

			# fetch owner
			# ffprobe doesn't support --
			owner="$(ffprobe -i "$song" 2>&1 | echo-regexp -o --regexp='account_id\s*:\s*(.+)' --replace='$1')"

			# write
			if [[ -n $owner ]]; then
				echo-style "$song" ' ' --green='owner is' ' ' --bold="$owner"
				printf '%s\t%s' "$owner" "$song" >>"$owner_list"
				# else
				# echo-style --notice='ðŸ‘† owner is missing'
			fi
		done <"$song_list" # | pv -s "$song_count" - >/dev/null
	}
	fetch_owners

	# extract
	local owners owner_count owned_count
	owners="$(cut -f1 -s -- "$owner_list" | echo-unique --stdin)"
	owner_count="$(__print_lines "$owners" | wc -l | xargs)"
	owned_count="$(wc -l <"$owner_list" | xargs)"

	echo-style --header2="$owner_count UNIQUE OWNERS:" --newline \
		--="$owners" --newline

	echo-style --header2="$owned_count OWNED MEDIA:"
	sort -- "$owner_list" | column -t -s $'\t'
	__print_line

	# wc with < to suppress filename
	echo-style --header2="$(wc -l <"$missing_list" | xargs) MISSING MEDIA:"
	sort -- "$missing_list"
	__print_line
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	itunes_owners "$@"
fi
