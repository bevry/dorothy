#!/usr/bin/env bash

function rm_vmware() (
	source "$DOROTHY/sources/bash.bash"

	local paths=(
		"/Library/Application Support/VMware"
		"/Library/Application Support/VMware Fusion"
		"/Library/Preferences/VMware Fusion"
		"$HOME/Library/Application Support/VMware Fusion"
		"$HOME/Library/Caches/com.vmware.fusion"
		"$HOME/Library/Preferences/VMware Fusion"
		"$HOME/Library/Preferences/com.vmware.fusion.LSSharedFileList.plist"
		"$HOME/Library/Preferences/com.vmware.fusion.LSSharedFileList.plist.lockfile"
		"$HOME/Library/Preferences/com.vmware.fusion.plist"
		"$HOME/Library/Preferences/com.vmware.fusion.plist.lockfile"
		"$HOME/Library/Preferences/com.vmware.fusionDaemon.plist"
		"$HOME/Library/Preferences/com.vmware.fusionDaemon.plist.lockfile"
		"$HOME/Library/Preferences/com.vmware.fusionStartMenu.plist"
		"$HOME/Library/Preferences/com.vmware.fusionStartMenu.plist.lockfile"
	)

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Completely removes VMware Fusion and its associated files.
			https://kb.vmware.com/selfservice/search.do?cmd=displayKC&docType=kc&docTypeID=DT_KB_1_1&externalId=1017838

			USAGE:
			rm-vmware

			FILES:
			$(echo-lines -- "${paths[@]}")
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Act

	fs-rm --quiet --no-confirm --sudo --optional -- "${paths[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	rm_vmware "$@"
fi
