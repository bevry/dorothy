#!/usr/bin/env bash

function trim_audio() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Trim superfluous audio streams from a video file.

			USAGE:
			trim-audio [<audio-stream-to-keep> --] ...<input-video-file>
		EOF
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item stream='' files=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		*)
			if test "${1-}" = '--'; then
				stream="$item"
				files+=("$@")
				shift "$#"
			else
				files+=("$item" "$@")
				shift "$#"
			fi
			;;
		esac
	done

	# check
	if test "${#files[@]}" -eq 0; then
		help 'No <input-video-file>s provided.'
	fi

	# =====================================
	# Act

	local input extension filename output
	for input in "${files[@]}"; do
		extension="$(fs-extension -- "$input")"
		filename="$(fs-filename -- "$input")"

		if test -z "$stream" -o "$stream" -eq -1; then
			output="$filename [no audio].$extension"
			fs-rm --quiet --no-confirm -- "$output"
			eval_collapse \
				--pending="$(echo-style --bold="Trimming audio from $input to $output")" \
				--success="$(echo-style --success="Trimming audio from $input to $output")" \
				--failure="$(echo-style --error="Failed to trim audio from $input to $output")" \
				-- ffmpeg -i "$input" -c copy -an "$output"
		else
			output="$filename [only audio stream $stream].$extension"
			fs-rm --quiet --no-confirm -- "$output"
			eval_collapse \
				--pending="$(echo-style --bold="Keep audio stream$stream from $input to $output")" \
				--success="$(echo-style --success="Keep audio stream$stream from $input to $output")" \
				--failure="$(echo-style --error="Failed to trim audio from $input to $output")" \
				-- ffmpeg -i "$input" -c copy -map 0:v -map "0:a:$stream" "$output"
		fi
	done
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	trim_audio "$@"
fi
