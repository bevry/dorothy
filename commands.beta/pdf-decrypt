#!/usr/bin/env bash

function pdf_decrypt() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Save decrypted copies of the PDF inputs.

			USAGE:
			pdf-decrypt [--password=<password>] ...<input>

			EXAMPLE:
			pdf-decrypt *.pdf
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item files=() password=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--password='*) password="${item#*=}" ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) files+=("$item") ;;
		esac
	done

	# =====================================
	# Dependencies

	if command-missing qpdf; then
		echo-style --error="[qpdf] is missing, install it first." >/dev/stderr
		return 1
	fi

	# =====================================
	# Act

	local input output current_password
	for input in "${files[@]}"; do
		output="$(fs-filename -- "$input") [decrypted].pdf"
		current_password="$(
			ask --required --password \
				--question="Enter the password for $input" \
				--default="$password"
		)"

		eval-helper --quiet \
			--pending="$(echo-style --bold="Decrypting " --code="$input" --bold=" to " --code="$output")" \
			--success="$(echo-style --bold+green="Decrypted " --code="$input" --bold=" to " --code="$output")" \
			--failure="$(echo-style --bold+red="Failed to decrypt " --code="$input" --bold=" to " --code="$output")" \
			-- qpdf -password="$current_password" -decrypt "$input" "$output" || :
	done

)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	pdf_decrypt "$@"
fi
