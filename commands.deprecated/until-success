#!/usr/bin/env bash

function until_success() (
	source "$DOROTHY/sources/bash.bash"
	dorothy-warnings add --code='until-success' --bold=' has been deprecated in favor of ' --code='eval-helper --until=success'

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Run a command until it succeeds.

			USAGE:
			until-success [...options] [--] <...command>

			OPTIONS:
			--interval=<seconds>
			    specify the interval between attempts, defaults to 10

			--forever
			    if not provided, the command will be repeated until a successful exit status
			    if provided, the command will be repeated indefinitely

			--clear
			    if provided, the output of the command will be cleared between attempts
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_cmd=() option_until_interval=10 option_until='success' option_quiet='no'
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--interval='*) option_until_interval="${item#*=}" ;;
		'--no-forever'* | '--forever'*)
			item="$(get-flag-value --affirmative --fallback="$option_forever" -- "$item")"
			if [[ $item == 'yes' ]]; then
				option_until='forever'
			fi
			;;
		'--no-clear'* | '--clear'*)
			option_quiet="$(get-flag-value --affirmative --fallback="$option_clear" -- "$item")"
			;;
		'--')
			option_cmd+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_cmd+=("$item") ;;
		esac
	done

	# =====================================
	# Action

	eval-helper --until="$option_until" --until-interval="$option_until_interval" --quiet="$option_quiet" -- "${option_cmd[@]}"
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	until_success "$@"
fi
