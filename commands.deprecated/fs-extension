#!/usr/bin/env bash

function fs_extension_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-style --h1="TEST: $0"

	eval-tester --stdout='c' -- \
		fs-extension -- 'dorothy/a.b.c'

	eval-tester --status=1 --ignore-stderr -- \
		fs-extension -- 'dorothy.a.b.c/a'

	echo-style --g1="TEST: $0"
	return 0
)
function fs_extension() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Get the extension of a basename.

			USAGE:
			fs-extension [--] ...<path>

			EXAMPLE:
			fs-extension .dorothy/a.b.c
			    c

		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_paths=()
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--path='*) option_paths+=("${item#*=}") ;;
		'--')
			option_paths+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_paths+=("$item") ;;
		esac
	done

	# check
	if [[ ${#option_paths[@]} -eq 0 ]]; then
		help 'No <path>s provided.'
	fi

	# =====================================
	# Action

	local path
	for path in "${option_paths[@]}"; do
		__get_substring_after_last "$path" '.'
	done
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		fs_extension_test
	else
		fs_extension "$@"
	fi
fi
