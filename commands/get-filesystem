#!/usr/bin/env bash

function get_filesystem() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Get the filesystem for a location.

			USAGE:
			get-filesystem [...options]

			OPTIONS:
			--source=<source>
			    A mount source.

			--target=<target>
			    A mount target.

			--device=<device>
			    A device.

			<path>
			    Attempts automation detection of appropriate type.
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# dependencies
	source "$DOROTHY/sources/ripgrep.bash"

	# helpers
	local got='no'
	function get_filesystem_from_source {
		if is-mac; then
			mount | rg --fixed-strings --regexp="$1 on " | rg --only-matching --regexp=' [(]([^ ,)]+)' --replace='$1'
		else
			mount | rg --fixed-strings --regexp="$1 on " | rg --only-matching --regexp='type ([^ ,]+)' --replace='$1'
		fi
		got='yes'
	}
	function get_filesystem_from_target {
		if is-mac; then
			mount | rg --fixed-strings --regexp=" on $1 " | rg --only-matching --regexp=' [(]([^ ,)]+)' --replace='$1'
		else
			mount | rg --fixed-strings --regexp=" on $1 " | rg --only-matching --regexp='type ([^ ,]+)' --replace='$1'
		fi
		got='yes'
	}
	function get_filesystem_from_device {
		get-devices --result=filesystem --node="$1"
		got='yes'
	}

	# process
	local item
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;

		'--source='*) get_filesystem_from_source "${item#*=}" ;;
		'--target='*) get_filesystem_from_target "${item#*=}" ;;
		'--device='*) get_filesystem_from_device "${item#*=}" ;;

		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if [[ -b $item ]]; then
				get_filesystem_from_device "$item"
			elif is-present -- "$item"; then
				get_filesystem_from_target "$item"
			else
				get_filesystem_from_source "$item"
			fi
			;;
		esac
	done

	if [[ $got == 'no' ]]; then
		echo-error 'No filesystem was found. Make sure you specify a location. E.g. ' --code='get-filesystem --target=/'
		return 1
	fi
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	get_filesystem "$@"
fi
