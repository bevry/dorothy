#!/usr/bin/env bash

function echo_escape_bash() (
	source "$DOROTHY/sources/stdinargs.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Escape the <...input> for usage inside bash.

			USAGE:
			echo-escape-bash [...options] [--] ...<input>
			echo-lines ...<input> | echo-escape-bash [...options]

			OPTIONS:
			$(stdinargs_options_help --)
		EOF
		return 22 # EINVAL 22 Invalid argument
	}

	# =====================================
	# Action

	# we could use @Q for this, but it is strange, so just use %q\n
	# bash-5.2$ printf '%q\n' " a'"
	# \ a\'
	# bash-5.2$ b=\ a\'
	# bash-5.2$ printf '%s\n' "[$b]"
	# [ a']
	# bash-5.2$ printf '%s\n' "${b@Q}"
	# ' a'\'''

	function on_input {
		printf '%q\n' "$@"
	}

	stdinargs "$@"
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	echo_escape_bash "$@"
fi
