#!/usr/bin/env bash
# trunk-ignore-all(shellcheck/SC2319)

function debug_terminal_stdin() (
	source "$DOROTHY/sources/bash.bash"

	# dependencies
	setup-util-file --quiet

	# =====================================

	local file
	file="$(fs-temp --directory='debug-tty-stdin' --file --extension='txt')"

	function r {
		local details="$1" status result
		__print_lines "$details"
		__print_lines '' "$details" >>"$file"
		file /dev/stdin >>"$file" || :
		file /proc/self/fd/0 >>"$file" || :
		file /dev/fd/0 >>"$file" || :

		status=0
		read -t 0 || status=$?
		__print_lines "read -t 0: $status" >>"$file"

		status=0
		[[ -t 0 ]] || status=$?
		__print_lines "[[ -t 0 ]]: $status" >>"$file"

		status=0
		[[ -p /dev/stdin ]] || status=$?
		__print_lines "[[ -p /dev/stdin ]]: $status" >>"$file"

		status=0
		[[ -c /dev/stdin ]] || status=$?
		__print_lines "[[ -c /dev/stdin ]]: $status" >>"$file"

		status=0
		[[ -r /dev/stdin ]] || status=$?
		__print_lines "[[ -r /dev/stdin ]]: $status" >>"$file"

		status=0
		[[ -w /dev/stdin ]] || status=$?
		__print_lines "[[ -w /dev/stdin ]]: $status" >>"$file"

		result=''
		status=0
		read -t 5 -rei def result || status=$?
		__print_lines "read -rei: $status: $result" >>"$file"

	}
	function s {
		__print_lines 'custom'
		#__print_line
		#:
	}
	function b {
		r "BACKGROUND TASK: $1" &
		wait $!
	}

	# STANDARD

	__print_line
	r 'DIRECT'

	__print_line
	{ s; } | r 'PIPE'
	__print_line
	{
		sleep 1
		s
	} | r 'DELAYED PIPE'

	__print_line
	r 'REDIRECTION' < <(s)
	__print_line
	r 'DELAYED REDIRECTION' < <(
		sleep 1
		s
	)

	# BACKGROUND

	__print_line
	b 'DIRECT'

	__print_line
	{ s; } | b 'PIPE'
	__print_line
	{
		sleep 1
		s
	} | b 'DELAYED PIPE' || :

	__print_line
	b 'REDIRECTION' < <(s)
	__print_line
	b 'DELAYED REDIRECTION' < <(
		sleep 1
		s
	)

	__print_lines '' 'DONE'
	echo-file -- "$file"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	debug_terminal_stdin "$@"
fi
