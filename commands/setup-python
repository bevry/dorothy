#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"
source "$DOROTHY/sources/config.sh"
load_dorothy_config 'setup.bash'
# ^ provides: PYTHON_INSTALL, PIP_INSTALL, PIPX_INSTALL

# todo: this is newer than commands/pipp and setup-util pip and pipx, so consider what to do with them

# python2, python3
echo -e "\nEnsuring python 2 and 3 are installed..."
env CLI=python \
	APK=python \
	APT=python \
	BREW=python \
	PACMAN=python \
	YUM=python \
	setup-util
env CLI=python3 \
	APK=python3 \
	APT='python3 python3-venv' \
	BREW=python3 \
	PACMAN=python3 \
	YUM=python3 \
	setup-util
# python3-venv for pipx
source "$DOROTHY/sources/environment.sh"

# pyenv
# PYENV_ROOT="${PYENV_ROOT:-"$HOME/.pyenv"}"
# echo -e "\nCleaning pyenv..."
# rm -Rf "$PYENV_ROOT"
# if test -n "${PYENV_VERSION-}"; then
# 	echo -e "\nEnsuring pyenv is latest..."
# 	fetch https://pyenv.run | bash
# 	source "$DOROTHY/sources/environment.sh"
# 	pyenv install "$PYENV_VERSION"
# fi
# source "$DOROTHY/sources/environment.sh"

# pip, pipx, user
function pip_install {
	local bin="$1"
	if command-exists "$bin"; then
		echo -e "\nInstalling pip for $bin..."
		local pip_installer="$(mktemp)"
		local python_version pip_install=() pipx_intall=()
		if test -v 'PYTHON_INSTALL'; then
			pip_install+=("${PYTHON_INSTALL[@]}")
		fi
		if test -v 'PIP_INSTALL'; then
			pip_install+=("${PIP_INSTALL[@]}")
		fi
		if get-python-version "$bin" '2.'; then
			python_version=2
			if test -v 'PYTHON2_PIP_INSTALL'; then
				pip_install+=("${PYTHON2_PIP_INSTALL[@]}")
			fi
			down 'https://bootstrap.pypa.io/pip/2.7/get-pip.py' --destination="$pip_installer"
		else
			python_version=3
			if test -v 'PYTHON3_PIP_INSTALL'; then
				pip_install+=("${PYTHON3_PIP_INSTALL[@]}")
			fi
			if test -v 'PIPX_INSTALL'; then
				pipx_install+=("${PIPX_INSTALL[@]}")
			fi
			down 'https://bootstrap.pypa.io/get-pip.py' --destination="$pip_installer"
		fi
		"$bin" "$pip_installer" --user
		rm "$pip_installer"
		source "$DOROTHY/sources/environment.sh"

		# echo -e "\nUpgrading pip for $bin..."
		# "$bin" -m pip install \
		# 	--user --upgrade --force-reinstall --no-warn-script-location \
		# 	pip setuptools
		# source "$DOROTHY/sources/environment.sh"

		echo -e "\nInstall ${#pip_install[@]} pip dependencies for $bin..."
		for item in "${pip_install[@]}"; do
			"$bin" -m pip install \
				--user --upgrade --force-reinstall --no-warn-script-location \
				"$item" || :
		done

		if test "$python_version" -eq 3; then
			echo -e "\nInstalling pipx for $bin..."
			"$bin" -m pip install \
				--user --upgrade --force-reinstall --no-warn-script-location \
				pipx || :
			source "$DOROTHY/sources/environment.sh"

			echo -e "\nInstall ${#pipx_install[@]} pipx dependencies for $bin..."
			for item in "${pipx_install[@]}"; do
				"$bin" -m pipx install --include-deps --force "$item" || :
			done
		fi
	fi
}
pip_install python
pip_install python2
pip_install python3

# done
echo -e '\nInstalled python, pyenv, pip, and pipx successfully. âœ…'
