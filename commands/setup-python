#!/usr/bin/env bash
# shellcheck disable=SC2164,SC1091,SC1090
source "$DOROTHY/sources/strict.bash"

# ✓✔☑
# todo: this is newer than commands/pipp and setup-util pip and pipx, so consider what to do with them

# =====================================
# Configuration

source "$DOROTHY/sources/config.sh"
load_dorothy_config 'setup.bash'
# ^ provides: PYTHON_INSTALL, PIP_INSTALL, PIPX_INSTALL

# =====================================
# Start

echo
echo-color --oh1 --h1='Setup Python' --ch1

# =====================================
# Install

echo-color --oh2 --h2="Install python" --ch2

# python2
env CLI=python \
	APK=python \
	APT=python \
	BREW=python \
	PACMAN=python \
	YUM=python \
	setup-util

# python3
env CLI=python3 \
	APK=python3 \
	APT=python3 \
	BREW=python3 \
	PACMAN=python3 \
	YUM=python3 \
	setup-util

# pipx dependencies
env OPTIONAL=yes NAME='python3-venv' \
	APT='python3-venv' \
	PACMAN='python-virtualenv' \
	setup-util

# refresh environment
source "$DOROTHY/sources/environment.sh"

echo-color --og2 --g2="Install python" --cg2

# =====================================
# PyEnv

# pyenv
# PYENV_ROOT="${PYENV_ROOT:-"$HOME/.pyenv"}"
# echo -e "\nCleaning pyenv..."
# rm -Rf "$PYENV_ROOT"
# if test -n "${PYENV_VERSION-}"; then
# 	echo -e "\nEnsuring pyenv is latest..."
# 	fetch https://pyenv.run | bash
# 	source "$DOROTHY/sources/environment.sh"
# 	pyenv install "$PYENV_VERSION"
# fi
# source "$DOROTHY/sources/environment.sh"

# =====================================
# Packages

# pip, pipx, user
function pip_install {
	local bin="$1" pip_installer_url pip_installer python_version pip_install=() pipx_install=()
	if ! command-exists "$bin"; then
		return 0
	fi

	# prepare
	pip_installer="$(mktemp --suffix='-get-pip.py')"
	if test -v 'PYTHON_INSTALL'; then
		pip_install+=("${PYTHON_INSTALL[@]}")
	fi
	if test -v 'PIP_INSTALL'; then
		pip_install+=("${PIP_INSTALL[@]}")
	fi
	if get-python-version "$bin" '2.'; then
		python_version=2
		if test -v 'PYTHON2_PIP_INSTALL'; then
			pip_install+=("${PYTHON2_PIP_INSTALL[@]}")
		fi
		pip_installer_url='https://bootstrap.pypa.io/pip/2.7/get-pip.py'
	else
		python_version=3
		if test -v 'PYTHON3_PIP_INSTALL'; then
			pip_install+=("${PYTHON3_PIP_INSTALL[@]}")
		fi
		if test -v 'PIPX_INSTALL'; then
			pipx_install+=("${PIPX_INSTALL[@]}")
		fi
		pip_installer_url='https://bootstrap.pypa.io/get-pip.py'
	fi

	# download pip
	echo-color --oh2 --h2="Download pip for $bin" --ch2
	eval-collapse -- down "$pip_installer_url" --destination="$pip_installer"
	echo-color --og2 --g2="Download pip for $bin" --cg2

	# install pip
	echo-color --oh2 --h2="Install pip for $bin" --ch2
	eval-collapse -- "$bin" "$pip_installer" --user
	source "$DOROTHY/sources/environment.sh"
	echo-color --og2 --g2="Install pip for $bin" --cg2

	# echo -e "\nUpgrading pip for $bin..."
	# "$bin" -m pip install \
	# 	--user --upgrade --force-reinstall --no-warn-script-location \
	# 	pip setuptools
	# source "$DOROTHY/sources/environment.sh"

	# install pip dependencies
	echo-color --oh2 --h2="Install ${#pip_install[@]} pip dependencies for $bin" --ch2
	for item in "${pip_install[@]}"; do
		eval-collapse \
			--success="$(echo-color --dim+green="   pip installed: $item")" \
			-- "$bin" -m pip install \
			--user --upgrade --force-reinstall --no-warn-script-location \
			"$item" || :
	done
	echo-color --og2 --g2="Install ${#pip_install[@]} pip dependencies for $bin" --cg2

	# pipx
	if test "$python_version" -eq 3; then
		# install pipx
		echo-color --oh2 --h2="Install pipx for $bin" --ch2
		eval-collapse -- "$bin" -m pip install \
			--user --upgrade --force-reinstall --no-warn-script-location \
			pipx || :
		source "$DOROTHY/sources/environment.sh"
		echo-color --og2 --g2="Install pipx for $bin" --cg2

		# install pipx dependencies
		echo-color --oh2 --h2="Install ${#pipx_install[@]} pipx dependencies for $bin" --ch2
		for item in "${pipx_install[@]}"; do
			eval-collapse \
				--success="$(echo-color --dim+green="   pipx installed: $item")" \
				-- "$bin" -m pipx install \
				--include-deps --force "$item" || :
		done
		echo-color --og2 --g2="Install ${#pipx_install[@]} pipx dependencies for $bin" --cg2
	fi
}

pip_install python
pip_install python2
pip_install python3

# =====================================
# Done

echo-color --og1 --g1='Setup Python' --cg1
