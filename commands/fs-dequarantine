#!/usr/bin/env bash

function fs_dequaratine() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Remove the quaratine flag from a path.

			USAGE:
			fs-dequarantine [--] ...<path>
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_paths=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--path='*) option_paths+=("${item#*=}") ;;
		'--')
			option_paths+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_paths+=("$item") ;;
		esac
	done

	# check
	if test "${#option_paths[@]}" -eq 0; then
		help 'No <path>s provided.'
	fi

	# =====================================
	# Action

	if ! is-mac || command-missing xattr; then
		return 0 # not needed
	fi

	function disable_quarantine_on_path {
		# https://apple.stackexchange.com/a/436677/15131
		# note that the -r option doesn't exist, will return [option -r not recognized] on Ventura and Sonoma
		# cannot just -d directly, as will get a [No such xattr: com.apple.quarantine] error, so check for it first, this induces no errors
		local path="$1"
		if test -r "$path"; then
			if xattr -l "$path" | grep --quiet --fixed-strings --regexp='com.apple.quarantine'; then
				xattr -d com.apple.quarantine "$path" >/dev/stderr
				return
			fi
		elif sudo-helper -- test -r "$path"; then
			if sudo-helper -- xattr -l "$path" | grep --quiet --fixed-strings --regexp='com.apple.quarantine'; then
				sudo-helper -- xattr -d com.apple.quarantine "$path" >/dev/stderr
				return
			fi
		fi
		return 0
	}

	local path
	for path in "${option_paths[@]}"; do
		disable_quarantine_on_path "$path"
	done
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	fs_dequaratine "$@"
fi
