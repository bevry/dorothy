#!/usr/bin/env bash

function setup_linux_raspi() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Configure Linux on Raspberry Pis to our expectations.

			USAGE:
			setup-linux-raspi [install|update]
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item action=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$action"; then
				action="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# =====================================
	# Checks

	# check that an accident has not occured
	if ! is-raspi; then
		echo-style --notice="[$0] is only intended to be run on Raspberry Pi systems, skipping." >/dev/stderr
		return 0
	fi

	# =====================================
	# Action

	# log
	echo-segment --h1='Raspberry Pi Essentials'

	# ensure raspi firmware is up to date
	# otherwise newer operating system releases can cause issues

	# install necessary packages
	if is-apt; then
		setup-util --name='Raspberry Pi Firmware' \
			APT='rpi-eeprom' # UBUNTU
		setup-util --name='Raspberry Pi Configurator' \
			APT='raspi-config' # UBUNTU

		# get the latest raspberry pi kernel, however this could introduce bugs
		# use to be necessary to fix this issue, but that is now in the stable kernel
		# https://bugs.launchpad.net/ubuntu/+source/linux-raspi/+bug/1946368/comments/48
		if test "$action" = 'install' && confirm --negative --ppid="$$" -- 'Install the proposed Raspberry Pi Kernel?' 'This can fix issues while introducing new issues. Install only if you are currently facing an issue.'; then
			setup-util --name='Proposed Raspberry Pi Kernel' \
				APT='linux-raspi' # UBUNTU
		fi

		# Various kernel modules have been moved from the linux-modules-raspi package in order to reduce the initramfs size. This results in several applications (most notably Docker, bug 1947601 1) failing due to missing kernel modules.
		# https://discourse.ubuntu.com/t/impish-indri-release-notes/21951
		# despite docs saying `linux-modules-extra-rapsi`, that doesn't exist, it is actually `linux-modules-extra-raspi` exists
		if test "$action" = 'install' && confirm --negative --ppid="$$" -- 'Install the extra Raspberry Pi Modules?' 'This can fix issues while introducing new issues. Install only if you need them, such as working with Docker.'; then
			# this should cooincide wiht setup-util-docker
			setup-util --optional --name='Raspberry Pi Modules' \
				APT='linux-modules-extra-raspi' # UBUNTU
		fi
	fi

	# ensure autoupdates on restart
	# don't actually do --enable, as it is not needed for this for some reason
	service-helper --ignore --unmask -- rpi-eeprom-update

	# prompt an update on next restart
	if sudo-helper -- rpi-eeprom-update -a | grep --fixed-strings --regexp=reboot; then
		print_line 'An eeprom update is pending for your Raspberry Pi, to continue further you must reboot your machine.'
		return 1
	fi

	echo-segment --g1='Raspberry Pi Essentials'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_linux_raspi "$@"
fi
