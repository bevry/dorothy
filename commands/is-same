#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# options
mapfile -t options < <(echo-before-separator "$@")
option_algorithm=''  # confirmed later, as may not be necessary if paths match
mapfile -t option_paths < <(echo-after-separator "$@")

# verify
if test "${#option_paths[@]}" -ne 2; then
	echo 'USAGE:' > /dev/stderr
	echo 'is-same [--algorithm=...] -- <first path> <second path>' > /dev/stderr
	exit 2
fi

# path checks
first_path="$(fs-absolute "${option_paths[0]}")"
second_path="$(fs-absolute "${option_paths[1]}")"

# same path
if test "$first_path" = "$second_path"; then
	echo "$first_path"
	echo "$second_path"
	echo "^ same because they are the same path"
	exit 0
fi

# same target
if test "$(fs-realpath "$first_path")" = "$(fs-realpath "$second_path")"; then
	echo "$first_path"
	echo "$second_path"
	echo "^ same because they are symlinked"
	exit 0
fi

# same structure
first_structure="$(fs-structure "$first_path")"
second_structure="$(fs-structure "$second_path")"
if test "$first_structure" != "$second_structure"; then
	echo "$first_path"
	echo "$first_structure"
	echo
	echo "$second_path"
	echo "$second_structure"
	echo
	echo "^ different because their structures differ"
	exit 1
fi

# checksum algo fetch
option_algorithm="$(get-flag-value algorithm -- "${options[@]}")"
option_algorithm="$(choose-option --question='Which checksum algorithm do you wish to use?' --filter="$option_algorithm" -- 'md5sum' 'shasum' 'sha256sum')"

# checksum, trim the filenames
mapfile -t checksums < <(checksum --no-name --action=summary --algorithm="$option_algorithm" -- "$first_path" "$second_path")  # instead of --no-name, `| cut -d' ' -f1` would have sufficed
echo-lines "${checksums[@]}"

# sanity
if test "${#checksums[@]}" -ne 2; then
	echo 'invalid amount of checksums'
	exit 1
fi

# same checksum
if test "${checksums[0]}" = "${checksums[1]}"; then
	echo "^ same because their checksums match"
	exit 0
fi

# otherwise
echo "^ different"
exit 1
