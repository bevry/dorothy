#!/usr/bin/env bash

function fs_size_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-style --h1="TEST: $0"

	eval-tester --ignore-stdout -- \
		fs-size --bytes -- "$0"

	eval-tester --ignore-stdout -- \
		fs-size --kilobytes -- "$0"

	eval-tester --ignore-stdout -- \
		fs-size --megabytes -- "$0"

	echo-style --g1="TEST: $0"
	return 0
)
function fs_size() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Get the size of a path.

			USAGE:
			fs-bytes [...options] [--] ...<path>

			OPTIONS:
			--bytes
			    Get the size in bytes.
			--kilobytes
			    Get the size in kilobytes.
			--megabytes
			    Get the size in megabytes.
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_paths=() option_denomination=''
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--path='*) option_paths+=("${item#*=}") ;;
		'--bytes' | '--denomination=bytes') option_denomination='bytes' ;;
		'--kilobytes' | '--denomination=kilobytes') option_denomination='kilobytes' ;;
		'--megabytes' | '--denomination=megabytes') option_denomination='megabytes' ;;
		'--')
			option_paths+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_paths+=("$item") ;;
		esac
	done

	# check
	if [[ ${#option_paths[@]} -eq 0 ]]; then
		help 'No <path>s provided.'
	fi

	# =====================================
	# Dependencies

	setup-util-dust --quiet

	# helpers
	case "$denomination" in
	bytes)
		function __size {
			# bsd (not equivalent to GNU, reports blocks instead of bytes): du -sAB1 "$path"
			# gnu: du --summarize --apparent-size --block-size=1 "$path" | echo-regexp -o '^\d+'
			dust -sbcP -ob -d0 -- "$path" | echo-regexp -fo '^(\d+)B' '$1'
		}
		;;
	kilobytes)
		function __size {
			dust -sbcP -ok -d0 -- "$path" | echo-regexp -fo '^(\d+)K' '$1'
		}
		;;
	megabytes)
		function __size {
			dust -sbcP -om -d0 -- "$path" | echo-regexp -fo '^(\d+)M' '$1'
		}
		;;
	*)
		function __size {
			dust -sbcP -d0 -- "$path" | echo-regexp -fo '^(\w+) ' '$1'
		}
		;;
	esac

	# =====================================
	# Action

	# get apparent size in bytes
	local path
	for path in "${option_paths[@]}"; do
		__size "$path"
	done
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		fs_size_test
	else
		fs_size "$@"
	fi
fi
