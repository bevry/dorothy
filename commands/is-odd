#!/usr/bin/env bash

function is_odd_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-style --h1="TEST: $0"

	eval-tester --name='no args' --status=22 --ignore-stderr \
		-- is-odd --

	eval-tester --name='odd numbers are odd' \
		-- is-odd -- 1 3 5 7 9 11

	eval-tester --name='megative odd numbers are odd' \
		-- is-odd -- -1 -3 -5 -7 -9 -11

	eval-tester --name='even numbers are not odd' --status=1 \
		-- is-odd -- 2

	eval-tester --name='even numbers are not odd' --status=1 \
		-- is-odd -- 2 4

	eval-tester --name='zero is not odd' --status=1 \
		-- is-odd -- 0 -0

	eval-tester --name='decimals are invalid' --status=22 --ignore-stderr \
		-- is-odd -- 1.1

	eval-tester --name='odd then even is standard failure' --status=1 \
		-- is-odd -- 1 2

	eval-tester --name='odd then even then invalid is invalid failure' --status=22 --ignore-stderr \
		-- is-odd -- 1 2 1.1

	eval-tester --name='odd then invalid then odd is invalid failure' --status=22 --ignore-stderr \
		-- is-odd -- 1 1.1 2

	echo-style --g1="TEST: $0"
	return 0
)
function is_odd() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	# help
	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Checks if the <input> is an odd integer.
			Companion to [is-even]. Equivalent to a [is-odd-integer].

			USAGE:
			is-odd [...options] [--] <input>

			OPTIONS:
			<input>
			    Validate this <input>

			RETURNS:
			[0] if all <input>s are odd integers
			[1] if any <input>s are not odd integers
			[22] if any <input>s are not integers
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_inputs=()
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			option_inputs+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_inputs+=("$item") ;;
		esac
	done

	# verify
	if [[ ${#option_inputs[@]} -eq 0 ]]; then
		help 'No <input>s provided'
	fi

	# verify
	if ! is-integer -- "${option_inputs[@]}"; then
		help '<input>s must be integers'
	fi

	# =====================================
	# Action

	local input
	for input in "${option_inputs[@]}"; do
		[[ $((input % 2)) -ne 0 ]] || return # explicit return with [[ required for bash v3
	done
	return 0
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		is_odd_test
	else
		is_odd "$@"
	fi
fi
