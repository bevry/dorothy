#!/usr/bin/env bash

function is_odd() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	# help
	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Checks if the <input> is an odd number.

			USAGE:
			is-odd [...options] [--] <input>

			OPTIONS:
			<input>
			    Verify this <input> is an odd number

			RETURNS:
			[0] if all <input>s were odd numbers
			[1] if any <input>s were not odd numbers
			[2] if any <input>s were not numbers
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_inputs=()
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			option_inputs+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_inputs+=("$item") ;;
		esac
	done

	# verify
	if [[ ${#option_inputs[@]} -eq 0 ]]; then
		help "No <input>s provided"
	fi

	# verify
	if ! is-number -- "${option_inputs[@]}"; then
		return 2
	fi

	# =====================================
	# Action

	local input
	for input in "${option_inputs[@]}"; do
		[[ "$((input % 2))" -ne 0 ]] || return # explicit return with [[ required for bash v3
	done
	return 0
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	is_odd "$@"
fi
