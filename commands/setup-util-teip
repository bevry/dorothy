#!/usr/bin/env bash

# https://github.com/greymd/teip
# cut alternative

# https://github.com/greymd/teip/releases
# teip-2.3.2.aarch64-apple-darwin.tar.gz
# teip-2.3.2.aarch64-unknown-linux-musl.deb
# teip-2.3.2.aarch64-unknown-linux-musl.rpm
# teip-2.3.2.aarch64-unknown-linux-musl.tar.gz
# teip-2.3.2.arm-unknown-linux-gnueabihf.deb
# teip-2.3.2.arm-unknown-linux-gnueabihf.tar.gz
# teip-2.3.2.x86_64-apple-darwin.tar.gz
# teip-2.3.2.x86_64-unknown-linux-musl.deb
# teip-2.3.2.x86_64-unknown-linux-musl.rpm
# teip-2.3.2.x86_64-unknown-linux-musl.tar.gz
# teip_installer-2.3.2-x86_64-pc-windows-msvc.exe

# arm64
# https://github.com/greymd/teip/issues/23

# https://repology.org/project/teip/versions

function setup_util_teip() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance for detectable utilities with conditional assets
	if setup-util "$@" --check --cli=teip; then
		return 0
	fi

	# aur is outddated
	local arch options=(
		--cli='teip'
		"$@"
		BREW='greymd/tools/teip'
		CARGO='teip'
		NIX='teip'
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='greymd/teip' \
			--latest \
			--asset-regexp="$(echo-escape-regexp -- "$1")$" | echo-first-line || :
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_ARCHIVE_GLOB='bin/teip'
		)
	}
	function add_deb_option {
		options+=(
			DEB="$(get_github_asset_url "$1")"
		)
	}
	function add_rpm_option {
		options+=(
			RPM="$(get_github_asset_url "$1")"
		)
	}
	arch="$(get-arch)"
	if is-mac; then
		if test "$arch" = 'a64'; then
			add_download_option '.aarch64-apple-darwin.tar.gz'
		elif test "$arch" = 'x64'; then
			add_download_option '.x86_64-apple-darwin.tar.gz'
		fi
	elif is-linux; then
		if test "$arch" = 'a64'; then
			add_rpm_option '.aarch64-unknown-linux-musl.rpm'
			add_deb_option '.aarch64-unknown-linux-musl.deb'
			add_download_option '.aarch64-unknown-linux-musl.tar.gz'
		elif test "$arch" = 'a32'; then
			add_deb_option '.arm-unknown-linux-gnueabihf.deb'
			add_download_option '.arm-unknown-linux-gnueabihf.tar.gz'
		elif test "$arch" = 'x64'; then
			add_rpm_option '.x86_64-unknown-linux-musl.rpm'
			add_deb_option '.x86_64-unknown-linux-musl.deb'
			add_download_option '.x86_64-unknown-linux-musl.tar.gz'
		fi
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_teip "$@"
fi
