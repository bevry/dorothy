#!/usr/bin/env bash

function setup_mac_appstore() (
	source "$DOROTHY/sources/bash.bash"
	__require_array 'mapfile' 'empty'

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			USAGE:
			setup-mac-appstore
			# ^ install using [MAS_INSTALL] from your [setup.bash] configuration file

			setup-mac-appstore -- ...<name/id>
			# ^ install the specified Mac App Store apps

			setup-mac-appstore --configure
			# ^ Prompts to configure [MAS_INSTALL] with what you currently have installed.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_install='no' option_upgrade='no' option_configure='no' packages=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-install'* | '--install'*)
			option_install="$(get-flag-value --affirmative --fallback="$option_install" -- "$item")"
			;;
		'--no-upgrade'* | '--upgrade'*)
			option_upgrade="$(get-flag-value --affirmative --fallback="$option_upgrade" -- "$item")"
			;;
		'--no-configure'* | '--configure'*)
			option_configure="$(get-flag-value --affirmative --fallback="$option_configure" -- "$item")"
			;;
		'--')
			packages+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Checks

	# check that an accident has not occured
	if ! is-mac; then
		echo-style --notice="[$0] is only intended to be run on macOS systems, skipping." >/dev/stderr
		return 0
	fi

	# =====================================
	# Configuration

	source "$DOROTHY/sources/config.sh"

	# setup.bash provides:
	local MAS_INSTALL=() # tupe array of id, label
	local MAS_UPGRADE='no'
	load_dorothy_config 'setup.bash'

	# =====================================
	# Action

	# log
	echo-style --h1="Mac App Store"

	# dependencies
	setup-util-mas --quiet

	# action
	if test "${#packages[@]}" -ne 0; then
		# use args
		setup-util --installer=MAS -- "${packages[@]}"
	elif test "${#MAS_INSTALL[@]}" -ne 0 -a "$option_install" = 'yes'; then
		# select packages
		local choices
		mapfile -t choices < <(
			choose --multi \
				--question="Which Mac App Store apps would you like to install?" \
				--label -- "${MAS_INSTALL[@]}"
		)
		setup-util --installer=MAS -- "${choices[@]}"
	fi

	# upgrade
	if test "$option_upgrade" = 'yes' -a "$MAS_UPGRADE" = 'yes'; then
		# upgrade
		eval-helper --no-quiet --wrap \
			-- mas upgrade || :
	fi

	# configure
	if test "$option_configure" = 'yes'; then
		# update MAS_INSTALL with all that are installed
		local id name
		while read -r id name; do
			if ! is-needle --needle="$id" -- "${MAS_INSTALL[@]}"; then
				MAS_INSTALL+=("$id" "$name")
			fi
		done <<<"$(mas list | cut -w -f1,2 | sort --ignore-case -k 2)"

		# save
		dorothy-config 'setup.bash' -- \
			--field='MAS_INSTALL' --columns=2 --array="$(__print_lines "${MAS_INSTALL[@]}" | sort --ignore-case -k 2)"
	fi

	# log
	echo-style --g1="Mac App Store"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_mac_appstore "$@"
fi
