#!/usr/bin/env bash

function until_success() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Run a command until it succeeds.

			USAGE:
			until-success [...options] [--] <...command>

			OPTIONS:
			--interval=<seconds>
			    specify the interval between attempts, defaults to 10

			--forever
			    if not provided, the command will be repeated until a successful exit status
			    if provided, the command will be repeated indefinitely

			--clear
			    if provided, the output of the command will be cleared between attempts
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_cmd=() option_interval=10 option_forever='no' option_clear='no'
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--interval='*) option_interval="${item#*=}" ;;
		'--no-forever'* | '--forever'*)
			option_forever="$(get-flag-value --affirmative --fallback="$option_forever" -- "$item")"
			;;
		'--no-clear'* | '--clear'*)
			option_clear="$(get-flag-value --affirmative --fallback="$option_clear" -- "$item")"
			;;
		'--')
			option_cmd+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_cmd+=("$item") ;;
		esac
	done

	# check
	if test "${#option_cmd[@]}" -eq 0; then
		help 'No <option_cmd> was provided.'
	fi

	# =====================================
	# Action

	local title
	title="$(echo-escape-newlines -- "${option_cmd[@]}" | echo-quote --stdin | echo-join ' ' --stdin)"

	function attempt {
		local attempt_status attempt_output=''
		echo-element --open="$title"
		if test "$option_clear" = 'yes'; then
			eval_capture --statusvar=attempt_status --outputvar=attempt_output -- "$@"
			print_line "$attempt_output"
		else
			eval_capture --statusvar=attempt_status -- "$@"
		fi
		echo-element --close="$title" --status="$attempt_status"
		if test "$option_forever" = 'yes' -o "$attempt_status" -ne 0; then
			waiter "$option_interval" --message="$(echo-style --notice='Next attempt in %s...')"
			if test "$option_clear" = 'yes'; then
				echo-clear-lines --stdin <<<$'\n'"$attempt_output"$'\n'
			fi
			attempt "$@"
		fi
	}
	attempt "${option_cmd[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	until_success "$@"
fi
