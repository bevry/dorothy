#!/usr/bin/env bash
source "$DOROTHY/sources/essentials.sh"
source "$DOROTHY/sources/strict.bash"

# Install go if necessary
echo -e "\nEnsuring go is installed..."
env CLI=go \
	SNAP='go' \
	SNAP_CLASSIC='yes' \
	BREW='go' \
	setup-util

# Reload paths
echo -e '\nReload paths to ensure go is detected...'
source "$DOROTHY/sources/paths.sh"

# Check
if test -n "${GOPATH-}"; then
	mkdir -p "$GOPATH"
fi

# Install package helper
function act() {
	echo -e "\nInstalling $# go packages..."
	for arg in "$@"; do
		# don't fail if one of the packages fails to install
		env NAME="go:$arg" GO="$arg" setup-util go || :
	done
}

# Install packages
if test -v 'GO_INSTALL'; then
	act "${GO_INSTALL[@]}"
else
	echo
	echo "Specify [GO_INSTALL] in your dorothy user configuration to automatically install go packages."
fi

# Update
if confirm-negative "\nUpdate all go packages?"; then
	go get -u -v all || :
fi

# Linting
if confirm-negative "\nInstall go linting packages?"; then
	# https://github.com/golang/vscode-go/blob/master/docs/tools.md
	# https://github.com/golang/tools/blob/master/gopls/README.md
	pkgs=(
		golang.org/x/tools/gopls@latest
		github.com/go-delve/delve/cmd/dlv@latest
		github.com/uudashr/gopkgs/cmd/gopkgs
		github.com/ramya-rao-a/go-outline
		github.com/haya14busa/goplay
		github.com/haya14busa/goplay/cmd/goplay
		github.com/fatih/gomodifytags
		github.com/josharian/impl
		github.com/cweill/gotests/...
	)
	goinstall "${pkgs[@]}"
	if command-exists gometalinter; then
		gometalinter --install || :
	fi
fi

echo -e "\nInstalled go successfully. âœ…"
