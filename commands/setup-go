#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# =====================================
# Configuration

source "$DOROTHY/sources/config.sh"
load_dorothy_config 'setup.bash'
if test ! -v 'GO_INSTALL'; then
	GO_INSTALL=()
fi

# =====================================
# Start

echo
echo-color --oh1 --h1='Setup Go' --ch1

# =====================================
# Install

setup-util-go
source "$DOROTHY/sources/environment.sh"

# =====================================
# Adjustments

if confirm-negative "Do you also want to install go linting packages? This is desired if you plan to code with go."; then
	# https://github.com/golang/vscode-go/blob/master/docs/tools.md
	# https://github.com/golang/tools/blob/master/gopls/README.md
	GO_INSTALL+=(
		golang.org/x/tools/gopls
		github.com/go-delve/delve/cmd/dlv
		# github.com/uudashr/gopkgs/cmd/gopkgs
		github.com/ramya-rao-a/go-outline
		# github.com/haya14busa/goplay/cmd/goplay
		github.com/fatih/gomodifytags
		github.com/josharian/impl
		github.com/cweill/gotests/...
	)
fi

# =====================================
# Packages

function go_install() {
	local total="$#" pass=0 fail=0
	echo-color --h2="Install $total go packages..."
	for item in "$@"; do
		if env NAME="go:$item" GO="$item" setup-util go; then
			pass=$((pass + 1))
		else
			fail=$((fail + 1))
		fi
	done
	if test "$fail" -ne 0; then
		echo-color \
			--e2="Installed $pass of $total go packages, $fail failed." $'\n' \
			--e2='You will need to figure out the failures later.'
	else
		echo-color --g2="Installed $pass of $total go packages, none failed."
	fi
}
go_install "${GO_INSTALL[@]}"

# =====================================
# Linting

if command-exists gometalinter; then
	echo-color --h2="Completing [gometalinter] installation..."
	gometalinter --install || :
fi

# =====================================
# Done

echo-color --og1 --g1='Setup Go' --cg1
