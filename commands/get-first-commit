#!/usr/bin/env bash

# @todo this command needs a major rework

function get_first_commit() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Get the first commit of a repository.

			USAGE:
			get-first-commit [...options] <repo>

			OPTIONS:
			<repo> | --repo=<repo> | --slug=<repo>
			    The repository slug or url to get the first commit of.
			    Defaults to using the current working directory.
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_repo='' option_open=''
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--repo='* | '--slug='*) option_repo="${item#*=}" ;;
		'--no-open'* | '--open'*)
			option_open="$(get-flag-value --affirmative --fallback="$option_open" -- "$item")"
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if [[ -z $option_repo ]]; then
				option_repo="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# open
	if [[ -z $option_open ]]; then
		if is-headful; then
			option_open='yes'
		else
			option_open='no'
		fi
	fi

	# =====================================
	# Action

	# helper
	function act {
		if [[ $option_open == 'no' ]]; then
			git-helper first-commit-entry
		else
			local url
			url="$(git-helper first-commit-url)"
			open "$url"
		fi
	}

	local tempdir
	if [[ -n $option_repo ]]; then
		# dependencies
		setup-util-gh --quiet

		# clone
		tempdir="$(mktemp -d)"
		gh repo clone "$option_repo" "$tempdir" -- --quiet
		cd "$tempdir"
		act
		fs-rm --quiet --no-confirm -- "$tempdir"
	else
		act
	fi
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	get_first_commit "$@"
fi
