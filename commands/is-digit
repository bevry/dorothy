#!/usr/bin/env bash

function is_digit_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-style --h1="TEST: $0"

	eval-tester --name='0-9 ARE a digits' \
		-- is-digit -- 0 1 2 3 4 5 6 7 8 9

	eval-tester --name='decimal IS NOT a digit' --status=1 \
		-- is-digit -- 0.

	eval-tester --name='proper decimal IS NOT a digit' --status=1 \
		-- is-digit -- 0.1

	eval-tester --name='negative IS NOT a digit' --status=1 \
		-- is-digit -- -1

	eval-tester --name='dash IS NOT a digit' --status=1 \
		-- is-digit -- -1

	eval-tester --name='letter IS NOT a digit' --status=1 \
		-- is-digit -- a

	eval-tester --name='empty IS NOT a digit' --status=1 \
		-- is-digit -- ''

	eval-tester --name='1a IS NOT a digit' --status=1 \
		-- is-digit -- '1a'

	echo-style --g1="TEST: $0"
	return 0
)
function is_digit() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	# help
	function help {
		cat <<-EOF >&2
			ABOUT:
			Checks if the <input> is a single digit (0-9).
			Companion to [is-number] and [is-integer].

			USAGE:
			is-digit [...options] [--] <input>

			OPTIONS:
			<input>
			    Verify this <input> is a valid digit

			RETURNS:
			[0] if all <input>s are valid digits
			[1] if any <input>s are not valid digits
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_inputs=()
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			option_inputs+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_inputs+=("$item") ;;
		esac
	done

	# verify
	if [[ ${#option_inputs[@]} -eq 0 ]]; then
		help 'No <input>s provided.'
	fi

	# =====================================
	# Action

	local input
	for input in "${option_inputs[@]}"; do
		[[ $input =~ ^[0-9]$ ]] || return # explicit return with [[ required for bash v3
	done
	return 0
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		is_digit_test
	else
		is_digit "$@"
	fi
fi
