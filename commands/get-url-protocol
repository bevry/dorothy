#!/usr/bin/env bash

function get_url_protocol_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-style --h1="TEST: $0"

	eval-tester --name='ok using arguments' --stdout='https' \
		-- get-url-protocol -- 'https://bevry.me'

	{
		printf '%s' 'https://bevry.me'
	} | eval-tester --name='ok using stdin' --stdout='https' \
		-- get-url-protocol --stdin

	eval-tester --name='not ok using arguments' --ignore-stderr --status=1 \
		-- get-url-protocol -- 'bevry.me'

	{
		printf '%s' 'bevry.me'
	} | eval-tester --name='not ok using stdin' --ignore-stderr --status=1 \
		-- get-url-protocol --stdin

	echo-style --g1="TEST: $0"
	return 0
)
function get_url_protocol() (
	source "$DOROTHY/sources/stdinargs.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Get the protocol of URL

			USAGE:
			get-url-protocol [...options] [--] ...<input>
			echo-lines ...<input> | get-url-protocol [...options]

			OPTIONS:
			$(stdinargs_options_help --)

			EXAMPLE:

			get-url-protocol -- 'https://bevry.me'

			    https
			    # exit status: 0

			printf '%s' 'https://bevry.me' | get-url-protocol --stdin

			    https
			    # exit status: 0

		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# =====================================
	# Action

	local deno_script
	deno_script="$(type -P 'get-url-protocol.ts')"

	function on_input {
		"$deno_script" "$1"
		# echo-regexp -f '^([a-z]+)://.*$' '$1' -- "$1"
	}

	stdinargs "$@"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	if test "$*" = '--test'; then
		get_url_protocol_test
	else
		get_url_protocol "$@"
	fi
fi
