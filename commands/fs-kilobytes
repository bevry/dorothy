#!/usr/bin/env bash

function fs_kilobytes() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Get the size of a path in kilobytes.

			USAGE:
			fs-kilobytes [--] ...<path>
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# options
	local item option_paths=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--path='*) option_paths+=("${item#*=}") ;;
		'--')
			option_paths+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_paths+=("$item") ;;
		esac
	done

	# check
	if test "${#option_paths[@]}" -eq 0; then
		help 'No <path>s provided.'
	fi

	# =====================================
	# Action

	# get size in kilobytes
	local path bytes kilobytes
	for path in "${option_paths[@]}"; do
		bytes="$(fs-bytes -- "$path")"
		kilobytes="$((bytes / 1024))"
		print_line "$kilobytes"
	done
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	fs_kilobytes "$@"
fi
