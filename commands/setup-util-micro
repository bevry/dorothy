#!/usr/bin/env bash

# https://micro-editor.github.io
# https://github.com/zyedidia/micro

# https://github.com/zyedidia/micro/releases
# micro-2.0.11-amd64.deb
# micro-2.0.11-freebsd32.tar.gz
# micro-2.0.11-freebsd64.tar.gz
# micro-2.0.11-linux-arm.tar.gz
# micro-2.0.11-linux-arm64.tar.gz
# micro-2.0.11-linux32.tar.gz
# micro-2.0.11-linux64-static.tar.gz
# micro-2.0.11-linux64.tar.gz
# micro-2.0.11-macos-arm64.tar.gz
# micro-2.0.11-netbsd32.tar.gz
# micro-2.0.11-netbsd64.tar.gz
# micro-2.0.11-openbsd32.tar.gz
# micro-2.0.11-openbsd64.tar.gz
# micro-2.0.11-osx.tar.gz
# micro-2.0.11-win32.zip
# micro-2.0.11-win64.zip

# @todo support bsd

# https://packages.debian.org/sid/amd64/micro/filelist
# /usr/bin/micro

function setup_util_micro() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance for detectable utilities with conditional assets
	if setup-util "$@" --check --cli=micro; then
		return 0
	fi

	# no apk, zypper
	local arch options=(
		--cli='micro'
		"$@"
		APT='micro' # UBUNTU
		AUR='micro' # ARCH
		BREW='micro'
		BSD='micro'
		CHOCO='micro'
		EOPKG='micro' # SOLUS
		INSTALLER='https://getmic.ro'
		PORT='micro'
		RPM='micro' # FEDORA
		SCOOP='micro'
		SNAP='micro --classic'
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='zyedidia/micro' \
			--latest \
			--asset-regexp="$(echo-escape-regexp -- "$1")" | echo-first-line || :
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_ARCHIVE_GLOB="*/$2"
		)
	}
	function add_deb_option {
		options+=(
			DEB="$(get_github_asset_url "$1")"
		)
	}
	arch="$(get-arch)"
	if is-mac; then
		add_download_option '-osx.tar.gz' 'micro'
	elif is-linux; then
		if test "$arch" = 'a64'; then
			add_download_option '-linux-arm64.tar.gz' 'micro'
		elif test "$arch" = 'a32'; then
			add_download_option '-linux-arm.tar.gz' 'micro'
		elif test "$arch" = 'x64'; then
			add_deb_option '-amd64.deb'
			add_download_option '-linux64.tar.gz' 'micro'
		elif test "$arch" = 'x32'; then
			add_download_option '-linux32.tar.gz' 'micro'
		fi
	elif is-wsl; then
		if test "$arch" = 'x64'; then
			add_download_option '-win64.zip' 'micro.exe'
		elif test "$arch" = 'x32'; then
			add_download_option '-win32.zip' 'micro.exe'
		fi
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_micro "$@"
fi
