#!/usr/bin/env bash

# https://github.com/schollz/croc

# https://github.com/schollz/croc/releases/tag/v10.2.1
# croc_v10.2.1_DragonFlyBSD-64bit.tar.gz
# croc_v10.2.1_FreeBSD-64bit.tar.gz
# croc_v10.2.1_FreeBSD-ARM64.tar.gz
# croc_v10.2.1_Linux-32bit.tar.gz
# croc_v10.2.1_Linux-64bit.tar.gz
# croc_v10.2.1_Linux-ARM.tar.gz
# croc_v10.2.1_Linux-ARM64.tar.gz
# croc_v10.2.1_Linux-ARMv5.tar.gz
# croc_v10.2.1_macOS-64bit.tar.gz
# croc_v10.2.1_macOS-ARM64.tar.gz
# croc_v10.2.1_NetBSD-32bit.tar.gz
# croc_v10.2.1_NetBSD-64bit.tar.gz
# croc_v10.2.1_NetBSD-ARM64.tar.gz
# croc_v10.2.1_OpenBSD-64bit.tar.gz
# croc_v10.2.1_OpenBSD-ARM64.tar.gz
# croc_v10.2.1_src.tar.gz
# croc_v10.2.1_Windows-32bit.zip
# croc_v10.2.1_Windows-64bit.zip
# croc_v10.2.1_Windows-ARM.zip
# croc_v10.2.1_Windows-ARM64.zip
# croc_v10.2.1_Windows7-32bit.zip
# croc_v10.2.1_Windows7-64bit.zip

# https://repology.org/project/croc/versions

function setup_util_croc() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance for detectable utilities with conditional assets
	if setup-util --check --cli=croc "$@"; then
		return 0
	fi

	# setup
	local arch options=(
		--name='croc'
		--cli='z'
		"$@"
		BREW='croc'
		CHOCO='croc'
		CONDA_CHANNEL='conda-forge'
		CONDA='croc'
		DNF='croc'
		EMERGE='croc' # GENTOO
		GO='github.com/schollz/croc/v10@latest'
		NIX='croc'
		PACMAN='croc'
		PORT='croc'
		SCOOP='croc'
		WINGET='schollz.croc'
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='schollz/croc' \
			--latest \
			--asset-regexp="$(echo-escape-regexp -- "$1")$" | echo-first-line || :
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_ARCHIVE_GLOB="$2"
		)
	}
	arch="$(get-arch)"
	if is-mac; then
		if [[ $arch == 'a64' ]]; then
			add_download_option '_macOS-ARM64.tar.gz' 'croc'
		elif [[ $arch == 'x64' ]]; then
			add_download_option '_macOS-64bit.tar.gz' 'croc'
		fi
	elif is-linux; then
		if [[ $arch == 'a64' ]]; then
			add_download_option '_Linux-ARM64.tar.gz' 'croc'
		elif [[ $arch == 'a32' ]]; then
			add_download_option '-ARM.tar.gz' 'croc'
		elif [[ $arch == 'x64' ]]; then
			add_download_option '_Linux-64bit.tar.gz' 'croc'
		elif [[ $arch == 'x32' ]]; then
			add_download_option '_Linux-32bit.tar.gz' 'croc'
		fi
	elif is-wsl; then
		if [[ $arch == 'a64' ]]; then
			add_download_option '_Windows-ARM64.zip' 'croc.exe'
		elif [[ $arch == 'a32' ]]; then
			add_download_option '_Windows-ARM.zip' 'croc.exe'
		elif [[ $arch == 'x64' ]]; then
			add_download_option '_Windows-64bit.zip' 'croc.exe'
		elif [[ $arch == 'x32' ]]; then
			add_download_option '_Windows-32bit.zip' 'croc.exe'
		fi
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	setup_util_croc "$@"
fi
