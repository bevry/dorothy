#!/usr/bin/env bash

function is_non_affirmative() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Check if <input> is a non-affirmative value.

			USAGE:
			is-non-affirmative [...options] [--] ...<input>

			OPTIONS:
			<input>
			    Input to check is a non-affirmative value.

			--ignore-empty:
			    Ignore/skip empty values.

			RETURNS:
			[0] if all <input>s were non-affirmative
			[1] if any <input> was affirmative
			[91] if invalid values were provided, or no <input>s were provided
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_inputs=() option_ignore_empty='no'
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-ignore-empty'* | '--ignore-empty'*)
			option_ignore_empty="$(get-flag-value --affirmative --fallback="$option_ignore_empty" -- "$item")"
			;;
		'--')
			option_inputs+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		'') ;; # ignore empty values
		*) option_inputs+=("$item") ;;
		esac
	done

	# =====================================
	# Action

	local input had_non_affirmative='no'
	for input in "${option_inputs[@]}"; do
		case "$input" in
		'Y' | 'y' | 'YES' | 'yes' | 'TRUE' | 'true') return 1 ;;
		'N' | 'n' | 'NO' | 'no' | 'FALSE' | 'false') had_non_affirmative='yes' ;;
		'')
			if test "$option_ignore_empty" = 'yes'; then
				continue
			else
				return 91 # ENOMSG 91 No message of desired type
			fi
			;;
		*)
			return 91 # ENOMSG 91 No message of desired type
			;;
		esac
	done

	if test "$had_non_affirmative" = 'no'; then
		return 91 # ENOMSG 91 No message of desired type
	else
		return 0
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	is_non_affirmative "$@"
fi
