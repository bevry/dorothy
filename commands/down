#!/usr/bin/env bash
# shellcheck disable=SC2164,SC1091
source "$DOROTHY/sources/strict.bash"

# dependencies
env QUIET=yes setup-util-aria2

# download a file
# do not use the continue flags as they will prefer the local file over the remote file if the local exists

# options
url="$(ask --question="Enter the URL of the file to download" --default="${1-}" --required)"
destination="$(get-flag-value destination -- "$@")" # custom destination
if test -n "$destination"; then
	dir="$(dirname "$destination")"
	file="$(basename "$destination")"
fi

# https://github.com/aria2/aria2/issues/1137
if command-exists aria2c; then
	if test -n "$destination"; then
		aria2c --allow-overwrite=true --auto-file-renaming=false --dir="$dir" --out="$file" "$url"
	else
		aria2c --allow-overwrite=true --auto-file-renaming=false "$url"
	fi
elif command-exists wget; then
	#   -O,  --output-document=FILE      write documents to FILE
	#   -o,  --output-file=FILE          log messages to FILE
	#   -N,  --timestamping              don't re-retrieve files unless newer than local
	#   -c,  --continue                  resume getting a partially-downloaded file
	#   -q,  --quiet                     quiet (no output)
	#   -v,  --verbose                   be verbose (this is the default)
	#   -nv, --no-verbose                turn off verboseness, without being quiet
	#        --show-progress             display the progress bar in any verbosity mode
	# WARNING: timestamping does nothing in combination with -O. See the manual for details.
	if test -n "$destination"; then
		wget --output-document="$destination" "$url"
	else
		wget --timestamping "$url"
	fi
elif command-exists curl; then
	if test -n "$destination"; then
		curl -L "$url" -o "$destination"
	else
		curl -OL "$url"
	fi
elif command-exists http; then
	if test -n "$destination"; then
		http --output "$destination" -d "$url"
	else
		http -d "$url"
	fi
fi
