#!/usr/bin/env bash

# Without this command, using HOMEBREW_ARCH=x86_64 on Apple Silicon will fail with:
# ```
# Error: Cannot install in Homebrew on ARM processor in Intel default prefix (/usr/local)!
# Please create a new installation in /opt/homebrew using one of the
# "Alternative Installs" from:
#   https://docs.brew.sh/Installation
# You can migrate your previously installed formula list with:
#   brew bundle dump
# brew on desired architecture
# ```

function brew_() (
	source "$DOROTHY/sources/bash.bash"

	# get the homebrew binary
	local bin=''
	if [[ -n ${HOMEBREW_PREFIX-} ]]; then
		bin="$HOMEBREW_PREFIX/bin/brew"
		if [[ ! -x $bin ]]; then
			bin=''
		fi
	fi

	# =====================================
	# Arguments

	function help {
		if [[ -n $bin ]]; then
			"$bin" --help || :
			__print_line
		fi
		cat <<-EOF
			Dorothy extends the brew command to:
			- enforce the correct prefix on macOS and Linux via [HOMEBREW_PREFIX = ${HOMEBREW_PREFIX-}]
			    - this ensures brew invokes homebrew, even when PATH is incorrect and when default brew is not homebrew
			- enforce the appropriate architecture on macOS via [HOMEBREW_ARCH = ${HOMEBREW_ARCH-}]

			Dorothy shell environments are configured to:
			- ensure all homebrew environment variables are configured correctly
			- disable auto updates on macOS, as Dorothy handles that better via [setup-mac-brew]
			- disable brew environment hints, as Dorothy handles that better via [setup-environment-commands]
		EOF
		if [[ -z $bin ]]; then
			if is-mac; then
				echo-style --error1='Homebrew is not installed.' --notice1=' Install it with: ' --code-notice1='setup-mac-brew'
			else
				echo-style --error1='Homebrew is not installed.'
			fi
			# ^ don't use get-installer, as bash v5 may not exist yet
			return 74 # EPROGUNAVAIL 74 RPC prog. not avail
		fi
		return 22 # EINVAL 22 Invalid argument
	}
	if [[ -z $bin ]] || [[ $* == '--help' ]]; then
		help >/dev/stderr
	fi

	# =====================================
	# Action

	# run brew
	if [[ -n ${HOMEBREW_ARCH-} ]]; then
		arch -"$HOMEBREW_ARCH" \
			"$bin" "$@"
	else
		"$bin" "$@"
	fi
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	brew_ "$@"
fi
