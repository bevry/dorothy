#!/usr/bin/env bash

function fs_parents() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Output all parent paths of a <path>.

			USAGE:
			fs-parents [...options] [--] ...<path>

			OPTIONS:
			--self
			    If specified, include the <path> in the output.
			--root
			    If specified, include the root directory in the output.

			--sudo=<sudo>
			--user=<user>
			--group=<group>
			    Forwarded to [fs-absolute].

			QUIRKS:
			Use [fs-realpath] if you want symlinks resolved.
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_paths=() option_self='no' option_root='no' option_sudo='' option_user='' option_group=''
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-self'* | '--self'*)
			option_self="$(get-flag-value --affirmative --fallback="$option_self" -- "$item")"
			;;
		'--no-root'* | '--root'*)
			option_root="$(get-flag-value --affirmative --fallback="$option_root" -- "$item")"
			;;
		'--no-sudo'* | '--sudo'*)
			option_sudo="$(get-flag-value --affirmative --fallback="$option_sudo" -- "$item")"
			;;
		'--user='*) option_user="${item#*=}" ;;
		'--group='*) option_group="${item#*=}" ;;
		'--')
			option_paths+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_paths+=("$item") ;;
		esac
	done

	# check
	if [[ ${#option_paths[@]} -eq 0 ]]; then
		help 'No <path>s provided.'
	fi

	# =====================================
	# Act

	local path temp paths i
	for path in "${option_paths[@]}"; do
		paths=()
		path="$(fs-absolute --sudo="$option_sudo" --user="$option_user" --group="$option_group" -- "$path")"
		if [[ $option_self == 'yes' ]]; then
			paths+=("$path")
		fi
		while [[ $path != '/' ]]; do
			temp="$(fs-absolute --sudo="$option_sudo" --user="$option_user" --group="$option_group" -- "$path/..")"
			if [[ $temp == "$path" || ($temp == '/' && $option_root == 'no') ]]; then
				break
			fi
			paths+=("$temp")
			path="$temp"
		done
		# out paths in reverse order, so topmost first
		for ((i = "${#paths[@]}" - 1; i >= 0; i--)); do
			__print_lines "${paths[i]}"
		done
	done
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	fs_parents "$@"
fi
