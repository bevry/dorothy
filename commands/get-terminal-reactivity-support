#!/usr/bin/env bash

function get_terminal_reactivity_support() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Get whether the terminal is reactive to user STDIN changes, outputting [yes] if so, otherwise [no].

			USAGE:
			get-terminal-reactivity-support [...options]

			OPTIONS:
			--quiet
			    Instead outputting [yes] or [no], return an exit status of [0] if so, otherwise [1].
		EOF
		if [[ $# -ne 0 ]]; then
			printf '%s\n' '' 'ERROR:' "$@" # don't get echo-style, as echo-style uses this
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_quiet=''
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-verbose'* | '--verbose'*)
			option_quiet="$(get-flag-value --non-affirmative --fallback="$option_quiet" -- "$item")"
			;;
		'--no-quiet'* | '--quiet'*)
			option_quiet="$(get-flag-value --affirmative --fallback="$option_quiet" -- "$item")"
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Action

	function __check {
		[[ -t 0 ]] # this fails on GitHub Actions, if it passes on a CI, then we should add: && ! is-ci
		return
	}

	if [[ $option_quiet == 'yes' ]]; then
		__check
		return
	elif __check; then
		__print_lines 'yes'
	else
		__print_lines 'no'
	fi
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	get_terminal_reactivity_support "$@"
fi
