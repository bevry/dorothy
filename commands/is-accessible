#!/usr/bin/env bash

function is_accessible_test() (
	source "$DOROTHY/sources/tests.bash"
	echo-style --h1="TEST: $0"

	local root cmd='is-accessible'
	root="$(fs_tests_prep "$cmd")"

	eval-tester --name='no args' --status=22 --ignore-stderr \
		-- "$cmd" --
	eval-tester --name='empty args' --status=22 \
		-- "$cmd" -- '' ''

	local index status path tuples

	# no escalation
	tuples=(
		0 "$root/missing-dir/missing-file"
		0 "$root/missing-file"

		0 "$root/targets/subdir/empty-dir"
		0 "$root/targets/subdir/empty-file"
		0 "$root/targets/subdir/file"
		0 "$root/targets/non-accessible-dir"
		13 "$root/targets/non-accessible-dir/subdir"
		13 "$root/targets/non-accessible-dir/subdir/empty-dir"
		13 "$root/targets/non-accessible-dir/subdir/empty-file"
		13 "$root/targets/non-accessible-dir/subdir/file"
		0 "$root/targets/non-accessible-empty-file"
		0 "$root/targets/non-accessible-file"
		0 "$root/targets/non-executable-dir"
		13 "$root/targets/non-executable-dir/subdir"
		13 "$root/targets/non-executable-dir/subdir/empty-dir"
		13 "$root/targets/non-executable-dir/subdir/empty-file"
		13 "$root/targets/non-executable-dir/subdir/file"
		0 "$root/targets/non-executable-empty-file"
		0 "$root/targets/non-executable-file"
		0 "$root/targets/non-readable-dir"
		0 "$root/targets/non-readable-dir/subdir"
		0 "$root/targets/non-readable-dir/subdir/empty-dir"
		0 "$root/targets/non-readable-dir/subdir/empty-file"
		0 "$root/targets/non-readable-dir/subdir/file"
		0 "$root/targets/non-readable-empty-file"
		0 "$root/targets/non-readable-file"
		0 "$root/targets/non-writable-dir"
		0 "$root/targets/non-writable-dir/subdir"
		0 "$root/targets/non-writable-dir/subdir/empty-dir"
		0 "$root/targets/non-writable-dir/subdir/empty-file"
		0 "$root/targets/non-writable-dir/subdir/file"
		0 "$root/targets/non-writable-empty-file"
		0 "$root/targets/non-writable-file"

		0 "$root/symlinks/empty-dir"
		0 "$root/symlinks/empty-file"
		0 "$root/symlinks/file"
		0 "$root/symlinks/subdir"
		0 "$root/symlinks/non-accessible-dir"
		0 "$root/symlinks/non-accessible-empty-file"
		0 "$root/symlinks/non-accessible-file"
		13 "$root/symlinks/non-accessible-subdir-empty-dir"
		13 "$root/symlinks/non-accessible-subdir-empty-file"
		13 "$root/symlinks/non-accessible-subdir-file"
		13 "$root/symlinks/non-accessible-subdir"
		0 "$root/symlinks/non-executable-dir"
		0 "$root/symlinks/non-executable-empty-file"
		0 "$root/symlinks/non-executable-file"
		13 "$root/symlinks/non-executable-subdir-empty-dir"
		13 "$root/symlinks/non-executable-subdir-empty-file"
		13 "$root/symlinks/non-executable-subdir-file"
		13 "$root/symlinks/non-executable-subdir"
		0 "$root/symlinks/non-readable-dir"
		0 "$root/symlinks/non-readable-empty-file"
		0 "$root/symlinks/non-readable-file"
		0 "$root/symlinks/non-readable-subdir-empty-dir"
		0 "$root/symlinks/non-readable-subdir-empty-file"
		0 "$root/symlinks/non-readable-subdir-file"
		0 "$root/symlinks/non-readable-subdir"
		0 "$root/symlinks/non-writable-dir"
		0 "$root/symlinks/non-writable-empty-file"
		0 "$root/symlinks/non-writable-file"
		0 "$root/symlinks/non-writable-subdir-empty-dir"
		0 "$root/symlinks/non-writable-subdir-empty-file"
		0 "$root/symlinks/non-writable-subdir-file"
		0 "$root/symlinks/non-writable-subdir"
	)
	total="${#tuples[@]}"
	for ((index = 0; index < total; index += 2)); do
		status="${tuples[index]}"
		path="${tuples[index + 1]}"
		eval-tester --name="$index / $total" --status="$status" \
			-- "$cmd" --no-sudo -- "$path"
	done

	# default escalation
	tuples=(
		13 "$root/targets/non-accessible-dir/subdir"
		13 "$root/targets/non-accessible-dir/subdir/empty-dir"
		13 "$root/targets/non-accessible-dir/subdir/empty-file"
		13 "$root/targets/non-accessible-dir/subdir/file"
		13 "$root/targets/non-executable-dir/subdir"
		13 "$root/targets/non-executable-dir/subdir/empty-dir"
		13 "$root/targets/non-executable-dir/subdir/empty-file"
		13 "$root/targets/non-executable-dir/subdir/file"

		13 "$root/symlinks/non-accessible-subdir-empty-dir"
		13 "$root/symlinks/non-accessible-subdir-empty-file"
		13 "$root/symlinks/non-accessible-subdir-file"
		13 "$root/symlinks/non-accessible-subdir"
		13 "$root/symlinks/non-executable-subdir-empty-dir"
		13 "$root/symlinks/non-executable-subdir-empty-file"
		13 "$root/symlinks/non-executable-subdir-file"
		13 "$root/symlinks/non-executable-subdir"
	)
	total="${#tuples[@]}"
	for ((index = 0; index < total; index += 2)); do
		status="${tuples[index]}"
		path="${tuples[index + 1]}"
		eval-tester --name="$index / $total" --status="$status" \
			-- "$cmd" -- "$path"
	done

	# with escalation
	tuples=(
		0 "$root/targets/non-accessible-dir/subdir"
		0 "$root/targets/non-accessible-dir/subdir/empty-dir"
		0 "$root/targets/non-accessible-dir/subdir/empty-file"
		0 "$root/targets/non-accessible-dir/subdir/file"
		0 "$root/targets/non-executable-dir/subdir"
		0 "$root/targets/non-executable-dir/subdir/empty-dir"
		0 "$root/targets/non-executable-dir/subdir/empty-file"
		0 "$root/targets/non-executable-dir/subdir/file"

		0 "$root/symlinks/non-accessible-subdir-empty-dir"
		0 "$root/symlinks/non-accessible-subdir-empty-file"
		0 "$root/symlinks/non-accessible-subdir-file"
		0 "$root/symlinks/non-accessible-subdir"
		0 "$root/symlinks/non-executable-subdir-empty-dir"
		0 "$root/symlinks/non-executable-subdir-empty-file"
		0 "$root/symlinks/non-executable-subdir-file"
		0 "$root/symlinks/non-executable-subdir"
	)
	total="${#tuples[@]}"
	for ((index = 0; index < total; index += 2)); do
		status="${tuples[index]}"
		path="${tuples[index + 1]}"
		eval-tester --name="$index / $total" --status="$status" \
			-- "$cmd" --sudo -- "$path"
	done

	# break the symlinks
	sudo rm -rf "$root/targets"

	# test broken symlinks
	tuples=(
		0 "$root/symlinks/empty-dir"
		0 "$root/symlinks/empty-file"
		0 "$root/symlinks/file"
		0 "$root/symlinks/subdir"
		0 "$root/symlinks/non-accessible-dir"
		0 "$root/symlinks/non-accessible-empty-file"
		0 "$root/symlinks/non-accessible-file"
		0 "$root/symlinks/non-accessible-subdir-empty-dir"
		0 "$root/symlinks/non-accessible-subdir-empty-file"
		0 "$root/symlinks/non-accessible-subdir-file"
		0 "$root/symlinks/non-accessible-subdir"
		0 "$root/symlinks/non-executable-dir"
		0 "$root/symlinks/non-executable-empty-file"
		0 "$root/symlinks/non-executable-file"
		0 "$root/symlinks/non-executable-subdir-empty-dir"
		0 "$root/symlinks/non-executable-subdir-empty-file"
		0 "$root/symlinks/non-executable-subdir-file"
		0 "$root/symlinks/non-executable-subdir"
		0 "$root/symlinks/non-readable-dir"
		0 "$root/symlinks/non-readable-empty-file"
		0 "$root/symlinks/non-readable-file"
		0 "$root/symlinks/non-readable-subdir-empty-dir"
		0 "$root/symlinks/non-readable-subdir-empty-file"
		0 "$root/symlinks/non-readable-subdir-file"
		0 "$root/symlinks/non-readable-subdir"
		0 "$root/symlinks/non-writable-dir"
		0 "$root/symlinks/non-writable-empty-file"
		0 "$root/symlinks/non-writable-file"
		0 "$root/symlinks/non-writable-subdir-empty-dir"
		0 "$root/symlinks/non-writable-subdir-empty-file"
		0 "$root/symlinks/non-writable-subdir-file"
		0 "$root/symlinks/non-writable-subdir"
	)
	total="${#tuples[@]}"
	for ((index = 0; index < total; index += 2)); do
		status="${tuples[index]}"
		path="${tuples[index + 1]}"
		eval-tester --name="$index / $total" --status="$status" \
			-- "$cmd" -- "$path"
	done

	echo-style --g1="TEST: $0"
	return 0
)
function is_accessible() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Check if all <path>s are accessible, regardless of whether they exist or not.

			USAGE:
			is-accessible [...options] [--] ...<path>

			OPTIONS:
			--sudo
			    If specified, use sudo on filesystem interactions.
			--user=<user>
			--group=<group>
			    If specified use this user and/or group for filesystem interactions.

			RETURNS:
			[0] if all <path>s were accessible
			[13] if a <path> was not accessible
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_inputs=() option_sudo='no' option_user='' option_group=''
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-sudo'* | '--sudo'*)
			option_sudo="$(get-flag-value --affirmative --fallback="$option_sudo" -- "$item")"
			;;
		'--user='*) option_user="${item#*=}" ;;
		'--group='*) option_group="${item#*=}" ;;
		'--')
			option_inputs+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_inputs+=("$item") ;;
		esac
	done

	# verify
	if [[ ${#option_inputs[@]} -eq 0 ]]; then
		help 'No <input>s provided.'
	fi

	# =====================================
	# Action

	sudo-helper --inherit --optional --sudo="$option_sudo" --user="$option_user" --group="$option_group" -- is-accessible.bash -- "${option_inputs[@]}"
	return
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		is_accessible_test
	else
		is_accessible "$@"
	fi
fi
