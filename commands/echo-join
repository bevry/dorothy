#!/usr/bin/env bash

function echo_join_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-segment --h1="TEST: $0"

	eval-tester --stdout='a b' -- echo-join -- a b

	eval-tester --stdout='a, b' -- echo-join ', ' -- a b

	eval-tester --stdout=$'a\n\tb' -- echo-join --join=$'\n\t' -- a b

	print_lines a b | eval-tester --stdout='a b' -- echo-join --stdin

	print_lines a b | eval-tester --stdout='a, b' -- echo-join ', ' --stdin

	print_lines a b | eval-tester --stdout=$'a\n\tb' -- echo-join --join=$'\n\t' --stdin

	echo-segment --g1="TEST: $0"
	return 0
)
function echo_join() (
	source "$DOROTHY/sources/stdinargs.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Concatenate the inputs with the <join> between them.

			USAGE:
			echo-join <join> [...options] [--] ...<input>
			echo-lines ...<input> | echo-join <join> [...options]

			OPTIONS:
			<join> | --join=<join>
			    The joiner to put between each <input>. If not provided, a space is used.

			$(stdinargs_options_help --)

			QUIRKS:
			There will be no newline at the end, in case you your input or <join> contains newlines, we do not wish to mangle your intention.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process our own arguments, delegate everything else to stdinargs
	local rand="$RANDOM"
	local item option_join="$rand" option_args=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--join='*) option_join="${item#*=}" ;;
		# forward to stdinargs, however support mixing and matching of our options, with stdinarg options
		'--')
			option_args+=("$item" "$@")
			shift $#
			break
			;;
		'--'*) option_args+=("$item") ;;
		*)
			if test "$option_join" = "$rand"; then
				option_join="$item"
			else
				option_args+=("$item")
			fi
			;;
		esac
	done

	# default to empty space
	if test "$option_join" = "$rand"; then
		option_join=' '
	fi

	# =================================
	# Action

	local items=()
	function on_input {
		items+=("$1")
	}
	function on_finish {
		local index
		for index in "${!items[@]}"; do
			if test "$index" -eq 0; then
				printf '%s' "${items[index]}"
			else
				printf '%s%s' "$option_join" "${items[index]}"
			fi
		done
	}

	stdinargs "${option_args[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	if test "$*" = '--test'; then
		echo_join_test
	else
		echo_join "$@"
	fi
fi
