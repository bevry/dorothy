#!/usr/bin/env bash
source "$DOROTHY/sources/user.sh"
source "$DOROTHY/sources/strict.bash"

# attempt fetching default, could still be empty
if test -z "${GIT_DEFAULT_BRANCH-}"; then
	export GIT_DEFAULT_BRANCH
	GIT_DEFAULT_BRANCH="$("$DOROTHY/commands/ok" git config --global init.defaultBranch)"
fi

# helpers
function remote-branch-exists {
	"$DOROTHY/commands/silent" git rev-parse --verify --quiet "$1"
}
function local-branch-exists {
	test -n "$(git branch --list "$1")"
}

# remote
if test -n "$GIT_DEFAULT_BRANCH" && remote-branch-exists "$GIT_DEFAULT_BRANCH"; then
	echo "$GIT_DEFAULT_BRANCH"
	exit 0
elif remote-branch-exists main; then
	echo main
	exit 0
elif remote-branch-exists master; then
	echo master
	exit 0
fi

# local
if test -n "$GIT_DEFAULT_BRANCH" && local-branch-exists "$GIT_DEFAULT_BRANCH"; then
	echo "$GIT_DEFAULT_BRANCH"
	exit 0
elif local-branch-exists main; then
	echo main
	exit 0
elif local-branch-exists master; then
	echo master
	exit 0
fi

# no branches?
if test -z "$(git branch -a)"; then
	# use default
	if test -n "$GIT_DEFAULT_BRANCH"; then
		"$DOROTHY/commands/silent" git checkout -b "$GIT_DEFAULT_BRANCH"
		echo "$GIT_DEFAULT_BRANCH"
		exit 0
	else
		"$DOROTHY/commands/stderr" echo "No branches exist locally or remotely and GIT_DEFAULT_BRANCH is not specified, so no defualt branch was created."
		"$DOROTHY/commands/stderr" echo "Set GIT_DEFAULT_BRANCH to your desired default branch, then try again."
		exit 1
	fi
else
	"$DOROTHY/commands/stderr" echo "No default branch exists within the available branches:"
	"$DOROTHY/commands/stderr" git branch -a
	"$DOROTHY/commands/stderr" echo "If one of these is a default branch, then set GIT_DEFAULT_BRANCH to it and try again."
	exit 1
fi