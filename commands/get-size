#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# help
if is-help "$@"; then
	stderr echo 'USAGE:'
	stderr echo 'get-size [path]'
	stderr echo
	stderr echo 'get-size <path>'
	stderr echo '^ if <path> is a btrfs mount, will show the btrfs information for the mount'
	stderr echo '^ otherwise will show the size information for the path'
	stderr echo
	stderr echo 'get-size'
	stderr echo '^ show the size information for the attached drives and their mounts'
	exit 1
fi

# prepare
path="${1-}"
if test -n "$path"; then
	path="$(fs-absolute "$path")"
fi

# act
if test -n "$path"; then
	if is-btrfs "$path"; then
		# Show the structure of a filesystem
		echo-eval sudo btrfs filesystem show

		# Show detailed information about internal allocations in devices.
		echo-eval sudo btrfs device usage "$path"

		# Show detailed information about internal filesystem usage .
		echo-eval sudo btrfs filesystem usage "$path"

		# Show space usage information for a mount point
		echo-eval sudo btrfs filesystem df "$path"

		# Show space usage via system
		# -a, --all             include pseudo, duplicate, inaccessible file systems
		# -h, --human-readable  print sizes in powers of 1024 (e.g., 1023M)
		echo-eval df -ha "$path"

		# Show status
		echo-eval sudo btrfs device stats "$path"
		echo-eval sudo btrfs scrub status "$path" || :   # if still running, exit code 1
		echo-eval sudo btrfs balance status "$path" || : # if still running, exit code 1

		# Summarize disk usage of every nested file inside the directory
		# sudo btrfs filesystem du --summarize --human-readable "$path"

		# Rename
		# sudo btrfs filesystem label "$path" "$name"

		# Change unallocated to free
		# sudo btrfs filesystem resize max "$path"

		# Defragment (balance also defrags)
		# sudo btrfs filesystem defragment "$path"

		# Balance as raid1
		# sudo btrfs balance start --background -dconvert=raid1 -mconvert=raid1 "$path"

		# Scrub (check filesystem for errors and auto-heal)
		# sudo btrfs scrub start "$path"

		# Check devices for errors
		# WARNING: the repair mode is considered dangerous and should not be used without prior analysis of problems found on the filesystem.
		# sudo btrfs check --repair --progress /dev/...

		# Logs
		# tail -n 1000 -f /var/log/syslog | grep "BTRFS"

	elif test -f "$path"; then
		# path is a file
		#   -h, --human-readable  print sizes in human readable format (e.g., 1K 234M 2G)
		echo-eval du -h "$path"

	else
		# path is a directory
		#   -a, --all             write counts for all files, not just directories
		#   -c, --total           produce a grand total
		#   -h, --human-readable  print sizes in human readable format (e.g., 1K 234M 2G)
		#   -s, --summarize       display only a total for each argument
		#   -d, --max-depth=N     print the total for a directory (or file, with --all)
		echo-eval du -achd 1 "$path"
	fi
else
	# size of the drives
	echo-eval sudo fdisk -l

	# size of the mounts
	echo-eval sudo lsblk -e7
fi
