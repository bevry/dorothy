#!/usr/bin/env bash

function echo_url_decode() (
	source "$DOROTHY/sources/stdinargs.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			For each input, decode it's URL entities.

			USAGE:
			echo-url-decode [...options] [--] ...<input>
			echo-lines ...<input> | echo-url-decode [...options]

			OPTIONS:
			$(stdinargs_options_help --)

			EXAMPLE:

			echo-url-decode -- 'https://sup.com/hello%20world'

			    https://sup.com/hello world
			    # exit status: 0

			echo-lines -- 'https://sup.com/hello%20world' | echo-url-decode --stdin

			    https://sup.com/hello world
			    # exit status: 0

		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# =====================================
	# Action

	# recode doesn't support url encoding/decoding: https://github.com/rrthomas/recode/issues/51
	# xmlstarlet is only for html/xml encoding/decoding
	function on_line {
		if command-exists deno; then
			deno eval --quiet \
				"console.log(decodeURI(Deno.args[0]))" \
				"$1"
		elif command-exists node; then
			node -e "console.log(decodeURI(process.argv[1]))" "$1"
		elif command-exists php; then
			# trunk-ignore(shellcheck/SC2016)
			php -R 'echo urldecode($argv[0]);' "$1"
		elif command-exists python3; then
			python3 -c "import urllib.parse; print(urllib.parse.unquote('''$1'''))"
		else
			get-installer --first-success --invoke --quiet -- deno node php python3
			on_line "$@"
		fi
	}

	stdinargs "$@"

	# url
	# node: node -e "process.stdout.write(decodeURI(require('fs').readFileSync(0, 'utf8')))"
	# perl: perl -pe 's/\%(\w\w)/chr hex $1/ge'
	# php -R 'echo urldecode($argn);'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_url_decode "$@"
fi
