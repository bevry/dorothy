#!/usr/bin/env bash

function is_quiet_enabled() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Outputs [yes] or [no] based on comprehensive QUIET mode detection.

			USAGE:
			is-quiet-enabled [...options] --fallback=<fallback> -- "\$@"

			OPTIONS:
			--fallback=<fallback>
			    If provided, use this value if quiet mode could not be determined.

			--no-env
			    If provided, don't test the environment for quiet.

			"\$@"
			    All arguments passed to your command, so we can scan them for relevant flags.

			QUIRKS:
			Checks for [--[no-][verbose|quiet]=[yes|no]] values, as well as [QUIET|VERBOSE] environment variables.

			RETURNS:
			[0] if enabled
			[1] if disabled
			[91] if not determined
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_fallback='' option_env='yes' option_verbose='' option_quiet='' status
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--fallback='*) option_fallback="${item#*=}" ;;
		'--no-env'* | '--env'*)
			option_env="$(get-flag-value --affirmative --fallback="$option_env" -- "$item")"
			;;
		--)
			# process
			while test "$#" -ne 0; do
				item="$1"
				shift
				case "$item" in
				'--no-verbose'* | '--verbose'*)
					option_verbose="$(get-flag-value --affirmative -- "$item")"
					;;
				'--no-quiet'* | '--quiet'*)
					option_quiet="$(get-flag-value --affirmative -- "$item")"
					;;
				*) ;; # ignore
				esac
			done
			# action
			if test -n "$option_verbose"; then
				eval_capture --statusvar=status -- is-non-affirmative -- "$option_verbose"
				if test "$status" -eq 0 -o "$status" -eq 1; then
					return "$status"
				fi
			fi
			if test -n "$option_quiet"; then
				eval_capture --statusvar=status -- is-affirmative -- "$option_quiet"
				if test "$status" -eq 0 -o "$status" -eq 1; then
					return "$status"
				fi
			fi
			if test "$option_env" = 'yes' -a -n "${VERBOSE-}"; then
				eval_capture --statusvar=status -- is-non-affirmative -- "$VERBOSE"
				if test "$status" -eq 0 -o "$status" -eq 1; then
					return "$status"
				fi
			fi
			if test "$option_env" = 'yes' -a -n "${QUIET-}"; then
				eval_capture --statusvar=status -- is-affirmative -- "$QUIET"
				if test "$status" -eq 0 -o "$status" -eq 1; then
					return "$status"
				fi
			fi
			if test -n "$option_fallback"; then
				eval_capture --statusvar=status -- is-affirmative -- "$option_fallback"
				if test "$status" -eq 0 -o "$status" -eq 1; then
					return "$status"
				fi
			fi
			return 91 # ENOMSG 91 No message of desired type
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$option_fallback"; then
				option_fallback="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done
	help "A [--] separator must be provided."
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	is_quiet_enabled "$@"
fi
