#!/usr/bin/env bash

# fresh macos without brew has no ping
function is_internet_working() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Test if the internet is working.

			USAGE:
			is-internet-working [--quiet] <hostname>
			# returns 0 if internet is working, 1 if not

			OPTIONS:
			<hostname>
			    The hostname to test if the internet is working.
				Defaults to: cloudflare.com

			--quiet
				Toggle verbosity by having this empty (the default), enabled (quiet mode), and disabled (verbose mode).
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_url='' option_quiet=''
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-verbose'* | '--verbose'*)
			option_quiet="$(get-flag-value --non-affirmative --fallback="$option_quiet" -- "$item")"
			;;
		'--no-quiet'* | '--quiet'*)
			option_quiet="$(get-flag-value --affirmative --fallback="$option_quiet" -- "$item")"
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if [[ -z $option_url ]]; then
				option_url="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# ensure url
	if [[ -z $option_url ]]; then
		option_url='cloudflare.com'
	fi

	# =====================================
	# Act

	local cmd
	if __command_exists -- ping; then
		cmd=(ping -c 1 "$option_url")
	elif __command_exists -- whois; then
		cmd=(whois "$option_url")
	else
		cmd=(fetch --ok "$option_url")
	fi
	eval-helper --wrap --quiet="$option_quiet" \
		--pending="$(echo-style --notice2='Checking your internet connection...')" \
		--success="$(echo-style --good2='Internet is connected.')" \
		--failure="$(
			echo-style --error1='Internet is not working. If it is a DNS issue, then ' --code-error1='setup-dns' --error1=' may help.'
		)" \
		-- "${cmd[@]}"
	return
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	is_internet_working "$@"
fi
