#!/usr/bin/env bash

function is_not_whitespace_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-style --h1="TEST: $0"

	eval-tester --name='no args' --status=22 --ignore-stderr -- \
		is-not-whitespace --

	eval-tester --name='zero-length is standard failure' --status=1 -- \
		is-not-whitespace -- '' ''

	eval-tester --name='space is standard failure' --status=1 -- \
		is-not-whitespace -- ' ' ' '

	eval-tester --name='newline is standard failure' --status=1 -- \
		is-not-whitespace -- $'\n' $'\n'

	eval-tester --name='newline and tab is standard failure' --status=1 -- \
		is-not-whitespace -- $'\n' $'\t'

	eval-tester --name='whitespace combo is standard failure' --status=1 -- \
		is-not-whitespace -- $'\n\t '

	eval-tester --name='letters and numbers' -- \
		is-not-whitespace -- 'a' 0

	eval-tester --name='mix is is standard failure pt. 1' --status=1 -- \
		is-not-whitespace -- '' 'b'

	eval-tester --name='mix is is standard failure pt. 2' --status=1 -- \
		is-not-whitespace -- 'a' ''

	echo-style --g1="TEST: $0"
	return 0
)
function is_not_whitespace() (
	source "$DOROTHY/sources/bash.bash"

	# help
	function help {
		cat <<-EOF >&2
			ABOUT:
			Check if the input is not just whitespace characters.
			Companion to [is-whitespace], [echo-trim-empty-lines]. Equivalent to a [is-string], [is-blackspace], [is-notempty-string], [is-not-empty-string], [is-not-only-whitespace], [is-non-whitespace].

			USAGE:
			is-not-whitespace [...options] [--] <input>

			OPTIONS:
			<input> | --string=<input>
			    Verify this <input> is a non-empty string

			RETURNS:
			[0] if all <input>s are non-whitespace strings
			[1] if any <input>s are not non-whitespace strings
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process our arguments
	local item option_inputs=()
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		--)
			option_inputs+=("$@")
			shift $#
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_inputs+=("$item") ;;
		esac
	done

	# adjust
	if [[ ${#option_inputs[@]} -eq 0 ]]; then
		help 'No <input>s provided.'
	fi

	# =====================================
	# Action

	# fails mixed test case:
	# [[ ! ${option_inputs[*]} =~ ^[[:space:]]*$ ]]
	# return

	local input
	for input in "${option_inputs[@]}"; do
		if [[ $input =~ ^[[:space:]]*$ ]]; then
			return 1
		fi
	done
	return 0
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		is_not_whitespace_test
	else
		is_not_whitespace "$@"
	fi
fi
