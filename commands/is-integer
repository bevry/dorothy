#!/usr/bin/env bash

# https://stackoverflow.com/a/29234612/130638

# a much more complicated version of this is:
# if test -z "$1"; then
# 	return 1
# elif test "$1" = '0'; then
# 	return 0
# else
# 	# hide stdout and stderr
# 	(let "$1") &>/dev/null || return 1
# 	return 0
# fi

function is_integer_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-segment --h1="TEST: $0"

	eval-tester --name='zero' --status=0 \
		-- is-integer -- 0

	eval-tester --name='one' --status=0 \
		-- is-integer -- 1

	eval-tester --name='ten' --status=0 \
		-- is-integer -- 10

	eval-tester --name='decimal' --status=1 \
		-- is-integer -- 0.1

	eval-tester --name='triple decimal' --status=1 \
		-- is-integer -- 1.1.1

	eval-tester --name='negative' --status=0 \
		-- is-integer -- -1

	eval-tester --name='negative 10' --status=0 \
		-- is-integer -- -10

	eval-tester --name='negative decimal' --status=1 \
		-- is-integer -- -1.1

	eval-tester --name='negative triple decimal' --status=1 \
		-- is-integer -- -1.1.1

	eval-tester --name='empty' --status=1 \
		-- is-integer -- ''

	eval-tester --name='letter' --status=1 \
		-- is-integer -- 'a'

	eval-tester --name='combo' --status=1 \
		-- is-integer -- '-0a'

	echo-segment --g1="TEST: $0"
	return 0
)
function is_integer() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Checks if the <input> is an integer (non-decimal number)

			USAGE:
			is-integer [...options] [--] <input>

			OPTIONS:
			<input>
			    Verify this <input> is an integer

			RETURNS:
			[0] if all <input>s were integer
			[1] if any <input>s were not integers
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_inputs=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			option_inputs+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_inputs+=("$item") ;;
		esac
	done

	# =====================================
	# Action

	local input
	for input in "${option_inputs[@]}"; do
		[[ $input =~ ^[-]?[0-9]+$ ]] || return # explicit return with [[ required for bash v3
	done
	return 0
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	if test "$*" = '--test'; then
		is_integer_test
	else
		is_integer "$@"
	fi
fi
