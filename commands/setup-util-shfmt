#!/usr/bin/env bash

# https://github.com/mvdan/sh#shfmt

# DEBIAN/APT doesn't seem to exist
# No apt package "shfmt", but there is a snap with that name.

# https://github.com/mvdan/sh/releases
# shfmt_v3.7.0_darwin_amd64
# shfmt_v3.7.0_darwin_arm64
# shfmt_v3.7.0_linux_386
# shfmt_v3.7.0_linux_amd64
# shfmt_v3.7.0_linux_arm
# shfmt_v3.7.0_linux_arm64
# shfmt_v3.7.0_windows_386.exe
# shfmt_v3.7.0_windows_amd64.exe

function setup_util_shfmt() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance for detectable utilities with conditional assets
	if setup-util "$@" --check --cli=shfmt; then
		return 0
	fi

	# setup
	local arch options=(
		--cli='shfmt'
		"$@"
		APK='shfmt' # ALPINE
		AUR='shfmt' # ARCH
		BREW='shfmt'
		BSD='shfmt'
		GO='mvdan.cc/sh/v3/cmd/shfmt'
		INSTALLER='https://webinstall.dev/shfmt'
		NIX='shfmt'
		PORT='shfmt'
		SCOOP='shfmt'
		SNAP='shfmt'
		XBPS='shfmt' # VOID
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='mvdan/sh' \
			--latest \
			--asset-regexp="$(echo-escape-regexp -- "$1")$" | echo-first-line || :
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
		)
	}
	arch="$(get-arch)"
	if is-mac; then
		if test "$arch" = 'a64'; then
			add_download_option '_darwin_arm64'
		elif test "$arch" = 'x64'; then
			add_download_option '_darwin_amd64'
		fi
	elif is-linux; then
		if test "$arch" = 'a64'; then
			add_download_option '_linux_arm64'
		elif test "$arch" = 'a32'; then
			add_download_option '_linux_arm'
		elif test "$arch" = 'x64'; then
			add_download_option '_linux_amd64'
		elif test "$arch" = 'x32'; then
			add_download_option '_linux_386'
		fi
	elif is-wsl; then
		if test "$arch" = 'x64'; then
			add_download_option '_windows_amd64.exe'
		elif test "$arch" = 'x32'; then
			add_download_option '_windows_386.exe'
		fi
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_shfmt "$@"
fi
