#!/usr/bin/env bash

function fs_join() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Join the paths together.

			USAGE:
			fs-join [--] ...<path>
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_paths=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--path='*) option_paths+=("${item#*=}") ;;
		'--')
			option_paths+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			option_paths+=("$item" "$@")
			shift "$#"
			break
			;;
		esac
	done

	# =====================================
	# Action

	# allow leading slashes on first item
	# so /Volumes/... still works
	local result="${option_paths[0]}" i next
	for ((i = 1; i < ${#option_paths[@]}; i++)); do
		next="${option_paths[i]}"
		# trim trailing slashes
		if [[ $result == *'/' ]]; then
			result="${result%/}"
		fi
		if [[ $next == *'/' ]]; then
			next="${next%/}"
		fi
		# trim leading slashes
		if [[ $next == '/'* ]]; then
			next="${next#/}"
		fi
		# join
		if test -n "$result" -a -n "$next"; then
			result="$result/$next"
		else
			result="$result$next"
		fi
	done
	print_line "$result"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	fs_join "$@"
fi
