#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

regex='researchgate.net/publication/(\w+)'
for file in "$@"; do
	id=''
	name=''
	year=''
	f="$(mktemp)"
	pdftotext -layout -eol unix "$file" "$f"
	while read -r line; do
		# echo $line
		if test -z "$id"; then
			# find id
			id="$(echo "$line" | python-regex "$regex")"
		elif test -z "$name"; then
			# trim possibly invalid chars from name
			name="$(echo "$line" | sed -E 's/[:/?]//')"
		elif test -z "$year"; then
			year="$(echo "$line" | python-regex '[^\d](\d\d\d\d)[^\d]')"
		else
			break
		fi
	done < <(grep -A 10 -E "$regex" < "$f"  | grep '.')

	# echo "id=[$id] year=[$year]"
	#id="$(python-regex "$f" "$regex")"
	#url="https://www.researchgate.net/publication/$id"

	if test -n "$id" -a -n "$name"; then
		if test -n "$year"; then
			nf="$year - $name [$id].pdf"
		else
			nf="$name [$id].pdf"
		fi
		dir="$(dirname "$file")"
		np="$dir/$nf"
		if test "$file" = "$np"; then
			echo -e "$(basename "$file")\n=> already named correctly"
		else
			dup=1
			while test -f "$np"; do
				if is-same --action=summary --algorithm=sha256sum -- "$file" "$np"; then
					rm "$file"
					echo -e "$(basename "$file")\n=> duplicate, removed"
					np=''
					break
				fi
				dup=$((dup + 1))
				nf="${nf%.pdf*} [$dup].pdf"
				np="$dir/$nf"
			done
			if test -n "$np"; then
				mv "$file" "$np"
				echo -e "$(basename "$file")\n=> $nf"
			fi
		fi
	fi
done