#!/usr/bin/env bash

function echo_escape_command_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-style --h1="TEST: $0"

	eval-tester --stdout='my-command argument spaced\ argument' \
		-- echo-escape-command -- 'my-command' 'argument' 'spaced argument'

	echo-style --g1="TEST: $0"
	return 0
)
function echo_escape_command() (
	source "$DOROTHY/sources/stdinargs.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Escape the <...command> for human readability.

			USAGE:
			echo-escape-command [...options] [--] <...command>
			echo-lines <...command> | echo-escape-command [...options]

			OPTIONS:
			$(stdinargs_options_help --)
		EOF
		return 22 # EINVAL 22 Invalid argument
	}

	# =====================================
	# Action

	local args=()
	function on_input {
		args+=("$@")
	}
	function on_finish {
		printf '%q\n' "${args[@]}" | echo-join ' ' --stdin
	}

	stdinargs "$@"
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		echo_escape_command_test
	else
		echo_escape_command "$@"
	fi
fi
