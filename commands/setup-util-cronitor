#!/usr/bin/env bash

# https://github.com/cronitorio/cronitor-cli

# https://github.com/cronitorio/cronitor-cli/releases
# darwin_amd64.tar.gz
# darwin_arm64.tar.gz
# freebsd_amd64.tar.gz
# freebsd_arm.tar.gz
# freebsd_arm64.tar.gz
# linux_amd64.tar.gz
# linux_arm.tar.gz
# linux_arm64.tar.gz
# windows_amd64.zip

function setup_util_cronitor() (
	source "$DOROTHY/sources/bash.bash"

	# configure
	function do_configure {
		# if xdg present, move it to a place sudo can access
		# @todo add support for this directly to setup-util, so that unintalls work properly
		if test -x "$XDG_BIN_HOME/cronitor"; then
			if is-mac; then
				sudo-helper -- mv -v "$XDG_BIN_HOME/cronitor" '/usr/local/bin/cronitor'
			else
				sudo-helper -- mv -v "$XDG_BIN_HOME/cronitor" '/usr/bin/cronitor'
			fi
		fi

		# if installed, configure
		if command-exists cronitor; then
			# authenticate if necessary
			if ! cronitor status &>/dev/null; then
				token="$(
					ask --required \
						--question=$'What is your Cronitor API Key?\nYou get this from: https://cronitor.io/app/settings/api' \
						--default="${CRONITOR_API_KEY-}"
				)"
				sudo-helper -- cronitor configure --api-key "$token" >/dev/null
			fi

			# ensure sudo access
			sudo-helper --local
		fi
	}

	# improve performance for detectable utilities with conditional assets
	if setup-util "$@" --check --cli=bandwhich; then
		do_configure
		return 0
	fi

	# determine options
	local arch options=(
		--cli='cronitor'
		"$@"
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='cronitorio/cronitor-cli' \
			--latest \
			--asset-regexp="$(echo-escape-regexp -- "$1")$" | echo-first-line || :
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_ARCHIVE_GLOB="$2"
		)
	}
	arch="$(get-arch)"
	if is-mac; then
		if test "$arch" = 'a64'; then
			add_download_option 'darwin_arm64.tar.gz' 'cronitor'
		else
			add_download_option 'darwin_amd64.tar.gz' 'cronitor'
		fi
	elif is-linux; then
		if test "$arch" = 'a64'; then
			add_download_option 'linux_arm64.tar.gz' 'cronitor'
		elif test "$arch" = 'a32'; then
			add_download_option 'linux_arm.tar.gz' 'cronitor'
		elif test "$arch" = 'x64'; then
			add_download_option 'linux_amd64.tar.gz' 'cronitor'
		fi
	elif is-wsl; then
		if test "$arch" = 'x64'; then
			add_download_option 'windows_amd64.zip' 'cronitor.exe'
		fi
	fi
	setup-util "${options[@]}"

	# configure
	do_configure
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_cronitor "$@"
fi
