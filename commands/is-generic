#!/usr/bin/env bash

function is_generic_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-style --h1="TEST: $0"

	eval-tester --name='no args' --status=22 --ignore-stderr -- \
		is-generic --

	eval-tester --name='generics are generic' -- \
		is-generic -- '' $' \t\n' 'user.local' 'USER.LOCAL' 'false' 'null' 'undefined' 'ubuntu' 'root' 'admin' 'super' 'user' 'localhost'

	eval-tester --name='custom.local is not generic' --status=1 -- \
		is-generic -- 'custom.local'

	eval-tester --name='mix is not generic' --status=1 -- \
		is-generic -- 'custom.local' 'false'

	eval-tester --name='custom.localhost is not generic' --status=1 -- \
		is-generic -- 'custom.localhost'

	echo-style --g1="TEST: $0"
	return 0
)
function is_generic() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	# @note if you want a `[0] if any <input>s were generic` then you want to implement a `! is-not-generic` instead
	function help {
		cat <<-EOF >&2
			ABOUT:
			Check if the <input> is a generic username or hostname.

			USAGE:
			is-generic [--] ...<input>

			RETURNS:
			[0] if all <input>s are generic
			[1] if any <input>s are not generic
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_inputs=()
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			option_inputs+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_inputs+=("$item") ;;
		esac
	done

	# verify
	if [[ ${#option_inputs[@]} -eq 0 ]]; then
		help 'No <input>s provided.'
	fi

	# =====================================
	# Action

	local input
	for input in "${option_inputs[@]}"; do
		# lowercase
		input="$(__lowercase_string -- "$input")"
		# trim .local
		input="${input%.local}"
		# check for generic values
		[[ $input =~ ^([[:space:]]*|false|null|undefined|ubuntu|root|admin|super|user|localhost)$ ]] || return # explicit return with [[ required for bash v3
	done
	return 0
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		is_generic_test
	else
		is_generic "$@"
	fi
fi
