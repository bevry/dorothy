#!/usr/bin/env bash

function is_generic_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-segment --h1="TEST: $0"

	eval-tester --name='user.local is generic' --status=0 \
		-- is-generic -- 'user.local'

	eval-tester --name='custom.local is not generic' --status=1 \
		-- is-generic -- 'custom.local'

	echo-segment --g1="TEST: $0"
	return 0
)
function is_generic() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Check if the <input> is a generic username or hostname.

			USAGE:
			is-generic [--] ...<input>

			RETURNS:
			[0] if ANY <input>s were generic
			[1] if no <input>s were generic
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_inputs=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			option_inputs+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_inputs+=("$item") ;;
		esac
	done

	# verify
	if test "${#option_inputs[@]}" -eq 0; then
		help 'No <input>s provided.'
	fi

	# =====================================
	# Action

	local value="${option_inputs[*]}"
	if is-empty-value -- "$value"; then
		return 0 # generic
	else
		value="$(lowercase_string "$value")"
		value="${value%.local}" # trim .local
		if [[ $value =~ ^(false|null|undefined|ubuntu|root|admin|super|user|localhost)$ ]]; then
			return 0
		else
			return 1
		fi
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	if test "$*" = '--test'; then
		is_generic_test
	else
		is_generic "$@"
	fi
fi
