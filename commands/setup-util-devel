#!/usr/bin/env bash

function setup_util_devel() (
	source "$DOROTHY/sources/bash.bash"

	local options

	# apt/apk/dnf essentials
	if is-apt; then
		setup-util-apt --optional "$@"
	fi
	if is-apk; then
		options=(
			--optional
			--name='APK Essentials'
			"$@"
			APK='ca-certificates' # ALPINE
		)
		setup-util "${options[@]}"
	fi
	if is-dnf; then
		options=(
			--optional
			--name='DNF Essentials'
			"$@"
			DNF='dnf-plugins-core' # FEDORA
		)
		setup-util "${options[@]}"
	fi

	# essentials
	setup-util-coreutils "$@"
	setup-util-moreutils --optional "$@"

	# gcc, etc.
	# https://super-unix.com/unixlinux/the-fedora-equivalent-of-the-debian-build-essential-package/
	# https://stackoverflow.com/a/58680740/130638
	# xcode is macos's equivalent
	# https://packages.debian.org/sid/amd64/build-essential/filelist (no bins...)
	# https://repology.org/project/build-base/versions
	# https://repology.org/project/base-devel/versions
	# https://madb.mageia.org/package/show/application/0/name/task-c-devel
	options=(
		--optional
		--name='Build Essentials'
		"$@"
		APK='build-base'      # ALPINE
		APT='build-essential' # UBUNTU
		AUR='base-devel'      # ARCH
		DNF_GROUP='Development Libraries'
		DNF_GROUP='Development Tools'
		DNF='make' DNF='automake' DNF='gcc' DNF='gcc-c++' DNF='kernel-devel' # FEDORA
		URPMI='task-c-devel'                                                 # MAGEIA
		XBPS='base-devel'                                                    # VOID
		ZYPPER='devel_basis' ZYPPER_TYPE='pattern'                           # SUSE
	)
	setup-util "${options[@]}"

	# https://apple.stackexchange.com/a/362837
	# https://packages.debian.org/sid/amd64/clang/filelist
	# /usr/bin/asan_symbolize
	# /usr/bin/clang
	# /usr/bin/clang++
	# https://repology.org/project/llvm/versions
	options=(
		--optional
		--cli='clang'
		"$@"
		APK='clang' # ALPINE
		APT='clang' # UBUNTU
		AUR='clang' # ARCH
		BREW='llvm'
		RPM='clang'    # FEDORA
		URPMI='clang'  # MAGEIA
		XBPS='clang'   # VOID
		ZYPPER='clang' # SUSE
	)
	setup-util "${options[@]}"

	# https://packages.debian.org/sid/amd64/make/filelist
	# /usr/bin/gmake
	# /usr/bin/make
	# /usr/bin/make-first-existing-target
	# https://repology.org/project/make/versions
	options=(
		--optional
		--cli='make'
		"$@"
		APK='make'              # ALPINE
		APT='make'              # UBUNTU
		AUR='make'              # ARCH
		EMERGE='sys-devel/make' # GENTOO
		URPMI='make'            # MAGEIA
		XBPS='make'             # VOID
		ZYPPER='make'           # SUSE
	)
	setup-util "${options[@]}"

	# https://packages.debian.org/sid/amd64/cmake/filelist
	# /usr/bin/cmake
	# /usr/bin/cpack
	# /usr/bin/ctest
	# https://repology.org/project/cmake/versions
	options=(
		--optional
		--cli='cmake'
		"$@"
		APK='cmake' # ALPINE
		APT='cmake' # UBUNTU
		AUR='cmake' # ARCH
		BREW='cmake'
		EMERGE='dev-util/cmake' # GENTOO
		RPM='cmake'             # FEDORA
		URPMI='cmake'           # MAGEIA
		XBPS='cmake'            # VOID
		ZYPPER='cmake'          # SUSE
	)
	setup-util "${options[@]}"

	# https://packages.debian.org/sid/amd64/llvm/filelist
	# /usr/bin/bugpoint
	# /usr/bin/dsymutil
	# /usr/bin/llc
	# /usr/bin/llvm-PerfectShuffle
	# /usr/bin/llvm-addr2line
	# /usr/bin/llvm-ar
	# /usr/bin/llvm-as
	# /usr/bin/llvm-bcanalyzer
	# /usr/bin/llvm-c-test
	# /usr/bin/llvm-cat
	# /usr/bin/llvm-cfi-verify
	# /usr/bin/llvm-config
	# /usr/bin/llvm-cov
	# /usr/bin/llvm-cvtres
	# /usr/bin/llvm-cxxdump
	# /usr/bin/llvm-cxxfilt
	# /usr/bin/llvm-diff
	# /usr/bin/llvm-dis
	# /usr/bin/llvm-dlltool
	# /usr/bin/llvm-dwarfdump
	# /usr/bin/llvm-dwp
	# /usr/bin/llvm-exegesis
	# /usr/bin/llvm-extract
	# /usr/bin/llvm-lib
	# /usr/bin/llvm-link
	# /usr/bin/llvm-lto
	# /usr/bin/llvm-lto2
	# /usr/bin/llvm-mc
	# /usr/bin/llvm-mca
	# /usr/bin/llvm-modextract
	# /usr/bin/llvm-mt
	# /usr/bin/llvm-nm
	# /usr/bin/llvm-objcopy
	# /usr/bin/llvm-objdump
	# /usr/bin/llvm-opt-report
	# /usr/bin/llvm-pdbutil
	# /usr/bin/llvm-profdata
	# /usr/bin/llvm-ranlib
	# /usr/bin/llvm-rc
	# /usr/bin/llvm-readelf
	# /usr/bin/llvm-readobj
	# /usr/bin/llvm-reduce
	# /usr/bin/llvm-rtdyld
	# /usr/bin/llvm-size
	# /usr/bin/llvm-split
	# /usr/bin/llvm-stress
	# /usr/bin/llvm-strings
	# /usr/bin/llvm-strip
	# /usr/bin/llvm-symbolizer
	# /usr/bin/llvm-tblgen
	# /usr/bin/llvm-undname
	# /usr/bin/llvm-xray
	# /usr/bin/obj2yaml
	# /usr/bin/opt
	# /usr/bin/sanstats
	# /usr/bin/verify-uselistorder
	# /usr/bin/yaml2obj
	# https://repology.org/project/llvm/versions
	options=(
		--optional
		--cli='llvm'
		"$@"
		APK='llvm' # ALPINE
		APT='llvm' # UBUNTU
		AUR='llvm' # ARCH
		BREW='llvm'
		EMERGE='sys-devel/llvm' # GENTOO
		RPM='llvm'              # FEDORA
		URPMI='llvm'            # MAGEIA
		XBPS='llvm'             # VOID
		ZYPPER='llvm'           # SUSE
	)
	setup-util "${options[@]}"

	# no apk, no mageia, gentoo
	# https://packages.debian.org/sid/amd64/pkg-config/filelist (no bins...)
	# https://repology.org/project/pkg-config/versions
	options=(
		--optional
		--cli='pkg-config'
		"$@"
		APT='pkg-config' # UBUNTU
		AUR='pkg-config' # ARCH
		BREW='pkg-config'
		RPM='pkg-config'    # FEDORA
		XBPS='pkg-config'   # VOID
		ZYPPER='pkg-config' # SUSE
	)
	setup-util "${options[@]}"

	# https://packages.debian.org/sid/amd64/libssl-dev/filelist (no bins...)
	# https://repology.org/project/openssl/versions
	options=(
		--optional
		--name='openssl/libssl'
		"$@"
		APK='openssl'    # ALPINE
		APT='libssl-dev' # UBUNTU
		AUR='openssl'    # ARCH
		BREW='openssl'
		EMERGE='dev-libs/openssl' # GENTOO
		RPM='openssl-devel'       # FEDORA
		URPMI='openssl'           # MAGEIA
		XBPS='openssl'            # VOID
		ZYPPER='openssl'          # SUSE
	)
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_devel "$@"
fi
