#!/usr/bin/env bash

# @todo rename to is-root-user or is-user-root

function is_root_test() (
	source "$DOROTHY/sources/tests.bash"
	echo-style --h1="TEST: $0"

	eval-helper --wrap --verbose -- whoami || :
	eval-helper --wrap --verbose -- id || :
	eval-helper --wrap --verbose -- id -u "$(whoami)" || :

	eval-helper --wrap --verbose -- is-root || :
	eval-helper --wrap --verbose -- is-root --quiet || :
	eval-helper --wrap --verbose -- is-root --verbose || :

	echo-style --g1="TEST: $0"
	return 0
)
function is_root() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Check if the currently logged in user, or the specified <user>s are root.

			USAGE:
			is-root [...options] [--] ...<user>

			OPTIONS:
			--user=<user>

			RETURNS:
			[0] if all <user>s were root
			[1] if a <user> was not accessible
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_quiet='' option_inputs=()
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-verbose'* | '--verbose'*)
			option_quiet="$(get-flag-value --non-affirmative --fallback="$option_quiet" -- "$item")"
			;;
		'--no-quiet'* | '--quiet'*)
			option_quiet="$(get-flag-value --affirmative --fallback="$option_quiet" -- "$item")"
			;;
		'--user='*) option_inputs+=("${item#*=}") ;;
		'--')
			option_inputs+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_inputs+=("$item") ;;
		esac
	done

	# verify
	if [[ ${#option_inputs[@]} -eq 0 ]]; then
		option_inputs+=("$(whoami)")
	fi

	# =====================================
	# Action

	local user
	for user in "${option_inputs[@]}"; do
		# if [[ "$(id -u "$user")" -ne 0 ]]; then
		if [[ $user != 'root' ]]; then
			if [[ -z $option_quiet || $option_quiet == 'no' ]]; then
				echo-style --error1='User ' --code-error1="$user" --error1=' is not root.' >/dev/stderr
			fi
			return 1
		elif [[ $option_quiet == 'no' ]]; then
			echo-style --info1='User ' --code-info1="$user" --info1=' is root.' >/dev/stderr
		fi
	done
	return 0
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		is_root_test
	else
		is_root "$@"
	fi
fi
