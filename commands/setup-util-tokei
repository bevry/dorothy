#!/usr/bin/env bash

# https://github.com/XAMPPRocky/tokei
# code stats, wc alternative

# https://github.com/XAMPPRocky/tokei/releases
# tokei-aarch64-unknown-linux-gnu.tar.gz
# tokei-arm-linux-androideabi.tar.gz
# tokei-arm-unknown-linux-gnueabi.tar.gz
# tokei-armv7-linux-androideabi.tar.gz
# tokei-armv7-unknown-linux-gnueabihf.tar.gz
# tokei-i686-pc-windows-msvc.exe
# tokei-i686-unknown-linux-gnu.tar.gz
# tokei-i686-unknown-linux-musl.tar.gz
# tokei-mips-unknown-linux-gnu.tar.gz
# tokei-mips64-unknown-linux-gnuabi64.tar.gz
# tokei-mips64el-unknown-linux-gnuabi64.tar.gz
# tokei-mipsel-unknown-linux-gnu.tar.gz
# tokei-powerpc64-unknown-linux-gnu.tar.gz
# tokei-powerpc64le-unknown-linux-gnu.tar.gz
# tokei-s390x-unknown-linux-gnu.tar.gz
# tokei-sparcv9-sun-solaris.tar.gz
# tokei-x86_64-apple-darwin.tar.gz
# tokei-x86_64-pc-windows-msvc.exe
# tokei-x86_64-unknown-linux-gnu.tar.gz
# tokei-x86_64-unknown-linux-musl.tar.gz
# tokei-x86_64-unknown-netbsd.tar.gz

function setup_util_tokei() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance for detectable utilities with conditional assets
	if setup-util "$@" --check --cli=tokei; then
		return 0
	fi

	# no apt
	local arch options=(
		--name='tokei'
		--cli='tokei'
		"$@"
		APK='tokei' # ALPINE
		AUR='tokei' # ARCH
		BREW='tokei'
		BSD='tokei'
		CARGO='tokei'
		CONDA_CHANNEL='conda-forge'
		CONDA='tokei'
		NIX='tokei'
		PORT='tokei'
		RPM='tokei' # FEDORA
		SCOOP='tokei'
		ZYPPER='tokei' # SUSE
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='XAMPPRocky/tokei' \
			--latest \
			--asset-regexp="$(echo-escape-regexp -- "$1")$" | echo-first-line || :
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_ARCHIVE_GLOB="$2"
		)
	}
	arch="$(get-arch)"
	if is-mac; then
		add_download_option '-x86_64-apple-darwin.tar.gz' 'tokei'
	elif is-linux; then
		if test "$arch" = 'a64'; then
			add_download_option '-aarch64-unknown-linux-gnu.tar.gz' 'tokei'
		elif test "$arch" = 'a32'; then
			add_download_option '-arm-unknown-linux-gnueabi.tar.gz' 'tokei'
		elif test "$arch" = 'x64'; then
			add_download_option '-x86_64-unknown-linux-musl.tar.gz' 'tokei'
		elif test "$arch" = 'x32'; then
			add_download_option '-i686-unknown-linux-musl.tar.gz' 'tokei'
		fi
	elif is-wsl; then
		if test "$arch" = 'x64'; then
			add_download_option '-x86_64-pc-windows-msvc.exe' ''
		elif test "$arch" = 'x32'; then
			add_download_option '-i686-pc-windows-msvc.exe' ''
		fi
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_tokei "$@"
fi
