#!/usr/bin/env bash

function fs_absolute() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Output the absolute path of a relative path.

			USAGE:
			fs-absolute [...options] [--] ...<path>

			OPTIONS:
			--sudo=<sudo>
			    Defaults to [13], escalating to root if permission would otherwise be denied.
			--user=<user>
			--group=<group>
			    Forwarded to [sudo-helper].

			EXAMPLES:
			fs-absolute -- ..
			fs-absolute -- .
			fs-absolute -- ./*
			fs-absolute -- /

			QUIRKS:
			Use [fs-realpath] if you want symlinks resolved.
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_inputs=() option_sudo='13' option_user='' option_group=''
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-sudo'* | '--sudo'*)
			option_sudo="$(get-flag-value --affirmative --fallback-on-empty --fallback="$option_sudo" -- "$item")"
			;;
		'--user='*) option_user="${item#*=}" ;;
		'--group='*) option_group="${item#*=}" ;;
		'--')
			option_inputs+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_inputs+=("$item") ;;
		esac
	done

	# check
	if [[ ${#option_inputs[@]} -eq 0 ]]; then
		help 'No <path>s provided.'
	fi

	# =====================================
	# Act

	sudo-helper --inherit --sudo="$option_sudo" --user="$option_user" --group="$option_group" -- fs-absolute.bash -- "${option_inputs[@]}"
	return
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	fs_absolute "$@"
fi
