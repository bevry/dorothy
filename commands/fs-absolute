#!/usr/bin/env bash

function fs_absolute() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Output the absolute path of a relative path.

			USAGE:
			fs-absolute [--] ...<path>

			EXAMPLES:
			fs-absolute -- ..
			fs-absolute -- .
			fs-absolute -- ./*
			fs-absolute -- /

			QUIRKS:
			Use [fs-realpath] if you want symlinks resolved.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_paths=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			option_paths+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_paths+=("$item") ;;
		esac
	done

	# check
	if test "${#option_paths[@]}" -eq 0; then
		help 'No <path>s provided.'
	fi

	# =====================================
	# Act

	local path filename
	for path in "${option_paths[@]}"; do
		# don't use [pwd -P] as -P resolves symlinks
		# and resolving symlinks is what [fs-realpath] is for
		filename="$(basename "$path")"
		if test "$filename" = '/'; then
			# handles root
			print_line '/'
		elif test "$filename" = '..'; then
			# handles parent
			(
				cd "$(dirname "$path")/.."
				pwd
			)
		elif test "$filename" = '.'; then
			# handles cwd
			(
				cd "$(dirname "$path")"
				pwd
			)
		else
			# handles files and directories
			(
				cd "$(dirname "$path")"
				print_line "$(pwd)/$filename"
			)
		fi
	done
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	fs_absolute "$@"
fi
