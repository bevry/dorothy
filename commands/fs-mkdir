#!/usr/bin/env bash

# @todo rename to fs-mkdir and have auto-elevation based on the approach in echo-write

function fs_mkdir() (
	source "$DOROTHY/sources/stdinargs.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Make a directory at each input path, if it was not already one, and output its absolute path.

			USAGE:
			fs-mkdir [...options] [--] ...<input>
			echo-lines ...<input> | fs-mkdir [...options]

			OPTIONS:
			--sudo
			    If provided, use sudo to make the directory.

			$(stdinargs_options_help --)

			EXAMPLE:

			fs-mkdir -- ./temp

			    $(pwd)/temp
			    # exit status: 0

		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process our own arguments, delegate everything else to stdinargs
	local item option_quiet='yes' option_args=() option_elevated='' option_elevate='' option_user='' option_group='' option_reason=''
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-verbose'* | '--verbose'*)
			option_quiet="$(get-flag-value --non-affirmative --fallback="$option_quiet" -- "$item")"
			;;
		'--no-quiet'* | '--quiet'*)
			option_quiet="$(get-flag-value --affirmative --fallback="$option_quiet" -- "$item")"
			;;
		# <elevate>
		'--elevated='*) option_elevated="${item#*=}" ;;
		'--no-elevate'* | '--elevate'*)
			option_elevate+="$(get-flag-value --affirmative --fallback-on-empty --fallback="$option_elevate" -- "$item")"
			;;
		'--user='*) option_user="${item#*=}" ;;
		'--group='*) option_group="${item#*=}" ;;
		'--reason='*) option_reason="${item#*=}" ;;
		# forward to stdinargs, however support mixing and matching of our options, with stdinargs options
		'--')
			option_args+=("$item" "$@")
			shift $#
			break
			;;
		*) option_args+=("$item") ;;
		esac
	done

	# =====================================
	# Action

	function __wrap {
		local target_elevated target_elevate="$option_elevate"
		target_elevated="$(mktemp)"
		if is-not-directory --elevated="$(__print_lines "$target_elevated" "$option_elevated")" --elevate="$target_elevate" --user="$option_user" --group="$option_group" --reason="$option_reason" -- "$@"; then
			if [[ -s $target_elevated ]]; then
				target_elevate='yes'
			fi
			eval-helper --elevated="$option_elevated" --elevate="$target_elevate" --user="$option_user" --group="$option_group" --reason="$option_reason" -- \
				mkdir -p -- "$@"
		fi
	}

	function on_line {
		if __wrap "$1"; then
			if [[ $option_quiet != 'yes' ]]; then
				fs-absolute --elevated="$option_elevated" --elevate="$option_elevate" --user="$option_user" --group="$option_group" --reason="$option_reason" -- "$1"
			fi
			return 0
		else
			return 1
		fi
	}

	stdinargs "${option_args[@]}"
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	fs_mkdir "$@"
fi
