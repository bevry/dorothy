#!/usr/bin/env bash

function echo_first_line() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Output the first line of STDIN.

			USAGE:
			<command> | echo-first-line
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--stdin') ;; # trim stdinargs convention
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Dependencies

	local bin_gsed_or_sed
	bin_gsed_or_sed="$(echo-gnu-command --install -- gsed)"

	# =====================================
	# Action

	# get first line, via pipe
	# 1q: quit after first line
	# -n 1p: only print first line, but read everything
	# awk 'FNR == 1': only print first line, but read everything
	# head -n 1: fails if pipe closes prematurely
	# head -1: unsure

	# git log --reverse --oneline | head -n 1
	# ^ has exit code 141 error, as git log closes the pipe
	# git log --reverse --oneline | "$bin_gsed_or_sed" 1q

	"$bin_gsed_or_sed" 1q
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	echo_first_line "$@"
fi
