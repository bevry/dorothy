#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"
source "$DOROTHY/sources/essentials.sh"

# Mode
if test "${1-}" = "update"; then
	mode="update"
else
	mode="install"
fi

# Setup install functions
function brewforceuninstall() {
	for arg in "$@"; do
		ok brew uninstall --ignore-dependencies "$arg"
	done
}
function brewinstall() {
	for arg in "$@"; do
		if ! brew install "$arg"; then
			brew upgrade "$arg"
		fi
	done
}
function slowbrewinstall() {
	# if we are on /usr/local then we are using bottles, which are pre-compiled, and are fast
	if test "$(brew --prefix)" = "/usr/local"; then
		brewinstall "$@"
	else
		# otherwise we are on a custom directory, can't use bottles, so have to compile ourselves, which takes forever
		echo
		if confirm-bool "Do you want to install [$*]? These can take hours, so best left overnight..."; then
			echo "$*"
			brewinstall "$@"
		fi
	fi
}
function confirmbrewinstall() {
	if test "$#" -eq 0; then
		echo 'Dorothy user has not configured any formulas to install'
	elif test "$#" -eq 1; then
		if confirm-bool "Would you like to install the formula [$1]?"; then
			choices=("$1")
		fi
	else
		mapfile -t choices < <(read-choices "What formulas would you like to brew install?" "$@")
	fi
	if is-present "${choices-}"; then
		brewinstall "${choices[@]}"
	fi
}
function confirmcaskinstall() {
	if test "$#" -eq 0; then
		echo 'Dorothy user has not configured any casks to install'
	elif test "$#" -eq 1; then
		if confirm-bool "Would you like to install the cask [$1]?"; then
			choices=("$1")
		fi
	else
		mapfile -t choices < <(read-choices "Which casks would you like to brew install?" "$@")
	fi
	if is-present "${choices-}"; then
		brew install --cask "${choices[@]}"
	fi
}

# Setup brew
if is-brew; then
	echo -e '\nHomebrew is already installed, great!'
else
	# recomended installation method, it is pretty much the only one that works properly
	# https://github.com/balupton/dotfiles/commit/fff6fbc079aaa6ab9bb8438e02c307ebad46fd75
	# https://github.com/balupton/dotfiles/commit/69dbbe81bf30f9e0d9a1dd1d00eca3f3c88b943b
	echo -e '\nInstalling homebrew via its recomended method...'
	arch -"${HOMEBREW_ARCH:-x86_64}" /bin/bash -c "$(fetch https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

echo -e '\nUpdating homebrew...'
# trim deprecations
ok silent brew untap caskroom/cask
ok silent brew untap caskroom/fonts
# fix: Error: homebrew-cask is a shallow clone
# uses `ok` as if already done, wil fail with: fatal: --unshallow on a complete repository does not make sense
brewrepodirs="$(echo-paths "$(dirname "$(brew --repo homebrew/core)")")"
for directory in $brewrepodirs; do
	ok git -C "$directory" fetch --unshallow
done
# update and upgrade
brew update
brew upgrade
# add fonts
brew tap homebrew/cask-fonts
# done
echo '...updated homebrew!'

# Removing dependencies that routinelly fail due to their circular nature
echo -e '\nRemoving circular brew dependencies for reinstallation later...'
brewforceuninstall chromaprint homebrew-ffmpeg/ffmpeg/ffmpeg ffmpeg vim python ruby
# finish wiping python
rm -rf "/Users/$(whoami)/Library/Python/"*
rm -rf "$(brew --cellar)/python"*
rm -rf "$(brew --prefix)/opt/python"*

# Reinstall dependencies
# python
brew install python
# ruby
if test -n "${RUBY_VERSION-}"; then
	if test "$RUBY_VERSION" != "system"; then
	echo -e "\nInstalling brew ruby $RUBY_VERSION..."
		brew install "ruby@$RUBY_VERSION"
	fi
else
	echo -e '\nInstalling latest brew ruby...'
	brew install ruby
fi

# ffmpeg
if test "$mode" = "install" && confirm-bool $'\nDo you want to install encoding tools?'; then
	# install the ffmpeg formula that includes all the options
	# https://github.com/homebrew-ffmpeg/homebrew-ffmpeg
	# https://trac.ffmpeg.org/wiki/CompilationGuide/macOS#Additionaloptions
	brew tap homebrew-ffmpeg/ffmpeg

	# fix:
	# Error: ffmpeg is already installed
	# Error: Refusing to uninstall because it is required by chromaprint, which is currently installed.
	# Error: chromaprint not found
	# https://github.com/homebrew-ffmpeg/homebrew-ffmpeg/issues/13#issuecomment-647408007
	ok brew uninstall ffmpeg
	ok brew install chromaprint
	ok brew uninstall --ignore-dependencies ffmpeg

	# install dependencies:
	# https://github.com/varenc/homebrew-ffmpeg/issues/28
	# https://trac.ffmpeg.org/wiki/CompilationGuide/MacOSX
	brew install \
		amiaopensource/amiaos/decklinksdk \
		atomicparsley \
		automake \
		fdk-aac \
		git \
		jpeg \
		lame \
		libass \
		libav \
		libtool \
		libvorbis \
		libvpx \
		opus \
		sdl \
		shtool \
		tesseract-lang \
		texi2html \
		theora \
		wget \
		x264 \
		x265 \
		xvid \
		yasm \
		youtube-dl \
		;

	# install with all the options
	opts="$(brew options homebrew-ffmpeg/ffmpeg/ffmpeg --compact)"
	# https://github.com/homebrew-ffmpeg/homebrew-ffmpeg/issues/81#issuecomment-828722622
	opts="${opts/--with-decklink /}"
	# install
	brew install homebrew-ffmpeg/ffmpeg/ffmpeg $opts
fi

# user cli deps
echo -e '\nInstalling command line applications via homebrew...'
if is-present "${HOMEBREW_INSTALL-}"; then
	brew install "${HOMEBREW_INSTALL[@]}"
fi
if is-present "${HOMEBREW_INSTALL_SLOW-}"; then
	slowbrewinstall "${HOMEBREW_INSTALL_SLOW[@]}"
fi
echo '...installed command line applications!'

# user cask deps
if is-present "${HOMEBREW_INSTALL_CASK-}" && test "$mode" = "install"; then
	confirmcaskinstall "${HOMEBREW_INSTALL_CASK[@]}"
fi

echo -e '\nHomebrew setup!'
