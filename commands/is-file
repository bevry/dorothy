#!/usr/bin/env bash

function is_file_test() (
	source "$DOROTHY/sources/is-fs-tests.bash"
	echo-style --h1="TEST: $0"

	local root command='is-file'
	root="$(is_fs_tests__prep "$command")"

	eval-tester --name='no args' --status=22 --ignore-stderr -- \
		"$command" --

	# test no escalation
	local tuples=(
		22 ''

		2 "$root/missing-dir/missing-file"
		2 "$root/missing-file"

		79 "$root/targets/empty-dir"
		0 "$root/targets/empty-file"
		0 "$root/targets/filled-dir/empty-subfile"
		79 "$root/targets/filled-dir/filled-subdir"
		79 "$root/targets/filled-dir/filled-subdir/empty-subdir"
		0 "$root/targets/filled-dir/filled-subfile"
		0 "$root/targets/filled-file"
		79 "$root/targets/unaccessible-empty-dir"
		# able to determine if this is a file or directory because that information is stored in the parent that is accessible
		0 "$root/targets/unaccessible-empty-file"
		79 "$root/targets/unaccessible-filled-dir"
		"$(__status__root_or_nonroot 0 13)" "$root/targets/unaccessible-filled-dir/empty-subfile"
		"$(__status__root_or_nonroot 79 13)" "$root/targets/unaccessible-filled-dir/filled-subdir"
		"$(__status__root_or_nonroot 79 13)" "$root/targets/unaccessible-filled-dir/filled-subdir/empty-subdir"
		"$(__status__root_or_nonroot 0 13)" "$root/targets/unaccessible-filled-dir/filled-subfile"
		# able to determine if this is a file or directory because that information is stored in the parent that is accessible
		0 "$root/targets/unaccessible-filled-file"
		79 "$root/targets/unexecutable-empty-dir"
		0 "$root/targets/unexecutable-empty-file"
		79 "$root/targets/unexecutable-filled-dir"
		"$(__status__root_or_nonroot 0 13)" "$root/targets/unexecutable-filled-dir/empty-subfile"
		"$(__status__root_or_nonroot 79 13)" "$root/targets/unexecutable-filled-dir/filled-subdir"
		"$(__status__root_or_nonroot 79 13)" "$root/targets/unexecutable-filled-dir/filled-subdir/empty-subdir"
		"$(__status__root_or_nonroot 0 13)" "$root/targets/unexecutable-filled-dir/filled-subfile"
		0 "$root/targets/unexecutable-filled-file"
		79 "$root/targets/unreadable-empty-dir"
		# able to determine if this is a file or directory because that is unrelated to its read/write/executable permissions
		0 "$root/targets/unreadable-empty-file"
		79 "$root/targets/unreadable-filled-dir"
		0 "$root/targets/unreadable-filled-dir/empty-subfile"
		79 "$root/targets/unreadable-filled-dir/filled-subdir"
		79 "$root/targets/unreadable-filled-dir/filled-subdir/empty-subdir"
		0 "$root/targets/unreadable-filled-dir/filled-subfile"
		# able to determine if this is a file or directory because that is unrelated to its read/write/executable permissions
		0 "$root/targets/unreadable-filled-file"
		79 "$root/targets/unwritable-empty-dir"
		0 "$root/targets/unwritable-empty-file"
		79 "$root/targets/unwritable-filled-dir"
		0 "$root/targets/unwritable-filled-dir/empty-subfile"
		79 "$root/targets/unwritable-filled-dir/filled-subdir"
		79 "$root/targets/unwritable-filled-dir/filled-subdir/empty-subdir"
		0 "$root/targets/unwritable-filled-dir/filled-subfile"
		0 "$root/targets/unwritable-filled-file"

		79 "$root/symlinks/empty-dir"
		0 "$root/symlinks/empty-file"
		0 "$root/symlinks/filled-dir--empty-subfile"
		79 "$root/symlinks/filled-dir--filled-subdir"
		79 "$root/symlinks/filled-dir--filled-subdir--empty-subdir"
		0 "$root/symlinks/filled-dir--filled-subfile"
		0 "$root/symlinks/filled-file"
		79 "$root/symlinks/unaccessible-empty-dir"
		# able to determine if this is a file or directory because that information is stored in the parent that is accessible
		0 "$root/symlinks/unaccessible-empty-file"
		79 "$root/symlinks/unaccessible-filled-dir"
		"$(__status__root_or_nonroot 0 13)" "$root/symlinks/unaccessible-filled-dir--empty-subfile"
		"$(__status__root_or_nonroot 79 13)" "$root/symlinks/unaccessible-filled-dir--filled-subdir"
		"$(__status__root_or_nonroot 79 13)" "$root/symlinks/unaccessible-filled-dir--filled-subdir--empty-subdir"
		"$(__status__root_or_nonroot 0 13)" "$root/symlinks/unaccessible-filled-dir--filled-subfile"
		# able to determine if this is a file or directory because that information is stored in the parent that is accessible
		0 "$root/symlinks/unaccessible-filled-file"
		79 "$root/symlinks/unexecutable-empty-dir"
		0 "$root/symlinks/unexecutable-empty-file"
		79 "$root/symlinks/unexecutable-filled-dir"
		"$(__status__root_or_nonroot 0 13)" "$root/symlinks/unexecutable-filled-dir--empty-subfile"
		"$(__status__root_or_nonroot 79 13)" "$root/symlinks/unexecutable-filled-dir--filled-subdir"
		"$(__status__root_or_nonroot 79 13)" "$root/symlinks/unexecutable-filled-dir--filled-subdir--empty-subdir"
		"$(__status__root_or_nonroot 0 13)" "$root/symlinks/unexecutable-filled-dir--filled-subfile"
		0 "$root/symlinks/unexecutable-filled-file"
		79 "$root/symlinks/unreadable-empty-dir"
		# able to determine if this is a file or directory because that is unrelated to its read/write/executable permissions
		0 "$root/symlinks/unreadable-empty-file"
		79 "$root/symlinks/unreadable-filled-dir"
		0 "$root/symlinks/unreadable-filled-dir--empty-subfile"
		79 "$root/symlinks/unreadable-filled-dir--filled-subdir"
		79 "$root/symlinks/unreadable-filled-dir--filled-subdir--empty-subdir"
		0 "$root/symlinks/unreadable-filled-dir--filled-subfile"
		# able to determine if this is a file or directory because that is unrelated to its read/write/executable permissions
		0 "$root/symlinks/unreadable-filled-file"
		79 "$root/symlinks/unwritable-empty-dir"
		0 "$root/symlinks/unwritable-empty-file"
		79 "$root/symlinks/unwritable-filled-dir"
		0 "$root/symlinks/unwritable-filled-dir--empty-subfile"
		79 "$root/symlinks/unwritable-filled-dir--filled-subdir"
		79 "$root/symlinks/unwritable-filled-dir--filled-subdir--empty-subdir"
		0 "$root/symlinks/unwritable-filled-dir--filled-subfile"
		0 "$root/symlinks/unwritable-filled-file"
	)
	is_fs_tests__tuples --group='test no escalation' "$command" --no-sudo -- "${tuples[@]}"

	# test default escalation
	tuples=(
		0 "$root/targets/unaccessible-empty-file"
		0 "$root/targets/unaccessible-filled-dir/empty-subfile"
		79 "$root/targets/unaccessible-filled-dir/filled-subdir"
		79 "$root/targets/unaccessible-filled-dir/filled-subdir/empty-subdir"
		0 "$root/targets/unaccessible-filled-dir/filled-subfile"
		0 "$root/targets/unaccessible-filled-file"
		0 "$root/targets/unexecutable-filled-dir/empty-subfile"
		79 "$root/targets/unexecutable-filled-dir/filled-subdir"
		79 "$root/targets/unexecutable-filled-dir/filled-subdir/empty-subdir"
		0 "$root/targets/unexecutable-filled-dir/filled-subfile"
		0 "$root/targets/unreadable-empty-file"
		0 "$root/targets/unreadable-filled-file"

		0 "$root/symlinks/unaccessible-empty-file"
		0 "$root/symlinks/unaccessible-filled-dir--empty-subfile"
		79 "$root/symlinks/unaccessible-filled-dir--filled-subdir"
		79 "$root/symlinks/unaccessible-filled-dir--filled-subdir--empty-subdir"
		0 "$root/symlinks/unaccessible-filled-dir--filled-subfile"
		0 "$root/symlinks/unaccessible-filled-file"
		0 "$root/symlinks/unexecutable-filled-dir--empty-subfile"
		79 "$root/symlinks/unexecutable-filled-dir--filled-subdir"
		79 "$root/symlinks/unexecutable-filled-dir--filled-subdir--empty-subdir"
		0 "$root/symlinks/unexecutable-filled-dir--filled-subfile"
		0 "$root/symlinks/unreadable-empty-file"
		0 "$root/symlinks/unreadable-filled-file"
	)
	is_fs_tests__tuples --group='test default escalation' "$command" -- "${tuples[@]}"

	# test with escalation
	tuples=(
		0 "$root/targets/unaccessible-empty-file"
		0 "$root/targets/unaccessible-filled-dir/empty-subfile"
		79 "$root/targets/unaccessible-filled-dir/filled-subdir"
		79 "$root/targets/unaccessible-filled-dir/filled-subdir/empty-subdir"
		0 "$root/targets/unaccessible-filled-dir/filled-subfile"
		0 "$root/targets/unaccessible-filled-file"
		0 "$root/targets/unexecutable-filled-dir/empty-subfile"
		79 "$root/targets/unexecutable-filled-dir/filled-subdir"
		79 "$root/targets/unexecutable-filled-dir/filled-subdir/empty-subdir"
		0 "$root/targets/unexecutable-filled-dir/filled-subfile"
		0 "$root/targets/unreadable-empty-file"
		0 "$root/targets/unreadable-filled-file"

		0 "$root/symlinks/unaccessible-empty-file"
		0 "$root/symlinks/unaccessible-filled-dir--empty-subfile"
		79 "$root/symlinks/unaccessible-filled-dir--filled-subdir"
		79 "$root/symlinks/unaccessible-filled-dir--filled-subdir--empty-subdir"
		0 "$root/symlinks/unaccessible-filled-dir--filled-subfile"
		0 "$root/symlinks/unaccessible-filled-file"
		0 "$root/symlinks/unexecutable-filled-dir--empty-subfile"
		79 "$root/symlinks/unexecutable-filled-dir--filled-subdir"
		79 "$root/symlinks/unexecutable-filled-dir--filled-subdir--empty-subdir"
		0 "$root/symlinks/unexecutable-filled-dir--filled-subfile"
		0 "$root/symlinks/unreadable-empty-file"
		0 "$root/symlinks/unreadable-filled-file"
	)
	is_fs_tests__tuples --group='test with escalation' "$command" --elevate -- "${tuples[@]}"

	# break the symlinks
	eval-helper --elevate -- rm -rf -- "$root/targets"
	tuples=(
		9 "$root/symlinks/empty-dir"
		9 "$root/symlinks/empty-file"
		9 "$root/symlinks/filled-dir--empty-subfile"
		9 "$root/symlinks/filled-dir--filled-subdir"
		9 "$root/symlinks/filled-dir--filled-subdir--empty-subdir"
		9 "$root/symlinks/filled-dir--filled-subfile"
		9 "$root/symlinks/filled-file"
		9 "$root/symlinks/unaccessible-empty-dir"
		9 "$root/symlinks/unaccessible-empty-file"
		9 "$root/symlinks/unaccessible-filled-dir"
		9 "$root/symlinks/unaccessible-filled-dir--empty-subfile"
		9 "$root/symlinks/unaccessible-filled-dir--filled-subdir"
		9 "$root/symlinks/unaccessible-filled-dir--filled-subdir--empty-subdir"
		9 "$root/symlinks/unaccessible-filled-dir--filled-subfile"
		9 "$root/symlinks/unaccessible-filled-file"
		9 "$root/symlinks/unexecutable-empty-dir"
		9 "$root/symlinks/unexecutable-empty-file"
		9 "$root/symlinks/unexecutable-filled-dir"
		9 "$root/symlinks/unexecutable-filled-dir--empty-subfile"
		9 "$root/symlinks/unexecutable-filled-dir--filled-subdir"
		9 "$root/symlinks/unexecutable-filled-dir--filled-subdir--empty-subdir"
		9 "$root/symlinks/unexecutable-filled-dir--filled-subfile"
		9 "$root/symlinks/unexecutable-filled-file"
		9 "$root/symlinks/unreadable-empty-dir"
		9 "$root/symlinks/unreadable-empty-file"
		9 "$root/symlinks/unreadable-filled-dir"
		9 "$root/symlinks/unreadable-filled-dir--empty-subfile"
		9 "$root/symlinks/unreadable-filled-dir--filled-subdir"
		9 "$root/symlinks/unreadable-filled-dir--filled-subdir--empty-subdir"
		9 "$root/symlinks/unreadable-filled-dir--filled-subfile"
		9 "$root/symlinks/unreadable-filled-file"
		9 "$root/symlinks/unwritable-empty-dir"
		9 "$root/symlinks/unwritable-empty-file"
		9 "$root/symlinks/unwritable-filled-dir"
		9 "$root/symlinks/unwritable-filled-dir--empty-subfile"
		9 "$root/symlinks/unwritable-filled-dir--filled-subdir"
		9 "$root/symlinks/unwritable-filled-dir--filled-subdir--empty-subdir"
		9 "$root/symlinks/unwritable-filled-dir--filled-subfile"
		9 "$root/symlinks/unwritable-filled-file"
	)
	is_fs_tests__tuples --group='test broken symlinks' "$command" -- "${tuples[@]}"

)
function is_file() (
	source "$DOROTHY/sources/is-fs.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Check if all <path>s are a file, or an unbroken symlink to a file.
			Companion to [echo-if-file].

			USAGE:
			is-file [...options] [--] ...<path>

			OPTIONS:
			$(is_fs_options '13')

			RETURNS:
			[0] if all <path>s were a file
			[2] if a <path> was missing
			[9] if a <path> was a broken symlink
			[13] if a <path> was not accessible
			[22] if empty arguments were provided
			[79] if a <path> was present, but was not a file nor an unbroken symlink to a file
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	is_fs_args "$@"

	# invoke
	is_fs_invoke 'is-file.bash' '13'

	# if verbose and failure, output contextual failure
	if [[ $option_quiet == 'no' && $fs_status -ne 0 ]]; then
		case "$fs_status" in
		2) echo-style --stderr --error1='The path was missing: ' --code-error1="$fs_failed_path" ;;
		9) echo-style --stderr --error1='The path was a broken symlink: ' --code-error1="$fs_failed_path" ;;
		13) echo-style --stderr --error1='The path was not accessible: ' --code-error1="$fs_failed_path" ;;
		22) echo-style --stderr --error1='The path was not a valid argument: ' --code-error1="$fs_failed_path" ;;
		79) echo-style --stderr --error1='The path was present, but was not a file nor an unbroken symlink to file: ' --code-error1="$fs_failed_path" ;;
		*) echo-style --stderr --error1='The path encountered error ' --code-error1="$fs_status" --error1=': ' --code-error1="$fs_failed_path" ;;
		esac
	fi

	# done
	return "$fs_status"
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		is_file_test
	else
		is_file "$@"
	fi
fi
