#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"
source "$DOROTHY/sources/splitlines.bash"

# validate
if test "${3-}" != '--'; then
	stderr echo 'USAGE: choose-option <question> <selection> -- <option...>'
	exit 1
fi

# extract
question="${1-}"
selection="${2-}"

# extract options
if test "$#" -eq 4; then
	# if only one argument, then options have been jumbled, so extract on newlines
	mapfile -t options <<< "$4"
else
	# if using multiple arguments, allow arguments to contain newlines
	options=("${@:4}")
fi

# sanity check
if is-array-empty-or-partial "${options[@]}"; then
	stderr echo "no options or an invalid option was provided:"
	stderr echo-verbose "${options[@]}"
	exit 1
fi

# filter
if test -n "$selection"; then
	filtered=()
	for option in "${options[@]}"; do
		if [[ "${option,,}" = *"${selection,,}"* ]]; then
			filtered+=("${option}")
		fi
	done

	# sanity check after filtering
	if is-array-empty "${filtered[@]}"; then
		stderr echo "No options matched the selection [$selection], asking again..."
		choose-option "$1" '' -- "${options[@]}"
		exit "$?"
	fi

	# apply
	options=("${filtered[@]}")
fi


# if we have one option, then use that
if is-array-count 1 "${options[@]}"; then
	echo "${options[0]}"
	exit
fi

# let the user pick
stderr echo "$question"
choose "${options[@]}"
