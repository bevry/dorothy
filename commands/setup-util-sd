#!/usr/bin/env bash

# https://github.com/chmln/sd
# sed/awk alternative

# https://github.com/chmln/sd/releases
# sd-v1.0.0-aarch64-apple-darwin.tar.gz
# sd-v1.0.0-aarch64-unknown-linux-musl.tar.gz
# sd-v1.0.0-arm-unknown-linux-gnueabihf.tar.gz
# sd-v1.0.0-armv7-unknown-linux-gnueabihf.tar.gz
# sd-v1.0.0-x86_64-apple-darwin.tar.gz
# sd-v1.0.0-x86_64-pc-windows-gnu.zip
# sd-v1.0.0-x86_64-pc-windows-msvc.zip
# sd-v1.0.0-x86_64-unknown-linux-gnu.tar.gz
# sd-v1.0.0-x86_64-unknown-linux-musl.tar.gz

# https://repology.org/project/sd-find-replace/versions

function setup_util_sd() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance for detectable utilities with conditional assets
	if setup-util "$@" --check --cli=sd; then
		return 0
	fi

	# no urpmi
	local arch options=(
		--cli='sd'
		"$@"
		AUR='sd' # ARCH
		BREW='sd'
		BSD='sd'
		CARGO='sd'
		CHOCO='sd-cli'
		EMERGE='sys-apps/sd' # GENTOO
		EOPKG='sd'           # SOLUS
		NIX='sd'
		RPM='sd'    # FEDORA
		XBPS='sd'   # VOID
		ZYPPER='sd' # SUSE
	)
	arch="$(get-arch)"
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='chmln/sd' \
			--latest \
			--asset-regexp="$(echo-escape-regexp -- "$1")$" | echo-first-line || :
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_ARCHIVE_GLOB="*/$2"
		)
	}
	if is-mac; then
		if test "$arch" = 'a64'; then
			add_download_option '-aarch64-apple-darwin.tar.gz' 'sd'
		else
			add_download_option '-x86_64-apple-darwin.tar.gz' 'sd'
		fi
	elif is-linux; then
		arch="$(get-arch)"
		if test "$arch" = 'a64'; then
			add_download_option '-aarch64-unknown-linux-musl.tar.gz' 'sd'
		elif test "$arch" = 'x64'; then
			add_download_option '-x86_64-unknown-linux-musl.tar.gz' 'sd'
		elif test "$arch" = 'a32'; then
			add_download_option '-armv7-unknown-linux-gnueabihf.tar.gz' 'sd'
		fi
	elif is-wsl; then
		arch="$(get-arch)"
		if test "$arch" = 'x64'; then
			add_download_option '-x86_64-pc-windows-msvc.zip' 'sd.exe'
		fi
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_sd "$@"
fi
