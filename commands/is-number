#!/usr/bin/env bash

function is_number_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-segment --h1="TEST: $0"

	eval-tester --name='zero IS a number' --status=0 \
		-- is-number -- 0

	eval-tester --name='one IS a number' --status=0 \
		-- is-number -- 1

	eval-tester --name='ten IS a number' --status=0 \
		-- is-number -- 10

	eval-tester --name='decimal IS a number' --status=0 \
		-- is-number -- 0.1

	eval-tester --name='triple decimal IS NOT a number' --status=1 \
		-- is-number -- 1.1.1

	eval-tester --name='negative IS a number' --status=0 \
		-- is-number -- -1

	eval-tester --name='negative 10 IS a number' --status=0 \
		-- is-number -- -10

	eval-tester --name='negative decimal IS a number' --status=0 \
		-- is-number -- -1.1

	eval-tester --name='negative triple decimal IS NOT a number' --status=1 \
		-- is-number -- -1.1.1

	eval-tester --name='dash IS NOT a number' --status=1 \
		-- is-number -- '-'

	eval-tester --name='empty IS NOT a number' --status=1 \
		-- is-number -- ''

	eval-tester --name='letter IS NOT a number' --status=1 \
		-- is-number -- 'a'

	eval-tester --name='combo IS NOT a number' --status=1 \
		-- is-number -- '-0a'

	echo-segment --g1="TEST: $0"
	return 0
)
function is_number() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	# help
	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Checks if the <input> is a valid number.

			USAGE:
			is-number [...options] [--] <input>

			OPTIONS:
			<input>
			    Verify this <input> is a valid number

			RETURNS:
			[0] if all <input>s were valid numbers
			[1] if any <input>s were not valid numbers
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_inputs=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			option_inputs+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_inputs+=("$item") ;;
		esac
	done

	# verify
	if test "${#option_inputs[@]}" -eq 0; then
		help 'No <input>s provided.'
	fi

	# =====================================
	# Action

	local input
	for input in "${option_inputs[@]}"; do
		[[ $input =~ ^[-]?[0-9]+(\.[0-9]+)?$ ]] || return # explicit return with [[ required for bash v3
	done
	return 0
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	if test "$*" = '--test'; then
		is_number_test
	else
		is_number "$@"
	fi
fi
