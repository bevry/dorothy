#!/usr/bin/env bash

function network_interface() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Helpers for dealing with network interfaces.

			USAGE:
			network-interface <up|down|restart> <interface>
			network-interface list
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item action='' option_interface=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$action"; then
				action="$item"
			elif test -z "$option_interface"; then
				option_interface="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# ensure
	if test -z "$action"; then
		help "You must provide an <action>"
	fi
	if test -z "$option_interface" -a "$action" != 'list'; then
		help "You must provide an <interface>"
	fi

	# =====================================
	# Action

	# https://archlinux.org/news/deprecation-of-net-tools/
	# https://wiki.archlinux.org/title/Network_configuration#net-tools

	function up {
		if command-exists ip; then
			sudo-helper -- ip link set "$option_interface" up
		else
			setup-util-netscript --optional --quiet
			sudo-helper -- ifup "$option_interface"
		fi
		sleep 3
	}
	function down {
		if command-exists ip; then
			sudo-helper -- ip link set "$option_interface" down
		else
			setup-util-netscript --optional --quiet
			sudo-helper -- ifdown "$option_interface"
		fi
		sleep 3
	}
	function restart {
		if command-exists ip; then
			# restart action isn't a thing
			# so make it two step
			# and don't care if down fails,
			# as we just care about up
			sudo-helper -- ip link set "$option_interface" down || :
			sudo-helper -- ip link set "$option_interface" up
		else
			setup-util-netscript --optional --quiet
			sudo-helper -- ifdown "$option_interface"
			sudo-helper -- ifup "$option_interface"
		fi
	}
	function list {
		if is-mac; then
			# An asterisk (*) denotes that a network service is disabled.
			networksetup -listallnetworkservices | grep --invert-match --fixed-strings --regexp='*'
		else
			resolvectl status --no-pager | rg --regexp='Link \d \((.+?)\)' --replace='$1'
		fi
	}

	# =====================================
	# Act

	case "$action" in
	'up' | 'down' | 'restart' | 'list')
		"$action"
		;;
	*)
		help "Unknown action: $action"
		;;
	esac
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	network_interface "$@"
fi
