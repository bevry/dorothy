#!/usr/bin/env bash

function flush_dns() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Flush the system's DNS cache.

			USAGE:
			flush-dns
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Action

	echo-style --h1="Flush DNS"

	# https://support.apple.com/en-us/HT202516
	if is-mac; then
		if __command_exists -- mDNSResponder; then
			eval-helper --shapeshifter --quiet \
				--pending="$(echo-style --bold='Restarting [mDNSResponder]...')" \
				--success="$(echo-style --success='Restarted [mDNSResponder].')" \
				--failure="$(echo-style --error='Failed to restart [mDNSResponder].')" \
				-- sudo-helper \
				-- killall -HUP mDNSResponder
		fi
		if __command_exists -- dscacheutil; then
			eval-helper --shapeshifter --quiet \
				--pending="$(echo-style --bold='Flushing [dscacheutil]...')" \
				--success="$(echo-style --success='Flushed [dscacheutil].')" \
				--failure="$(echo-style --error='Failed to flush [dscacheutil].')" \
				-- sudo-helper \
				-- dscacheutil -flushcache
		fi
		if __command_exists -- discoveryutil; then
			eval-helper --shapeshifter --quiet \
				--pending="$(echo-style --bold='Flushing [discoveryutil]...')" \
				--success="$(echo-style --success='Flushed [discoveryutil].')" \
				--failure="$(echo-style --error='Failed to flush [discoveryutil].')" \
				-- sudo-helper \
				-- discoveryutil mdnsflushcache
		fi
	elif __command_exists -- resolvectl; then
		eval-helper --shapeshifter --quiet \
			--pending="$(echo-style --bold='Flushing DNS cache via [Systemd]...')" \
			--success="$(echo-style --success='Flushed DNS cache via [Systemd]')" \
			--failure="$(echo-style --error='Failed to flush DNS cache via [Systemd].' ' ' --notice='If using an alternative DNS service, then this is expected.')" \
			-- sudo-helper \
			-- resolvectl flush-caches --no-pager || :
	else
		echo-error 'DNS flushing not yet implemented for this operating system.'
		return 19 # ENODEV 19 Operation not supported by device
	fi

	echo-style --g1="Flush DNS"
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	flush_dns "$@"
fi
