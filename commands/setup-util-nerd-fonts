#!/usr/bin/env bash

# https://www.nerdfonts.com/font-downloads
# https://github.com/ryanoasis/nerd-fonts/releases

function setup_util_nerd_fonts() (
	source "$DOROTHY/sources/bash.bash"

	# don't improve performance, as we prompt the user for which fonts to install
	# so currently don't have the ability to check that the prompted font is installed or not
	# that would require say a CASK_SEARCH arg, or accepting multiple --font args

	local options=(
		--no-check
		--name='Nerd Fonts'
		--font='*NerdFont*'
		"$@"
	)

	# if brew, prompt for casks
	if is-brew; then
		source "$DOROTHY/sources/ripgrep.bash"
		local choices=()
		mapfile -t choices < <(
			brew search --cask --quiet '/-nerd-font$/' | rg --regexp='font-(.+?)-nerd-font' --replace="\$1" --only-matching
		)
		local selection=()
		mapfile -t selection < <(
			choose-option --multi --question='Which Nerd Fonts to install?' -- "${choices[@]}"
		)
		# only install these if installing, we also do uninstall remember
		if test "${#selection[@]}" -ne 0; then
			local option
			for option in "${selection[@]}"; do
				options+=("CASK=font-$option-nerd-font")
			done
		fi
	else
		# otherwise prompt for tars
		# need to avoid FontPatcher.zip asset
		source "$DOROTHY/sources/ripgrep.bash"
		local assets=()
		mapfile -t assets < <(
			github-download \
				--dry \
				--slug='ryanoasis/nerd-fonts' \
				--latest \
				--asset-regexp='\.tar\.xz$' \
				--archive-glob='*.{otf,ttf}' || :
		)
		local choices=()
		for asset in "${assets[@]}"; do
			choices+=(
				"$asset"
				"$(rg --regexp='([^/]+?)[.]tar[.]xz$' --replace="\$1" --only-matching <<<"$asset")"
			)
		done
		local selection=()
		mapfile -t selection < <(
			choose-option --multi --question='Which Nerd Fonts to install?' --label -- "${choices[@]}"
		)
		# only install these if installing, we also do uninstall remember
		if test "${#selection[@]}" -ne 0; then
			options+=(
				DOWNLOAD="$(print_lines "${selection[@]}")"
				DOWNLOAD_ARCHIVE_GLOB='**/*.{otf,ttf}'
			)
		fi
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_nerd_fonts "$@"
fi
