#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

flag="${1-}"

# shellcheck disable=2016
if test -z "$flag"; then
	stderr echo 'USAGE:'
	stderr echo 'get-flag-value <flag> [--multi] -- <--flag=value> <--flag> <--no-flag> ...'
	stderr echo
	stderr echo '--flag becomes yes'
	stderr echo '--no-flag becomes no'
	stderr echo
	stderr echo '--flag= is ignored'
	stderr echo
	stderr echo 'by default only returns first instance, if wanting duplicates:'
	stderr echo 'mapfile -t a < <(env MULTI=yes get-flag-value a -- --a --a)'
	stderr echo
	stderr echo 'DOES NOT SUPPORT: --flag value'
	stderr echo 'IT ONLY SUPPORTS: --flag=value'
	stderr echo
	exit 1
fi

# cycle
multi='no'
process='no'
for arg in "${@:2}"; do
	# handle our own options
	if test "$process" = 'no'; then
		if test "$arg" = '--multi'; then
			multi='yes'
		elif test "$arg" = '--'; then
			process='yes'
		fi
		continue
	fi

	# prepare
	inverted='no'
	index=0

	# check flag status
	if test "${arg:0:2}" != '--'; then
		# not a flag
		continue
	fi
	index=2

	# check inversion
	if test "${arg:index:3}" == 'no-'; then
		# is inverted
		inverted='yes'
		index=5
	fi

	# check is our flag
	if test "${arg:index:${#flag}}" != "$flag"; then
		# not our flag
		continue
	fi

	# get the value
	value="${arg:index+${#flag}}"
	if test -z "$value"; then
		value='yes'
	elif test "${value:0:1}" = '='; then
		# is a proper value, trim =
		value="${value:1}"
	fi

	# perform inversion
	if test "$inverted" = 'yes'; then
		if test "$value" = 'yes'; then
			value='no'
		elif test "$value" = 'no'; then
			value='yes'
		fi
	fi

	# echo
	echo "$value"

	# if single, one result is all we want
	if test "$multi" = 'no'; then
		break
	fi
done
