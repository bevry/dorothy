#!/usr/bin/env bash

# https://github.com/dalance/procs
# ps alternative

# https://github.com/dalance/procs/releases
# procs-0.14.0-1.x86_64.rpm
# procs-v0.14.0-x86_64-linux.zip
# procs-v0.14.0-x86_64-mac.zip
# procs-v0.14.0-x86_64-windows.zip

# https://repology.org/project/procs/versions

function setup_util_procs() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance for detectable utilities with conditional assets
	if setup-util "$@" --check --cli=procs; then
		return 0
	fi

	# no apt
	local arch options=(
		--cli='procs'
		"$@"
		APK='procs' # ALPINE
		AUR='procs' # ARCH
		BREW='procs'
		CARGO='procs'
		NIX='procs'
		RPM='procs' # FEDORA
		SCOOP='procs'
		SNAP='procs'
		ZYPPER='procs' # SUSE
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='dalance/procs' \
			--latest \
			--asset-regexp="$(echo-escape-regexp -- "$1")$" | echo-first-line || :
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_ARCHIVE_GLOB="$2"
		)
	}
	function add_rpm_option {
		options+=(
			RPM="$(get_github_asset_url "$1")"
		)
	}
	arch="$(get-arch)"
	if is-mac; then
		add_download_option '-x86_64-mac.zip' 'procs'
	elif is-linux; then
		if test "$arch" = 'x64'; then
			add_rpm_option '.x86_64.rpm'
			add_download_option '-x86_64-linux.zip' 'procs'
		fi
	elif is-wsl; then
		if test "$arch" = 'x64'; then
			add_download_option '-x86_64-windows.zip' 'procs.exe'
		fi
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_procs "$@"
fi
