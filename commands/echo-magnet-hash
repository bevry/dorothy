#!/usr/bin/env bash

function echo_magnet_hash_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-style --h1="TEST: $0"

	local magnet='magnet:?xt=urn:btih:dd8255ecdc7ca55fb0bbf81323d87062db1f6d1c&dn=Big+Buck+Bunny&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fbig-buck-bunny.torrent'
	eval-tester --name='works' --stdout='dd8255ecdc7ca55fb0bbf81323d87062db1f6d1c' \
		-- echo-magnet-hash -- "$magnet"

	eval-tester --name='missing' --stdout='' \
		-- echo-magnet-hash -- 'asd'

	echo-style --g1="TEST: $0"
	return 0
)

function echo_magnet_hash() (
	source "$DOROTHY/sources/stdinargs.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Given a magnet input, output the hash.

			USAGE:
			echo-magnet-hash [...options] [--] <input>
			echo-lines ...<input> | echo-magnet-hash [...options]

			OPTIONS:
			$(stdinargs_options_help --)

			EXAMPLE:

			echo-magnet-hash -- 'magnet:?xt=urn:btih:dd8255ecdc7ca55fb0bbf81323d87062db1f6d1c&dn=Big+Buck+Bunny&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fbig-buck-bunny.torrent'

			    dd8255ecdc7ca55fb0bbf81323d87062db1f6d1c
			    # exit status: 0

		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# =====================================
	# Action

	function on_line {
		hash="$(echo-regexp -o 'btih:([\w\d]+)' '$1' -- "$1" || :)"
		if [[ -n $hash ]]; then
			# convert to lowercase
			__lowercase_string -- "$hash"
		fi
	}

	stdinargs "$@"
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		echo_magnet_hash_test
	else
		echo_magnet_hash "$@"
	fi
fi
