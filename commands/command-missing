#!/usr/bin/env bash

function command_missing() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Checks if a <command> is missing.

			USAGE:
			command-missing [--] ...<command>

			RETURNS:
			[0] if ANY command is missing.
			[1] if ALL commands were present.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item commands=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			commands+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) commands+=("$item") ;;
		esac
	done

	# check
	if test "${#commands[@]}" -eq 0; then
		help 'No <command>s provided.'
	fi

	# =====================================
	# Action

	local command
	for command in "${commands[@]}"; do
		if test "$command" = 'brew'; then
			# workaround for our [brew] wrapper
			if is-brew; then
				continue
			else
				return 0 # a command is missing
			fi
		elif type -P "$command" &>/dev/null; then
			continue
		else
			return 0 # a command is missing
		fi
	done
	return 1 # all commands are present
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	command_missing "$@"
fi
