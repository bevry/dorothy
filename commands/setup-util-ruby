#!/usr/bin/env bash

function setup_util_ruby() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance for detectable utilities with conditional assets
	if setup-util "$@" --check --cli=ruby; then
		return 0
	fi

	# enable EVAL_INSTALL, etc
	source "$(type -P setup-util)"

	# helpers
	function ruby_install {
		# install a specific ruby version via homebrew if supported
		local brew_ruby='ruby'
		if test -n "${HOMEBREW_RUBY_VERSION-}" -a "${HOMEBREW_RUBY_VERSION-}" != 'default'; then
			brew_ruby="ruby@${HOMEBREW_RUBY_VERSION}"
		fi

		# perform the installation
		setup-util --cli='ruby' "$@" \
			APK='ruby-full' \
			APT='ruby-full' \
			AUR='ruby' \
			BREW="$brew_ruby" \
			RPM='ruby-devel' \
			ZYPPER='ruby-devel' # 'ruby' is also available
		set +x

		# =====================================
		# Selection

		# upgrade configuration to use a single specific ruby version (if multiple exist)
		local version_options bin_directory executable directory directory_version full_version version_options
		if is-brew; then
			if test -z "${HOMEBREW_RUBY_VERSION-}" || test "$HOMEBREW_RUBY_VERSION" = 'default' -a ! -d "$HOMEBREW_PREFIX/opt/ruby" || test -d "$HOMEBREW_PREFIX/opt/ruby@$HOMEBREW_RUBY_VERSION"; then
				# discover
				version_options=()
				rubyBinDirectories=("$HOMEBREW_PREFIX/opt/ruby"*'/bin')
				for bin_directory in "${rubyBinDirectories[@]}"; do
					executable="$bin_directory/ruby"
					directory="$(basename "$(fs-dirname -- "$bin_directory")")"
					directory_version="${directory#*@}"
					full_version="$("$executable" --version)"
					if test "$directory_version" = "$directory"; then
						directory_version='default'
					fi
					version_options+=(
						"$directory_version"
						"$(
							echo-style \
								--bold="$directory_version" \
								$'\n  ' --dim="$full_version" \
								$'\n  ' --dim="$executable"
						)"
					)
				done

				# select
				HOMEBREW_RUBY_VERSION="$(
					choose-option \
						--question='There are multiple homebrew ruby versions installed, which version do you wish to prefer?' \
						--label -- "${version_options[@]}"
				)"

				# apply
				config-helper --file="$DOROTHY/user/config/environment.bash" -- \
					--field='HOMEBREW_RUBY_VERSION' --value="$HOMEBREW_RUBY_VERSION"
			fi

			echo-style --dim="Homebrew Ruby Version: $HOMEBREW_RUBY_VERSION"
		fi

		# .ruby is an deprecated cache location, clear it
		if test -d "$HOME/.ruby"; then
			fs-rm --quiet --no-confirm -- "$HOME/.ruby"
		fi
		# clear .gem is if it is not GEM_HOME
		if test -n "${GEM_HOME-}"; then
			if test "$GEM_HOME" != "$HOME/.gem"; then
				fs-rm --quiet --no-confirm -- "$HOME/.gem"
			fi
			mkdir -p "$GEM_HOME"
		else
			mkdir -p "$HOME/.gem"
		fi
	}
	function ruby_upgrade {
		rust_install --upgrade "$@"
	}
	function ruby_uninstall {
		# perform the uninstallation
		setup-util --uninstall --cli='ruby' "$@" \
			APK='ruby-full' \
			APT='ruby-full' \
			AUR='ruby' \
			BREW="$brew_ruby" \
			RPM='ruby-devel' \
			ZYPPER='ruby-devel' # 'ruby' is also available
	}

	# setup
	local options=(
		--cli='ruby'
		"$@"
		EVAL_INSTALL='ruby_install'
		EVAL_UPGRADE='ruby_upgrade'
		EVAL_UNINSTALL='ruby_uninstall'
	)
	setup_util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_ruby "$@"
fi
