#!/usr/bin/env bash
# shellcheck disable=SC2164,SC1091
source "$DOROTHY/sources/strict.bash"

# prepare the options
option_ec='0'
option_stdout=''
option_stderr=''
while is-needle '--' "$@"; do
	if [[ "$1" = '--ec='* ]]; then
		option_ec="${1:5}"
	elif [[ "$1" = '--stdout='* ]]; then
		option_stdout="${1:9}"
	elif [[ "$1" = '--stderr='* ]]; then
		option_stderr="${1:9}"
	fi
	shift
done

# run the command
fail='no'
stdout="$(mktemp)"
stderr="$(mktemp)"
echo-segment --h3="$*"
ec=0 && ("$@") >"$stdout" 2>"$stderr" || ec="$?"

# test exit code
if test "$option_ec" -ne "$ec"; then
	echo-color --red="Actual Exit Code [$ec]  !=  Expected Exit Code [$option_ec]"
	fail='yes'
else
	echo-color --green="Actual Exit Code [$ec]  ==  Expected Exit Code [$option_ec]"
fi

# test stdout
if test -n "$option_stdout"; then
	if test "$option_stdout" != "$(cat "$stdout")"; then
		echo-color --red="Actual Stdout  !=  Expected Stdout"
		echo-color --h3='< actual stdout>'
		cat "$stdout"
		echo-color --h3='</ actual stdout>'
		echo-color --h3='< expected stdout>'
		echo "$option_stdout"
		echo-color --h3='</ expected stdout>'
		fail='yes'
	else
		echo-color --green="Actual Stdout  ==  Expected Stdout"
	fi
fi

# test stderr
if test -n "$option_stderr"; then
	if test "$option_stderr" != "$(cat "$stderr")"; then
		echo-color --red="Actual Stderr  !=  Expected Stderr"
		echo-color --h3='< actual stderr>'
		cat "$stderr"
		echo-color --h3='</ actual stderr>'
		echo-color --h3='< expected stderr>'
		echo "$option_stderr"
		echo-color --h3='</ expected stderr>'
		fail='yes'
	else
		echo-color --green="Actual Stderr  ==  Expected Stderr"
	fi
fi

# pass or fail
if test "$fail" = 'yes'; then
	echo-segment --e3="$*"
	echo
	exit 1
else
	echo-segment --g3="$*"
	echo
fi
