#!/usr/bin/env bash

function is_user_in_group() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Checks if the current user, or specified users, are members of one or more groups.

			USAGE:
			is-user-in-group [...options]

			OPTIONS:
			--group=<group> | --groupname=<group>
			    A group to check that the <user> exists inside.

			<user> | --user=<user> | --username=<user>
			    A user to check is within the <group>s.

			RETURNS:
			[0] if all <user>s were within <group>.
			[1] if any <user>s were not within <group>.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_users=() option_groups=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--group='*) option_groups+=("${item#*=}") ;;
		'--groupname='*) option_groups+=("${item#*=}") ;;
		'--user='*) option_users+=("${item#*=}") ;;
		'--username='*) option_users+=("${item#*=}") ;;
		'--')
			option_users+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_users+=("$item") ;;
		esac
	done

	# ensure user
	if test "${#option_users[@]}" -eq 0; then
		option_users+=("$(whoami)")
	fi

	# check group
	if test "${#option_groups[@]}" -eq 0; then
		help "No <group>s provided."
	fi

	# confirm `groups` is available
	# vscode flatpak doesn't have it, so vscode flatpak terminal will fail
	# groups: command not found
	if command-missing groups; then
		help 'This operating-system is unsupported, as the helper utility [groups] was not available.'
		# @todo can the helper utility be installed?
		return 19 # ENODEV 19 Operation not supported by device
	fi

	# =====================================
	# Action

	# action
	local user group user_groups
	for user in "${option_users[@]}"; do
		user_groups="$(groups "$user")"
		user_groups="${user_groups#*: }"      # trim user prefix on ubuntu
		user_groups="${user_groups// /$'\n'}" # split into lines
		for group in "${option_groups[@]}"; do
			grep --quiet --fixed-strings --regexp="$group" <<<"$user_groups"
		done
	done
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	is_user_in_group "$@"
fi
