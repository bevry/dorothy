#!/usr/bin/env bash

function is_empty_directory_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-style --h1="TEST: $0"

	local dir
	dir="$(fs-temp --directory='is-empty-directory' --directory --touch)"

	eval-tester --name='no args' --status=22 --ignore-stderr \
		-- is-empty-directory --

	eval-tester --name='empty args' --status=22 \
		-- is-empty-directory -- '' ''

	eval-tester --name='missing' --status=1 \
		-- is-empty-directory -- "$DOROTHY/this-does-not-exist"

	eval-tester --name='empty dir is empty' \
		-- is-empty-directory -- "$dir"

	eval-tester --name='empty dirs are empty' \
		-- is-empty-directory -- "$dir" "$dir"

	eval-tester --name='non-empty dir is not empty' --status=1 \
		-- is-empty-directory -- "$DOROTHY"

	eval-tester --name='file is special failure' --status=20 \
		-- is-empty-directory -- "$DOROTHY/README.md"

	eval-tester --name='file then non-empty dir is special failure' --status=20 \
		-- is-empty-directory -- "$DOROTHY/README.md" "$DOROTHY"

	eval-tester --name='non-empty dir then file standard failure' --status=1 \
		-- is-empty-directory -- "$DOROTHY" "$DOROTHY/README.md"

	eval-tester --name='empty then file then non-empty dir is special failure' --status=20 \
		-- is-empty-directory -- "$dir" "$DOROTHY/README.md" "$DOROTHY"

	eval-tester --name='empty then non-empty dir then file standard failure' --status=1 \
		-- is-empty-directory -- "$dir" "$DOROTHY" "$DOROTHY/README.md"

	echo-style --g1="TEST: $0"
	return 0
)
function is_empty_directory() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Checks if a <path> is an empty directory, aka a directory without any contents.

			USAGE:
			is-empty-directory [...options] [--] ...<path>

			OPTIONS:
			--sudo
			    If specified, use sudo on filesystem interactions.
			--user=<user>
			--group=<group>
			    If specified use this user and/or group for filesystem interactions.

			RETURNS:
			[0] if all <path>s are empty
			[1] if any <path>s are not empty
			[20] if any <path>s is not a directory.
			[22] if empty arguments are provided
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_inputs=() option_sudo='no' option_user='' option_group=''
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-sudo'* | '--sudo'*)
			option_sudo="$(get-flag-value --affirmative --fallback="$option_sudo" -- "$item")"
			;;
		'--user='*) option_user="${item#*=}" ;;
		'--group='*) option_group="${item#*=}" ;;
		'--')
			option_inputs+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_inputs+=("$item") ;;
		esac
	done

	# check
	if [[ ${#option_inputs[@]} -eq 0 ]]; then
		help "No <path>s provided."
	fi

	# =====================================
	# Action

	sudo-helper --inherit --sudo="$option_sudo" --user="$option_user" --group="$option_group" -- is-empty-directory.bash -- "${option_inputs[@]}"
	return
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		is_empty_directory_test
	else
		is_empty_directory "$@"
	fi
fi
