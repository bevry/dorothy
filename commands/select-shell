#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"
source "$DOROTHY/sources/environment.sh" # ensure new installations are detected
source "$DOROTHY/sources/config.sh"
load_dorothy_config 'shells.bash'
# ^ provides: USER_SHELLS

function act {
	shell="$(command -v "$1")"

	if ! command-exists "$shell"; then
		stderr echo "ERROR: which for the shell [$1] returned [$shell]"
		exit 1
	fi

	echo "selected the shell [$1] at [$shell]"

	if contains-line "$shell" </etc/shells; then
		echo "=> already added to [/etc/shells]"
	else
		echo "=> adding to [/etc/shells]"
		echo "$shell" | sudo tee -a /etc/shells
	fi

	echo "=> applying as [$USER]'s login shell"
	if command-exists chpass; then
		# mac
		chpass -s "$shell" -u "$USER"
	else
		# ubuntu
		chsh -s "$shell" "$USER"
	fi

	# success case
	echo "=> successfully selected the shell [$shell]"
	exit 0
}

if test "$#" -ne 0; then
	# cycle through the arguments
	for item in "$@"; do
		if command-exists "$item"; then
			act "$item"
			break
		fi
	done
elif test -v 'USER_SHELLS'; then
	# cycle through preferences
	for item in "${USER_SHELLS[@]}"; do
		is-empty-string "$item" && continue
		if command-exists "$item"; then
			act "$item"
			break
		fi
	done
else
	# ask the user
	usual=(
		fish
		zsh
		bash
		sh
	)
	choices=()
	for item in "${usual[@]}"; do
		if command-exists "$item"; then
			choices+=("$item")
		fi
	done
	act "$(choose-option --question="Which shell to use as your login shell?" -- "${choices[@]}")"
fi

# no shell was selected, error
stderr echo 'no shell was found that was selected'
exit 1
