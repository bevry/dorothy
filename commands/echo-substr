#!/usr/bin/env bash

function echo_substr_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-style --h1="TEST: $0"

	eval-tester --stdout=012345 \
		-- echo-substr --start=0 -- 012345

	eval-tester --stdout=01234 \
		-- echo-substr --length=-1 -- 012345

	eval-tester --stdout=45 \
		-- echo-substr --start=-2 -- 012345

	eval-tester --stdout=4 \
		-- echo-substr --start=-2 --length=-1 -- 012345

	eval-tester --stdout=012345 \
		-- echo-substr --start=-10 -- 012345

	eval-tester --stdout= \
		-- echo-substr --length=-10 -- 012345

	eval-tester --stdout=012345 \
		-- echo-substr --length=10 -- 012345

	eval-tester --stdout=012345 \
		-- echo-substr --start=-10 --length=10 -- 012345

	eval-tester --stdout= \
		-- echo-substr --start=10 --length=-10 -- 012345

	echo-style --g1="TEST: $0"
	return 0
)
function echo_substr() (
	source "$DOROTHY/sources/stdinargs.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Output a substring of the <input> by the <start> and <length> arguments.

			USAGE:
			echo-substr [...options] [--] ...<input>
			echo-lines ...<input> | echo-substr [...options]

			OPTIONS:
			--start=<start> | <start>
			    The start index of the substring, can be negative to start from the end, defaults to 0.

			--length=<length> | <length>
			    The length of the substring, defaults to the remaining length of the <input>.

			$(stdinargs_options_help --)
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process our own arguments, delegate everything else to stdinargs
	local item option_start='' option_length='' option_args=()
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--start='*) option_start="${item#*=}" ;;
		'--length='*) option_length="${item#*=}" ;;
		# forward to stdinargs, however support mixing and matching of our options, with stdinargs options
		'--')
			option_args+=("$item" "$@")
			shift $#
			break
			;;
		*)
			if [[ -z $option_start ]]; then
				option_start="$item"
			elif [[ -z $option_length ]]; then
				option_length="$item"
			else
				option_args+=("$item")
			fi
			;;
		esac
	done

	# =====================================
	# Action

	function on_input {
		__substr "$1" "$option_start" "$option_length"
	}

	stdinargs "${option_args[@]}"
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		echo_substr_test
	else
		echo_substr "$@"
	fi
fi
