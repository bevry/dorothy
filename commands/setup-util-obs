#!/usr/bin/env bash

# https://github.com/obsproject/obs-studio/releases
# OBS-Studio-30.0-Full-Installer-x64.exe
# OBS-Studio-30.0.0-macOS-Apple-dSYMs.tar.xz
# OBS-Studio-30.0.0-macOS-Apple.dmg
# OBS-Studio-30.0.0-macOS-Intel-dSYMs.tar.xz
# OBS-Studio-30.0.0-macOS-Intel.dmg
# OBS-Studio-30.0.0-Ubuntu-x86_64-dbsym.ddeb
# OBS-Studio-30.0.0-Ubuntu-x86_64.deb
# OBS-Studio-30.0.zip
# obs-studio_30.0.0-0obsproject1.jammy_amd64.deb
# obs-studio_30.0.0-0obsproject1.lunar_amd64.deb
# obs-studio_30.0.0-0obsproject1.mantic_amd64.deb

function setup_util_obs() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance for detectable utilities with conditional assets
	if setup-util "$@" --check --app='OBS'; then
		return 0
	fi

	# determine options
	local arch options=(
		--name='Open Broadcaster Software'
		--app='OBS'
		"$@"
		CASK='obs'
		WINGET='XPFFH613W8V6LV' # Microsoft Store
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='obsproject/obs-studio' \
			--latest \
			--asset-regexp="$(echo-escape-regexp -- "$1")$" | echo-first-line || :
	}
	function add_download_app_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_ARCHIVE_GLOB='*/OBS.app'
			DOWNLOAD_FILENAME='OBS.app'
		)
	}
	function add_deb_option {
		options+=(
			DEB="$(get_github_asset_url "$1")"
		)
	}
	arch="$(get-arch)"
	if is-mac; then
		if test "$arch" = 'a64'; then
			add_download_app_option '-macOS-Apple.dmg'
		elif test "$arch" = 'x64'; then
			add_download_app_option '-macOS-Intel.dmg'
		fi
	elif is-ubuntu && test "$arch" = 'x64'; then
		add_deb_option ".$(get-ubuntu-release-name)_amd64.deb"
	fi
	setup-util "${options[@]}"
	# .exe failed with:
	# Start : This command cannot be run due to the error: Incorrect function.
	# At line:1 char:128
	# + ... oding(850); Start "\\wsl.localhost\Ubuntu\home\balupton\.cache\doroth ...
	# +                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#     + CategoryInfo          : InvalidOperation: (:) [Start-Process], InvalidOperationException
	#     + FullyQualifiedErrorId : InvalidOperationException,Microsoft.PowerShell.Commands.StartProcessCommand
	#
	# function add_installer_option {
	# 	options+=(
	# 		INSTALLER="$(get_github_asset_url "$1")"
	# 		INSTALLER_OPEN=yes
	# 	)
	# }
	# elif is-wsl; then
	# 	add_installer_option '-Full-Installer-x64.exe'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_obs "$@"
fi
