#!/usr/bin/env bash

function set_hostname() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Update the current machine's hostname, with correct support for:
			- updating dependent services
			- multiple operating systems and their configurations

			USAGE:
			set-hostname <hostname>
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_hostname=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$option_hostname"; then
				option_hostname="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done
	if test -z "$option_hostname"; then
		help "No <hostname> was provided"
	fi

	# =====================================
	# Dependencies

	setup-util-gsed --quiet

	# =====================================
	# Action

	# @todo: investigate macOS support.
	# https://www.tecmint.com/set-hostname-permanently-in-linux/

	local original result=19 # ENODEV 19 Operation not supported by device
	original="$(get-hostname)"

	# apply the hostname, using ALL available methods
	if command-exists setup-hostname; then
		# https://wiki.alpinelinux.org/wiki/Alpine_setup_scripts#setup-hostname
		setup-hostname -n "$option_hostname"
		result=0
	fi
	if command-exists 'hostname'; then
		sudo-helper -- hostname "$option_hostname"
		result=0
	fi
	if command-exists 'hostnamectl'; then
		sudo-helper -- hostnamectl set-hostname "$option_hostname"
		result=0
	fi
	if test -f '/etc/hostname'; then
		print_line "$option_hostname" | sudo-helper -- tee -a /etc/hostname
		result=0
	fi
	if test -f '/proc/sys/kernel/hostname'; then
		print_line "$option_hostname" | sudo-helper -- tee -a /proc/sys/kernel/hostname
		result=0
	fi
	if command-exists 'sysctl'; then
		sudo-helper -- sysctl kernel.hostname="$option_hostname"
		result=0
	fi

	# write the hostname to the /etc/hosts file, this was necessary for a forgotten reason
	# instead of two --expression, can also do -e 's//; s//'
	# don't use sd, as this runs in initial setup
	sudo-helper --inherit \
		-- gsed --null-data --in-place --regexp-extended \
		--expression="s#127.0.0.1\s+($original|$option_hostname)\n##g" \
		--expression="s#(\s+)localhost\n#\1localhost\n127.0.0.1\1$option_hostname\n#" \
		/etc/hosts
	# cat /etc/hosts

	# restart the name server, using ALL available methods
	if service-helper --supported; then
		service-helper --ignore --restart -- nmb nmbd
	fi
	if test -x /etc/init.d/hostname; then
		/etc/init.d/hostname restart
	fi
	if test -f /etc/sysconfig/network; then
		sudo-helper --inherit \
			-- config-helper --file='/etc/sysconfig/network' -- \
			--field='HOSTNAME' --no-quote --value="$option_hostname"
	fi

	# return success or failure
	return "$result"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	set_hostname "$@"
fi
