#!/usr/bin/env bash
# source "$DOROTHY/sources/strict.bash"

# supports
# - timeout
# - multiple selections
# - single selection
# - tuples via separator

# todoo
# - defaults
# - tuples
# - merge with choose
# - merge with choose-tuple
# - merge with choose-option
# - merge with ask

function get-prefix {
	echo "${1%:*}"
}
function get-suffix {
	echo "${1#*:}"
}

single="$(echo-affirmative "${SINGLE-}" || echo-non-affirmative "${MULTIPLE-}" || echo 'no')"
cursor=0
count="$#"
count="$((count - 2))"
action=""
choices=( "${@:2}" )
selections=()

while test "$action" != "done"; do
	echo "$1" > /dev/tty

	# show the menu
	index=0; for choice in "${choices[@]}"; do
		if test "$index" -eq "$cursor"; then
			echo -n ">" > /dev/tty
		else
			echo -n ' ' > /dev/tty
		fi
		if test -n "${selections[$index]}"; then
			echo -n "*" > /dev/tty
		else
			echo -n ' ' > /dev/tty
		fi
		index="$((index + 1))"
		suffix="$(get-suffix "$choice")"
		echo "$suffix" > /dev/tty
	done

	# handle the response
	action="$(read-arrow)"; ec="$?"

	# handle special caes
	# shellcheck disable=SC2219
	if test "$ec" -ne 0; then
		# timeout
		action='escape'
	elif let "$action" && test "$action" -ge 0 -a "$action" -le 9; then
		# number jump
		# use let to check if it is a number: https://stackoverflow.com/a/19616774/130638
		if test "$action" -gt "$count"; then
			cursor="$count"
		elif test "$action" -le 1; then
			cursor=0
		else
			cursor="$((action - 1))"
		fi
		action='space'
	fi

	# control key
	if test "$action" = "left" -o "$action" = "up"; then
		if test "$cursor" -ne 0; then
			cursor="$((cursor - 1))"
		fi
	elif test "$action" = "right" -o "$action" = "down"; then
		if test "$cursor" -ne "$count"; then
			cursor="$((cursor + 1))"
		fi
	elif test "$action" = "home"; then
		cursor=0
	elif test "$action" = "end"; then
		cursor="$count"
	elif test "$action" = "backspace"; then
		# unselect
		# selections[$cursor]=""
		# select none
		ii=0; for choice in "${choices[@]}"; do
			prefix="$(get-prefix "$choice")"
			selections[$ii]=""
			ii="$((ii + 1))"
		done
	elif test "$action" = "all" -a "$single" = 'no'; then
		# select all
		ii=0; for choice in "${choices[@]}"; do
			prefix="$(get-prefix "$choice")"
			selections[$ii]="$prefix"
			ii="$((ii + 1))"
		done
	elif test "$action" = "space" -o "$action" = "tab"; then
		if test -n "${selections[$cursor]}"; then
			selections[$cursor]=""
		else
			choice="${choices[$cursor]}"
			prefix="$(get-prefix "$choice")"
			selections[$cursor]="$prefix"
			if test "$single" = 'yes'; then
				break
			fi
		fi
	elif test "$action" = "enter" -o "$action" = "escape"; then
		break
	fi

	# no break, so repeat the menu
	clear > /dev/tty
done

# if break, then no clear occured, so clear it here
clear > /dev/tty

if is-array-partial "${selections[@]}"; then
	stderr echo "An invalid selection occured, this should not be possible."
	stderr echo-verbose "${selections[@]}"
	exit 1
fi

# todo figure out enter for singles
if is-array-empty "${selections[@]}" && test "$single" = 'no'; then
	if confirm-positive "You exited without selecting anything, do you wish to select all?" > /dev/tty; then
		cursor=0; for choice in "${choices[@]}"; do
			prefix="$(get-prefix "$choice")"
			selections[$cursor]="$prefix"
			cursor="$((cursor + 1))"
		done
	fi
fi

for selection in "${selections[@]}"; do
	if test -n "$selection"; then
		echo "$selection"
	fi
done
