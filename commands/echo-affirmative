#!/usr/bin/env bash

# turns affirmative arguments into yes
# turns non-affirmative arguments into no

function echo_affirmative() (
	source "$DOROTHY/sources/stdinargs.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			For each <input>, output 'yes' if affirmative, 'no' if non-affirmative, otherwise note the invalidity to stderr.
			Using [is-affirmative] for the validation.

			USAGE:
			echo-affirmative [...options] [--] ...<input>
			echo-lines ...<input> | echo-affirmative [...options]

			OPTIONS:
			$(stdinargs_options_help --)

			EXAMPLE:

			# success case
			echo-affirmative -- yes no true false

			    yes
			    no
			    yes
			    no
			    # exit status: 0

			# failure case
			echo-affirmative -- yes no true false apple orange

			    yes
			    no
			    yes
			    no
			    [apple] is neither affirmative or non-affirmative
			    [orange] is neither affirmative or non-affirmative
			    # exit status: 91

		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# =====================================
	# Action

	local had_invalid_input=no
	function on_input {
		local status
		eval_capture --statusvar=status -- is-affirmative -- "$1"
		if test "$status" -eq 0; then
			print_line 'yes'
		elif test "$status" -eq 1; then
			print_line 'no'
		else
			echo-style --error="[$1] is neither affirmative or non-affirmative" >/dev/stderr
			had_invalid_input=yes
		fi
	}
	function on_finish {
		if test "$had_invalid_input" = yes; then
			return 91 # ENOMSG 91 No message of desired type
		fi
	}

	stdinargs "$@"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_affirmative "$@"
fi
