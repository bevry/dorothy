#!/usr/bin/env bash
source "$DOROTHY/sources/arrays.bash"
source "$DOROTHY/sources/strict.bash"
if test "$ARRAYS" = 'no'; then
	exit 95 # Operation not supported
fi

# dependencies
env QUIET=y setup-util-ripgrep
env QUIET=y setup-util-jq

# options
slug="$(ask --question='What is the repository slug? org/repo' --default="${1-}" --required)"
filter="$(get-flag-value filter -- "$@")" # filter of the release files

# prepare
url="https://api.github.com/repos/$slug/releases/latest"
urls=()
filtered=()
exact=''

# fetch
tuples="$(fetch "$url" | jq -r ".assets[] | (.name, .browser_download_url)")"
mapfile -t names < <(array-evens "${tuples[@]}")
mapfile -t values < <(array-odds "${tuples[@]}")

# cycle
for i in "${!names[@]}"; do
	name="${names[$i]}"
	value="${values[$i]}"
	if rg -q '.(mini)?sig$' <<< "$name"; then
		continue
	elif test -z "$filter"; then
		urls+=("$value")
	elif test "$filter" = "$name"; then
		exact="$value"
		break
	elif rg -q "$filter" <<< "$name"; then
		filtered+=("$value")
	else
		urls+=("$value")
	fi
done

# finish
if test -n "$exact"; then
	echo "$exact"
elif test "${#filtered[@]}" -ne 0; then
	echo-lines "${filtered[@]}"
elif test -n "$filter" -a "${#urls[@]}" -ne 0; then
	stderr echo "The the filter excluded all ${#urls[@]} results."
	exit 1
else
	echo-lines "${urls[@]}"
fi
