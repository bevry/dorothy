#!/usr/bin/env bash

# https://docs.pkgx.sh/pkgx/installing-pkgx

# https://github.com/pkgxdev/pkgx/releases
# pkgx-2.5.0+darwin+aarch64.tar.xz
# pkgx-2.5.0+darwin+x86-64.tar.xz
# pkgx-2.5.0+linux+aarch64.tar.xz
# pkgx-2.5.0+linux+x86-64.tar.xz
# pkgx-2.5.0.tar.xz

# $HOME/.pkgx

function setup_util_pkgx() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance for detectable utilities with conditional assets
	if setup-util "$@" --check --cli=pkgx; then
		return 0
	fi

	# don't interfere with github download:
	# DOWNLOAD="https://pkgx.sh/$(uname)/$(uname -m).tgz"
	# DOWNLOAD_FILENAME='pkgx'
	local arch options=(
		--cli='pkgx'
		"$@"
		BREW='pkgx'
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='pkgxdev/pkgx' \
			--latest \
			--asset-regexp="$(echo-escape-regexp -- "$1")" | echo-first-line || : # file extension after arch (??)
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_ARCHIVE_GLOB='pkgx'
		)
	}
	arch="$(get-arch)"
	if is-mac; then
		if [[ $arch == 'a64' ]]; then
			add_download_option '+darwin+aarch64'
		elif [[ $arch == 'x64' ]]; then
			add_download_option '+darwin+x86-64'
		fi
	elif is-linux; then
		if [[ $arch == 'a64' ]]; then
			add_download_option '+linux+aarch64'
		elif [[ $arch == 'x64' ]]; then
			add_download_option '+linux+x86-64'
		fi
	fi
	setup-util "${options[@]}"
)

# set -x

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	setup_util_pkgx "$@"
fi
