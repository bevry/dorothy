#!/usr/bin/env bash

# https://github.com/eza-community/eza
# ls alternative

# https://github.com/eza-community/eza/releases

# https://repology.org/project/eza/versions

function setup_util_eza() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance for detectable utilities with conditional assets
	if setup-util "$@" --check --cli=eza; then
		return 0
	fi

	# despite docs, no apk
	local arch options=(
		--cli='eza'
		"$@"
		APT_KEY='https://raw.githubusercontent.com/eza-community/eza/main/deb.asc'
		APT_REPO='deb [arch={ARCH} signed-by={KEY}] http://deb.gierens.de stable main'
		APT='eza' # UBUNTU
		AUR='eza' # ARCH
		BREW='eza'
		CARGO='eza'
		NIX='eza' NIX_PROFILE='nixpkgs#eza'
		PORT='eza'
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='eza-community/eza' \
			--latest \
			--asset-regexp="$(echo-escape-regexp -- "$1")" | echo-first-line || : # don't use $ as version number is after the arch
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_ARCHIVE_GLOB="$2"
		)
	}
	arch="$(get-arch)"
	if is-linux; then
		if test "$arch" = 'a64'; then
			add_download_option 'aarch64-unknown-linux-gnu.tar.gz' 'eza'
		elif test "$arch" = 'x64'; then
			add_download_option 'x86_64-unknown-linux-musl.tar.gz' 'eza'
		fi
	elif is-wsl; then
		if test "$arch" = 'x64'; then
			add_download_option 'x86_64-pc-windows-gnu.zip' 'eza.exe'
		fi
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_eza "$@"
fi
