#!/usr/bin/env bash
source "$DOROTHY/sources/bash.bash"

function get_array() (
	source "$DOROTHY/sources/bash.bash"
	require_array 'mapfile'

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Output the amount of elements of the specified size.

			USAGE:
			get-array [...options]

			OPTIONS:
			<size> | --size=<size>
			    How many items to output.

			EXAMPLE:
			mapfile -t arr < <(get-array 10)
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_size=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--size='*) option_size="${item#*=}" ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$option_size"; then
				option_size="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# check
	if test -z "$option_size"; then
		help '<size> is required'
	fi
	if ! is-integer -- "$option_size"; then
		help '<size> was not an integer'
	fi

	# =====================================
	# Action

	local i
	for ((i = 0; i < option_size; i++)); do
		print_line
	done
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	get_array "$@"
fi
