#!/usr/bin/env bash

function echo_escape_regexp_replacement() (
	source "$DOROTHY/sources/stdinargs.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			For each <input>, escape any characters that would interfere with a regex replacement.

			USAGE:
			echo-escape-regexp-replacement [...options] [--] ...<input>
			echo-lines ...<input> | echo-escape-regexp-replacement [...options]

			OPTIONS:
			$(stdinargs_options_help --)

			EXAMPLE:

			echo-escape-regexp-replacement -- 'Hello \$world. Special: \040b'

			    Hello \$\$world. Special: \\\\040b
			    # exit status: 0

			echo-lines -- 'Hello \$world. Special: \040b' | echo-escape-regexp-replacement --stdin

			    Hello \$\$world. Special: \\\\040b
			    # exit status: 0

		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# =====================================
	# Action

	function on_input {
		local value="$1"
		value="${value//\\/\\\\}"
		value="${value//$/\$$}" # https://github.com/chmln/sd/issues/129
		print_line "$value"
	}

	stdinargs "$@"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_escape_regexp_replacement "$@"
fi
