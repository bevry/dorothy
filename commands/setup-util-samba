#!/usr/bin/env bash

function setup_util_samba() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Preparation

	local service_title='Samba'
	local service_ids=()
	if is-mac; then
		service_ids+=('system/com.apple.smbd')
	else
		# https://www.samba.org/samba/docs/current/man-html/smbd.8.html
		# https://www.samba.org/samba/docs/current/man-html/nmbd.8.html
		# https://www.samba.org/samba/docs/current/man-html/winbindd.8.html
		# daemons: smbd, nmbd (netbios naming), winbindd (windows nt naming)
		# service names change based on operating system
		if is-ubuntu; then
			service_ids+=('nmbd' 'smbd')
		else
			service_ids+=('nmb' 'smb')
		fi
	fi
	local service_uninstall_paths=(
		'/etc/samba'
		# '/etc/samba/smb.conf'
	)

	# =====================================
	# Setup Utility

	# https://en.opensuse.org/Samba
	# https://docs.fedoraproject.org/en-US/quick-docs/samba/#install_and_enable_samba
	# https://wiki.alpinelinux.org/wiki/Setting_up_a_samba-server
	# https://wiki.archlinux.org/title/samba
	local options

	# https://packages.debian.org/sid/amd64/samba
	# /usr/bin/dumpmscat
	# /usr/bin/mvxattr
	# /usr/bin/oLschema2ldif
	# /usr/bin/pdbedit
	# /usr/bin/profiles
	# /usr/bin/sharesec
	# /usr/bin/smbcontrol
	# /usr/bin/smbstatus
	# /usr/sbin/eventlogadm
	# /usr/sbin/nmbd
	# /usr/sbin/samba
	# /usr/sbin/samba-gpupdate
	# /usr/sbin/samba_dnsupdate
	# /usr/sbin/samba_downgrade_db
	# /usr/sbin/samba_spnupdate
	# /usr/sbin/samba_upgradedns
	# /usr/sbin/smbd
	options=(
		--cli='smbd'
		--name='SMB/CIFS file, print, and login server for Unix'
		"$@"
		APK='samba'    # ALPINE
		APT='samba'    # UBUNTU
		RPM='samba'    # FEDORA
		ZYPPER='samba' # SUSE
	)
	setup-util "${options[@]}"

	# https://packages.debian.org/sid/amd64/samba-common-bin
	# https://packages.debian.org/sid/amd64/samba-common-bin/filelist
	# /usr/bin/dbwrap_tool
	# /usr/bin/net
	# /usr/bin/nmblookup
	# /usr/bin/samba-regedit
	# /usr/bin/samba-tool
	# /usr/bin/smbpasswd
	# /usr/bin/testparm
	# /usr/sbin/samba_kcc
	options=(
		--name='Samba common files used by both the server and the client'
		--cli='testparm'
		"$@"
		APK='samba-common-bin'    # ALPINE
		APT='samba-common-bin'    # UBUNTU
		RPM='samba-common-bin'    # FEDORA
		ZYPPER='samba-common-bin' # SUSE
	)
	setup-util "${options[@]}"

	# https://packages.debian.org/sid/cifs-utils
	# https://packages.debian.org/sid/amd64/cifs-utils/filelist
	# /sbin/mount.cifs
	# /sbin/mount.smb3
	# /usr/bin/cifscreds
	# /usr/bin/getcifsacl
	# /usr/bin/setcifsacl
	# /usr/bin/smb2-quota
	# /usr/bin/smbinfo
	# /usr/sbin/cifs.idmap
	# /usr/sbin/cifs.upcall
	options=(
		--name='Common Internet File System utilities'
		--cli='mount.cifs'
		"$@"
		APK='cifs-utils'    # ALPINE
		APT='cifs-utils'    # UBUNTU
		RPM='cifs-utils'    # FEDORA
		ZYPPER='cifs-utils' # SUSE
	)
	setup-util "${options[@]}"

	# if missing, complete uninstall and exit
	if command-missing smbd; then
		# remove service
		service-helper --remove -- \
			-- "${service_ids[@]}"

		# remove paths
		fs-rm --confirm --sudo --optional \
			-- "${service_uninstall_paths[@]}"

		# all done for uninstall
		return 0
	fi

	# if installed, configure service if supported
	if service-helper --supported; then
		# verify the service was initialised
		if service-helper --exists -- "${service_ids[@]}"; then
			# ensure correct permissions
			# sudo-helper -- mkdir -p /etc/samba/credentials/share
			# fs-own --sudo --admin --permissions='a-xrw,u+X' \
			# 	-- /etc/samba/credentials
			# fs-own --sudo --admin --permissions='a-xrw,u+r' \
			# 	-- /etc/samba/credentials/share

			# verify configuration
			testparm --suppress-prompt
		else
			echo-error "$service_title was installed, however the service was not."
			return 1
		fi
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_samba "$@"
fi
