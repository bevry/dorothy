#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# copy everything from one location to another preserving properties
_remote="${1:?"USAGE: cpr <REMOTE> <DESTINATION>"}"
_destination="${2:?"USAGE: cpr <remote> <DESTINATION>"}"
if test -d "${_destination}"; then
	if confirm-bool "Destination directory [${_destination}] exists, confirm its deletion"; then
		rm -Rf "${_destination}"
	fi
fi

if command-exists rsync; then
	# via rsync, file by file progress
	# --archive, -a: archive mode; equals -rlptgoD (no -H,-A,-X)
	#   --recursive, -r: recurse into directories
	#   --links, -l: copy symlinks as symlinks
	#   --perms, -p: preserve permissions
	#   --times, -t: preserve modification times
	#   --group, -g: preserve group
	#   --owner, 0o: preserve owner (super-user only)
	#   -D: same as --devices --specials
	#   --devices: preserve device files (super-user only)
	#   --specials: preserve special files
	# --human-readable, -h: output numbers in a human-readable format
	# --checksum, -c: skip based on checksum, not mod-time & size
	# --acls, -A: preserve ACLs (implies --perms)
	# --xattrs, -X: preserve extended attributes
	# --atimes, -U: preserve access (use) times
	# --crtimes, -N: preserve create times (newness)
	# --delete: delete extraneous files from dest dirs
	# --partial: keep partially transferred files
	# --progress: show progress during transfer
	# -P: same as --partial --progress
	if is-mac; then
		# remove ACL, xattrs, atimes, crtimes
		rsync -ahcP  "${_remote}" "${_destination}"
		# if confirm-bool "Would you like to verify everything copied over?"; then
		# 	rsync -inahcP "${_remote}" "${_destination}"
		# fi
	elif is-linux; then
		# --crtimes not supports on ubuntu server on raspberry pi 4
		rsync -ahcAXUP  "${_remote}" "${_destination}"
	else
		# use everything
		rsync -ahcAXUNP  "${_remote}" "${_destination}"
		# if confirm-bool "Would you like to verify everything copied over?"; then
		# 	rsync -inahcAXUNP "${_remote}" "${_destination}"
		# fi
	fi
elif command-exists gcp; then
	# via gcp, overall progress
	# -a, --archive: same as -dR --preserve=all
	# -d: same as --no-dereference --preserve=links
	# -R, -r, --recursiveL copy directories recursively
	# -v, --verbose: display what is being done
	# -p: same as --preserve=mode,ownership,timestamps
	# --preserve PRESERVE: preserve specified attributes; accepted values: 'all', or one or more amongst {'ownership', 'timestamps', 'mode'}
	gcp -av "${_remote}" "${_destination}"
elif command-exists scp; then
	# via scp
	# -A: Allows forwarding of ssh-agent(1) to the remote system.  The default is not to forward an authentication agent.
	# -p: Preserves modification times, access times, and modes from the original file.
	# -r: Recursively copy entire directories.  Note that scp follows symbolic links encountered in the tree traversal.
	scp -Apr "${_remote}" "${_destination}"
else
	# via cp
	# -a: Same as -pPR options. Preserves structure and attributes of files but not directory structure.
	# -f: If the destination file cannot be opened, remove it and create a new file, without prompting for confirmation regardless of its permissions.
	# -L: If the -R option is specified, all symbolic links are followed.
	# -p: Cause cp to preserve the following attributes of each source file in the copy: modification time, access time, file flags, file mode, user ID, and group ID, as allowed by permissions.  Access Control Lists (ACLs) and Extended Attributes (EAs), including resource forks, will also be preserved.
	# -R: If source_file designates a directory, cp copies the directory and the entire subtree connected at that point.  If the source_file ends in a /, the contents of the directory are copied rather than the directory itself.  This option also causes symbolic links to be copied, rather than indirected through, and for cp to create spe- cial files rather than copying them as normal files.  Created directories have the same mode as the corresponding source direc- tory, unmodified by the process' umask.
	# -v: Cause cp to be verbose, showing files as they are copied.
	cp -fLpRv "${_remote}" "${_destination}"
fi