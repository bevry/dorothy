#!/usr/bin/env bash

function macos_installer() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >&2
			ABOUT:
			Download and select the latest macOS installer.

			USAGE:
			macos-installer
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Action

	function confirm_download {
		confirm --positive --ppid=$$ -- \
			'Download the latest macOS installer?' \
			'No macOS installers were detected on your system, so a download will be required to proceed.'
	}
	function do_download {
		local confirm_status
		__try {confirm_status} -- confirm_download
		if [[ $confirm_status -eq 0 ]]; then
			# `softwareupdate --download` flag doesn't work, despite documentation
			softwareupdate --fetch-full-installer >/dev/tty
		else
			return 125 # ECANCELED 125 Operation cancelled
		fi
	}

	local installers=()
	installers=('/Applications/Install macOS'*)
	if [[ ${#installers[@]} -eq 0 ]]; then
		do_download
		installers=('/Applications/Install macOS'*)
		if [[ ${#installers[@]} -eq 0 ]]; then
			echo-error 'Could not find the downloaded installer. This is unexpected.' $'\n' 'Report an issue at: https://github.com/bevry/dorothy/issues'
			return 3 # ESRCH 3 No such process
		fi
	fi

	# select a single installer if there were multiple
	choose-path --required --question="Which macOS installer to use?" -- "${installers[@]}"
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	macos_installer "$@"
fi
