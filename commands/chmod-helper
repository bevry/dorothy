#!/usr/bin/env bash
source "$DOROTHY/sources/strict.bash"

# options
mapfile -t options < <(echo-before-separator "$@")
permissions="$(get-flag-value permissions -- "${options[@]}")"
recursive="$(get-flag-value recursive --missing=no -- "${options[@]}" | echo-affirmative)"
changes="$(get-flag-value changes --missing=no -- "${options[@]}" | echo-affirmative)"
partial="$(get-flag-value partial --missing=yes -- "${options[@]}" | echo-affirmative)"
mapfile -t paths < <(echo-after-separator "$@")

# check
if test -z "$permissions" || is-array-empty-or-partial "${paths[@]}"; then
	stderr cat <<-EOF
		USAGE:
		chmod-helper [--no-partial] [--recursive] [--changes] --permissions=<permissions> -- <paths...>

		EXAMPLE:
		chmod-helper --permissions='+x' -- path path path
	EOF
	exit 1
fi

# args
args=()
if test "$recursive" = 'yes'; then
	args+=('-R') # --recursive doesn't work on macos
fi
if test "$changes" = 'yes' && ! is-mac; then
	args+=('--changes') # --changes doesn't work on macos, and has no alternative
fi
args+=("$permissions")

# act
if test "$partial" = 'yes'; then
	for path in "${paths[@]}"; do
		chmod "${args[@]}" "$path" || :
	done
else
	chmod "${args[@]}" "${paths[@]}"
fi
