#!/usr/bin/env bash

function is_empty_file_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-style --h1="TEST: $0"

	local dir file
	dir="$(fs-temp --directory='is-empty-file' --directory --touch)"
	file="$(fs-temp --directory='is-empty-file' --file --touch)"

	eval-tester --name='no args' --status=22 --ignore-stderr \
		-- is-empty-file --

	eval-tester --name='empty args' --status=22 \
		-- is-empty-file -- '' ''

	eval-tester --name='missing' --status=9 \
		-- is-empty-file -- "$DOROTHY/this-doesnt-exist"

	eval-tester --name='empty dirs' --status=9 \
		-- is-empty-file -- "$dir" "$dir"

	eval-tester --name='empty files' \
		-- is-empty-file -- "$file" "$file"

	eval-tester --name='non-empty dir' --status=9 \
		-- is-empty-file -- "$DOROTHY"

	eval-tester --name='non-empty file' --status=1 \
		-- is-empty-file -- "$DOROTHY/README.md"

	echo-style --g1="TEST: $0"
	return 0
)
function is_empty_file() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Checks if a <path> is an empty file, aka a file without content, aka a file with zero-length content.

			USAGE:
			is-empty-file [...options] [--] ...<path>

			OPTIONS:
			--sudo
			    If specified, use sudo on filesystem interactions.
			--user=<user>
			--group=<group>
			    If specified use this user and/or group for filesystem interactions.

			RETURNS:
			[0] if all <path>s are empty file
			[1] if any <path>s are not an empty file.
			[9] if any <path>s are not a file.
			[22] if empty arguments are provided.
		EOF
		if [[ $# -ne 0 ]]; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_inputs=() option_sudo='no' option_user='' option_group=''
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-sudo'* | '--sudo'*)
			option_sudo="$(get-flag-value --affirmative --fallback="$option_sudo" -- "$item")"
			;;
		'--user='*) option_user="${item#*=}" ;;
		'--group='*) option_group="${item#*=}" ;;
		'--')
			option_inputs+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_inputs+=("$item") ;;
		esac
	done

	# check
	if [[ ${#option_inputs[@]} -eq 0 ]]; then
		help "No <path>s provided."
	fi

	# =====================================
	# Action

	sudo-helper --inherit --sudo="$option_sudo" --user="$option_user" --group="$option_group" -- is-empty-file.bash -- "${option_inputs[@]}"
	return
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	if [[ $* == '--test' ]]; then
		is_empty_file_test
	else
		is_empty_file "$@"
	fi
fi
