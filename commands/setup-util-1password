#!/usr/bin/env bash

# Desktop
# https://support.1password.com/install-linux/
# https://support.1password.com/betas/?linux
# https://releases.1password.com/linux/beta/#1password-for-linux-8.6.0-68
# https://1password.community/discussion/comment/631532#Comment_631532
# https://developer.1password.com/docs/ssh/agent
# https://aur.archlinux.org/packages/1password
# https://aur.archlinux.org/packages/1password-beta

# Browser
# https://app-updates.agilebits.com/product_history/B5X
# https://support.1password.com/betas/#install-a-beta-release-of-the-1password-extension

# This use to install the betas, as the betas were more stable. However that was a long time ago. If you desire the betas, send a PR for a `--beta` flag, or do `setup-util-1password-beta`

function setup_util_1password() (
	source "$DOROTHY/sources/bash.bash"

	# don't use improve performance snippet, as not all install methods provide something we can detect

	# enable GITHUB_BUILD_EVAL
	source "$(type -P setup-util)"

	# =================================
	# Desktop App

	# setup
	local arch sudo_reason='Installing 1Password to be accessible to all users, requires sudo.' options=(
		--name='1Password App'
		"$@"
	)
	arch="$(get-arch)"
	function do_apt_keys {
		setup-util-gpg --quiet
		sudo-helper --reason="$sudo_reason" \
			-- mkdir -p -- /etc/debsig/policies/AC2D62742012EA22 /usr/share/debsig/keyrings/AC2D62742012EA22
		fetch 'https://downloads.1password.com/linux/debian/debsig/1password.pol' |
			echo-wait --binary --reason="$sudo_reason" -- /etc/debsig/policies/AC2D62742012EA22/1password.pol
		fetch 'https://downloads.1password.com/linux/keys/1password.asc' |
			sudo-helper --reason="$sudo_reason" -- gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg
	}
	function do_rpm_keys {
		sudo-helper --reason="$sudo_reason" \
			-- rpm --import 'https://downloads.1password.com/linux/keys/1password.asc'
		echo-wait --reason="$sudo_reason" -- /etc/yum.repos.d/1password.repo <<-EOF
			[1password]
			name=1Password Channel
			baseurl=https://downloads.1password.com/linux/rpm/stable/\$basearch
			enabled=1
			gpgcheck=1
			repo_gpgcheck=1
			gpgkey="https://downloads.1password.com/linux/keys/1password.asc"
		EOF
	}
	function do_gpg_keys {
		setup-util-gpg --quiet
		fetch 'https://downloads.1password.com/linux/keys/1password.asc' | gpg --import
	}
	function do_install {
		# linux 1password expects it to be inside [/opt/1Password/]

		# ensure moving doesn't get nested
		fs-rm --quiet --no-confirm --sudo -- /opt/1Password

		# make the directory again
		sudo-helper --reason="$sudo_reason" \
			-- mkdir -pv -- /opt/1Password

		# move everything that was extracted to go inside the directory
		sudo-helper --reason="$sudo_reason" \
			-- mv -v -- 1password-*/* /opt/1Password

		# run the official after-install script, and if it fails, just do the symlink part of it
		sudo-helper --reason="$sudo_reason" \
			-- /opt/1Password/after-install.sh || sudo-helper -- ln -sf -- /opt/1Password/1password /usr/bin/1password

		# @todo is there an official uninstall script?
	}
	function do_uninstall {
		# https://support.1password.com/uninstall-1password/
		if is-present -- /opt/1Password/after-remove.sh; then
			sudo-helper --reason="$sudo_reason" \
				-- /opt/1Password/after-remove.sh || :
		fi
		fs-rm --quiet --no-confirm --sudo -- /opt/1Password /usr/bin/1password
	}
	if is-mac; then
		options+=(
			--app='1Password'
			CASK='1password'
		)
	elif is-linux; then
		if [[ $arch == 'a64' ]]; then
			options+=(
				DOWNLOAD='https://downloads.1password.com/linux/tar/stable/aarch64/1password-latest.tar.gz'
				DOWNLOAD_UNZIP_FORMAT='tar'
				DOWNLOAD_TARGET_PATH='/opt/1Password/1password'
				DOWNLOAD_BUILD_INSTALL='do_install'
				EVAL_UNINSTALL='do_uninstall'
			)
		elif is-apt; then
			do_apt_keys
			options+=(
				APT='1password' # UBUNTU
				APT_KEY='https://downloads.1password.com/linux/keys/1password.asc'
				APT_REPO='deb [arch={ARCH} signed-by={KEY}] https://downloads.1password.com/linux/debian/amd64 stable main'
			)
		elif __command_exists -- rpm yum dnf; then
			do_rpm_keys
			options+=(
				RPM='1password' # FEDORA
			)
		elif is-arch; then
			do_gpg_keys
			options+=(
				AUR='1password' # ARCH
			)
		elif is-snap; then
			options+=(
				SNAP='1password'
			)
		elif is-flatpak; then
			options+=(
				FLATPAK='https://downloads.1password.com/linux/flatpak/1Password.flatpakref'
			)
		elif [[ $arch == 'x64' ]]; then
			options+=(
				DOWNLOAD='https://downloads.1password.com/linux/tar/stable/x86_64/1password-latest.tar.gz'
				DOWNLOAD_UNZIP_FORMAT='tar'
				DOWNLOAD_TARGET_PATH='/opt/1Password/1password'
				DOWNLOAD_BUILD_INSTALL='do_install'
				EVAL_UNINSTALL='do_uninstall'
			)
		fi
	fi
	setup_util "${options[@]}"

	# =================================
	# Browser

	cat <<-EOF
		Install the 1Password Browser extension by visiting the following URL:
		$(echo-style --code='https://1password.com/downloads/browser-extension')
	EOF
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	setup_util_1password "$@"
fi
