#!/usr/bin/env bash

function get_terminal_cursor_line_and_column() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Get terminal cursor line and column.

			USAGE:
			get-terminal-cursor-line-and-column [...options]

			OPTIONS:
			--device-file=</dev/tty|/dev/stderr>
			    See [get-terminal-device-file] for more information.

			RETURNS:
			[0] can detect terminal lines and columns
			[19] cannot detect terminal lines and columns
		EOF
		if [[ $# -ne 0 ]]; then
			printf '%s\n' '' 'ERROR:' "$@" # don't get echo-style, as echo-style uses this
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_device_file=''
	while [[ $# -ne 0 ]]; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--device-file='*) option_device_file="${item#*=}" ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	if [[ -z $option_device_file ]]; then
		option_device_file="$(get-terminal-device-file)"
	fi

	# =====================================
	# Action

	# send an ansi query to fetch the cursor line and column, returns [^[[24;80R] where 24 is line/row/y, 80 is column/x
	# use _ to discard, the first read var is garbage, the second read var is the line, the final read var is the column
	# use a 2 second timeout, as otherwise on macos sonoma will wait forever
	# shorter timeouts aren't suitable as slower machines take a while for the response
	# the read will complete immediately upon a response thanks to [-d R] which completes reading when the R is read, which is the final character of the response
	local _ line column
	IFS='[;' read -t 2 -srd R -p $'\e[6n' _ line column <"$option_device_file"
	if [[ -n ${line-} && -n ${column-} ]]; then
		__print_lines "$line" "$column"
	else
		return 19 # ENODEV 19 Operation not supported by device
	fi
)

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	get_terminal_cursor_line_and_column "$@"
fi
