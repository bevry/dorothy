#!/usr/bin/env bash
# bash and zsh run this natively
# both support arrays

# works in bash and zsh
RED=$'\e[31m'     # "$(tput setaf 1)"
GREEN=$'\e[32m'   # "$(tput setaf 2)"
YELLOW=$'\e[33m'  # "$(tput setaf 3)"
BLUE=$'\e[34m'    # "$(tput setaf 4)"
CYAN=$'\e[36m'    # "$(tput setaf 6)"
NO_COLOR=$'\e[0m' # "$(tput sgr0)"
TITLE_START=$'\033]0;'
TITLE_END=$'\007'
NEWLINE=$'\n'

# alias the colours for specific usages
C_RESET="$NO_COLOR"
C_TIME="$GREEN"
C_USER="$BLUE"
C_PATH="$YELLOW"
C_GIT_CLEAN="$CYAN"
C_GIT_DIRTY="$RED"
C_ERROR="$RED"

# Function to assemble the Git part of our prompt
# git_prompt "$C_GIT_CLEAN" "$C_GIT_DIRTY"
function git_prompt {
	local git_branch c_git
	# silence stderr
	git_branch="$(git branch 2>/dev/null)"
	if test -n "$git_branch"; then
		# silence stdout and stderr
		if git diff --quiet >/dev/null 2>&1; then
			c_git="$1"
		else
			c_git="$2"
		fi
		# "* master" to "master"
		echo "${c_git}${git_branch/* /}${C_RESET}"
	fi
}

# Theme
function oztheme {
	local c_user="$C_USER" \
		shell="$1" \
		last_command_exit_status="$2" \
		prefix='' suffix='' separator=':' user='' symbol='> ' \
		target="${PWD/HOME/~}" \
		gitdata moment \
		title=''

	gitdata="$(git_prompt "$C_GIT_CLEAN" "$C_GIT_DIRTY")"
	moment="$(date +%H:%M:%S)"

	# is-ssh, it is duplicated here in case $DOROTHY is not in path,
	# which can happen if relocating dorothy to xdg
	if test -n "${SSH_CONNECTION-}" -o -n "${SSH_CLIENT-}" -o -n "${SSH_TTY-}"; then
		user="${USER}@${HOSTNAME}"
		c_user="$C_GIT_DIRTY"
	fi

	# construct prefix and title
	if test "$last_command_exit_status" -ne 0; then
		prefix+="${C_ERROR}[${last_command_exit_status}]${C_RESET}${separator}"
	fi
	if test -n "$moment"; then
		prefix+="${C_TIME}${moment}${C_RESET}${separator}"
	fi
	if test -n "$user"; then
		prefix+="${c_user}${user}${C_RESET}${separator}"
		title+="${user}${separator}"
	fi
	if test -n "$target"; then
		prefix+="${C_PATH}${target}${C_RESET}${separator}"
		title+="${target}${separator}"
		# ^ perhaps this is better: $(echo -n $target | split '/' | sed '1!G;h;$!d' | join '\\\\')
	fi
	if test -n "$gitdata"; then
		prefix+="${gitdata}${separator}"
	fi

	# delete the last separator
	prefix="${prefix:0:-1}"
	title="${title:0:-1}"

	if test -n "$symbol"; then
		suffix="${suffix}${symbol}"
	fi

	# Bash
	if test "$shell" = "bash"; then
		# apply prompt
		export PS1="${prefix}${NEWLINE}${suffix}"

		# apply title
		if test -n "$title"; then
			echo -n "${TITLE_START}${title}${TITLE_END}"
		fi

	# ZSH
	elif test "$shell" = "zsh"; then
		# apply prompt
		export PS1="${prefix}${NEWLINE}${suffix}"

		# @todo figure out how to apply zsh title
		# export PROMPT="${prefix}\n\$ "
		# echo -ne "\e]1;${title}\a"
	else
		# apply prompt
		echo "${prefix}${NEWLINE}${suffix}"
	fi
}

if test "$1" = "fish"; then
	oztheme fish "$2"
fi
