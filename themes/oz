#!/usr/bin/env bash
# bash and zsh run this natively
# both support arrays

# Colours
if test -n "${ZSH_VERSION-}"; then
	autoload colors
	colors
	export RED="$fg[red]"
	export RED_BOLD="$fg_bold[RED]"
	export BLUE="$fg[blue]"
	export CYAN="$fg[cyan]"
	export PURPLE="$fg[purple]"
	export GREEN="$fg[green]"
	export YELLOW="$fg[yellow]"
	export BLACK="$fg[black]"
	export NO_COLOR="$reset_color"
else
	# https://mywiki.wooledge.org/BashFAQ/037 has alternative guide
	# however the below is tried and true
	# Bash colors can start with either \033 or \e
	# normal is \e[0;
	# bold is \e[01;
	export RED="\e[0;31m"
	export RED_BOLD="\e[01;31m"
	export BLUE="\e[0;34m"
	export CYAN='\e[0;36m'
	export PURPLE='\e[0;35m'
	export GREEN="\e[0;32m"
	export YELLOW="\e[0;33m"
	export BLACK="\e[0;38m"
	export NO_COLOR="\e[0m"
fi

# Alias colours for specific usages
export C_RESET=$NO_COLOR
export C_TIME=$GREEN
export C_USER=$BLUE
export C_PATH=$YELLOW
export C_GIT_CLEAN=$CYAN
export C_GIT_DIRTY=$RED
export C_ERROR=$RED

# Function to assemble the Git part of our prompt
# git_prompt "$C_GIT_CLEAN" "$C_GIT_DIRTY"
function git_prompt {
	local git_branch c_git
	# silent
	# sed -n /p only outputs the replacement
	git_branch="$(git branch 2>/dev/null | sed -n 's/^\* //p')"
	if test -n "$git_branch"; then
		# silent stdout and stderr
		if git diff --quiet >/dev/null 2>&1; then
			c_git="$1"
		else
			c_git="$2"
		fi
		echo "${c_git}${git_branch}${C_RESET}"
	fi
}

# Theme
function oztheme {
	local c_user="$C_USER" \
		shell="$1" \
		exitstatus="$2" \
		prefix='' suffix='' separator=':' user='' symbol='> ' \
		target="${PWD/HOME/~}" \
		gitdata moment \
		title

	gitdata="$(git_prompt "$C_GIT_CLEAN" "$C_GIT_DIRTY")"
	moment="$(date +%H:%M:%S)"

	# is-ssh, it is duplicated here in case $DOROTHY is not in path,
	# which can happen if relocating dorothy to xdg
	if test -n "${SSH_CONNECTION-}" -o -n "${SSH_CLIENT-}" -o -n "${SSH_TTY-}"; then
		user="${USER}@${HOSTNAME}"
		c_user="$C_GIT_DIRTY"
	fi

	# construct prefix
	if test "$exitstatus" -ne 0; then
		prefix+="${C_ERROR}[${exitstatus}]${C_RESET}${separator}"
	fi
	if test -n "$moment"; then
		prefix+="${C_TIME}${moment}${C_RESET}${separator}"
	fi
	if test -n "$user"; then
		prefix+="${c_user}${user}${C_RESET}${separator}"
	fi
	if test -n "$target"; then
		prefix+="${C_PATH}${target}${C_RESET}${separator}"
	fi
	if test -n "$gitdata"; then
		prefix+="${gitdata}${separator}"
	fi
	# delete the last separator
	prefix="${prefix:0:-1}"

	if test -n "$symbol"; then
		suffix="${suffix}${symbol}"
	fi

	# Bash
	if test "$shell" = "bash"; then
		# local pathReversed=$(echo -n $target | split '/' | sed '1!G;h;$!d' | join '\\\\')
		title="$(basename "$target")${separator}${user}${separator}${target}"
		export PS1="${prefix}\n${suffix}"
		echo -ne "\033]0;${title}\007"

	# ZSH
	elif test "$shell" = "zsh"; then
		export PS1="${prefix}
${suffix}"
		# export PROMPT="${prefix}\n\$ "
		# echo -ne "\e]1;${title}\a"
	else
		echo -e "${prefix}\n${suffix}"
	fi
}

if test "$1" = "fish"; then
	oztheme fish "$2"
fi
