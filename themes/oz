#!/usr/bin/env bash
# bash and zsh run this natively
# both support arrays

# ansi escape codes in bash and zsh
RED=$'\e[31m'
GREEN=$'\e[32m'
YELLOW=$'\e[33m'
BLUE=$'\e[34m'
CYAN=$'\e[36m'
NO_COLOR=$'\e[0m'
NEWLINE=$'\n'
TITLE_START=$'\e]0;'
TITLE_END=$'\a'

# alias colors for their specific usages
C_RESET="$NO_COLOR"
C_TIME="$GREEN"
C_USER="$BLUE"
C_PATH="$YELLOW"
C_CLEAN="$CYAN"
C_DIRTY="$RED"
C_ERROR="$RED"

# Function to assemble the Git part of our prompt
function git_prompt {
	local c_git git_branch
	# silence stderr
	git_branch="$(git rev-parse --abbrev-ref HEAD 2>/dev/null || :)"
	if [[ -n $git_branch ]]; then
		# silence stdout and stderr
		if git diff --quiet &>/dev/null; then
			c_git="$C_CLEAN"
		else
			c_git="$C_DIRTY"
		fi
		# [* master] to [master]
		printf '%s\n' "${c_git}${git_branch/* /}${C_RESET}"
	fi
}

# Theme
function oztheme {
	# prepare
	local c_user="$C_USER" \
		shell="$1" \
		last_command_exit_status="$2" \
		title='' prefix='' suffix='' separator=':' user='' symbol='> ' \
		target="${PWD/HOME/~}" \
		gitdata moment
	gitdata="$(git_prompt)"
	moment="$(date +%H:%M:%S)"

	# is-ssh, it is duplicated here in case $DOROTHY is not in path,
	# which can happen if relocating dorothy to xdg
	if [[ -n ${SSH_CONNECTION-} || -n ${SSH_CLIENT-} || -n ${SSH_TTY-} ]]; then
		user="${USER}@${HOSTNAME}"
		c_user="$C_DIRTY"
	fi

	# construct prefix and title
	if [[ $last_command_exit_status -ne 0 ]]; then
		prefix+="${C_ERROR}[${last_command_exit_status}]${C_RESET}${separator}"
	fi
	if [[ -n $moment ]]; then
		prefix+="${C_TIME}${moment}${C_RESET}${separator}"
	fi
	if [[ -n $user ]]; then
		prefix+="${c_user}${user}${C_RESET}${separator}"
		title+="${user}${separator}"
	fi
	if [[ -n $target ]]; then
		prefix+="${C_PATH}${target}${C_RESET}${separator}"
		title+="${target}${separator}"
	fi
	if [[ -n $gitdata ]]; then
		prefix+="${gitdata}${separator}"
	fi

	if [[ -n $symbol ]]; then
		suffix="${suffix}${symbol}"
	fi

	# delete the last separator
	if [[ -n $BASH_VERSION ]]; then
		# bash v3+
		prefix_length="${#prefix}"
		title_length="${#title}"
		prefix="${prefix:0:prefix_length-1}"
		title="${title:0:title_length-1}"
	else
		# zsh, bash v4+
		prefix="${prefix:0:-1}"
		title="${title:0:-1}"
	fi

	# Bash
	if [[ $shell == 'bash' ]]; then
		# sourced

		# apply prompt
		PS1="${prefix}${NEWLINE}${suffix}"
		# ^ don't export, as if bash is the login shell, bash subshells will also inherit this

		# apply title
		if [[ -n $title ]]; then
			printf '%s' "${TITLE_START}${title}${TITLE_END}"
		fi

	# Zsh
	elif [[ $shell == 'zsh' ]]; then
		# sourced

		# apply prompt
		PS1="${prefix}${NEWLINE}${suffix}"
		# ^ don't export, as there is no need to

		# apply title
		if [[ -n $title ]]; then
			printf '%s' "${TITLE_START}${title}${TITLE_END}"
		fi
	else
		# run via command

		# output prompt
		printf '%s' "${prefix}${NEWLINE}${suffix}"
	fi
}

# fire if invoked standalone
if [[ $0 == "${BASH_SOURCE[0]}" ]]; then
	oztheme "$@"
fi
