#!/usr/bin/env bash

# Colours
if test -n "${ZSH_VERSION-}"; then
	autoload colors
	colors
	export RED="$fg[red]"
	export RED_BOLD="$fg_bold[RED]"
	export BLUE="$fg[blue]"
	export CYAN="$fg[cyan]"
	export PURPLE="$fg[purple]"
	export GREEN="$fg[green]"
	export YELLOW="$fg[yellow]"
	export BLACK="$fg[black]"
	export NO_COLOR="$reset_color"
else
	# https://mywiki.wooledge.org/BashFAQ/037 has alternative guide
	# however the below is tried and true
	# Bash Colours
	# Can start with either \033 or \e
	# Normal is \e[0;
	# Bold is \e[01;
	export RED="\e[0;31m"
	export RED_BOLD="\e[01;31m"
	export BLUE="\e[0;34m"
	export CYAN='\e[0;36m'
	export PURPLE='\e[0;35m'
	export GREEN="\e[0;32m"
	export YELLOW="\e[0;33m"
	export BLACK="\e[0;38m"
	export NO_COLOR="\e[0m"
fi

# Alias colours for specific usages
export C_RESET=$NO_COLOR
export C_TIME=$GREEN
export C_USER=$BLUE
export C_PATH=$YELLOW
export C_GIT_CLEAN=$CYAN
export C_GIT_DIRTY=$RED
export C_ERROR=$RED

# Function to assemble the Git part of our prompt
# git_prompt "$C_GIT_CLEAN" "$C_GIT_DIRTY"
function git_prompt {
	local git_branch c_git
	# silent stderr
	git_branch="$(git branch 2> /dev/null | sed -n 's/^\* //p')"
	if test -n "$git_branch"; then
		# silent stdout and stderr
		if git diff --quiet >/dev/null 2>&1; then
			c_git="$1"
		else
			c_git="$2"
		fi
		echo "${c_git}${git_branch}${C_RESET}"
	fi
}

# Function
function append {
	if test -n "$1"; then
		echo -n "$1$2"
	fi
	echo -n "$3"
}

# Theme
function oztheme {
	local c_user="$C_USER" \
		shell="$1" \
		exitstatus="$2" \
		prefix='' suffix='' separator=':' user='' symbol='> ' \
		target="${PWD/HOME/~}" \
		gitdata moment \
		base title

	gitdata="$(git_prompt "$C_GIT_CLEAN" "$C_GIT_DIRTY")"
	moment="$(date +%H:%M:%S)"

	if is-ssh; then
		user="${USER}@${HOSTNAME}"
		c_user="$C_GIT_DIRTY"
	fi

	if test "$exitstatus" -ne 0; then
		prefix="$(append "$prefix" "$separator" "${C_ERROR}[${exitstatus}]${C_RESET}")"
	fi
	if test -n "$moment"; then
		prefix="$(append "$prefix" "$separator" "${C_TIME}${moment}${C_RESET}")"
	fi
	if test -n "$user"; then
		prefix="$(append "$prefix" "$separator" "${c_user}${user}${C_RESET}")"
	fi
	if test -n "$target"; then
		prefix="$(append "$prefix" "$separator" "${C_PATH}${target}${C_RESET}")"
	fi
	if test -n "$gitdata"; then
		prefix="$(append "$prefix" "$separator" "${gitdata}")"
	fi

	if test -n "$symbol"; then
		suffix="${suffix}${symbol}"
	fi

	# Bash
	if test "$shell" = "bash"; then
		# local pathReversed=$(echo -n $target | split '/' | sed '1!G;h;$!d' | join '\\\\')
		base="$(basename "$target")"
		title="${base}${separator}${user}${separator}${target}"

		export PS1="${prefix}\n${suffix}"
		echo -ne "\033]0;${title}\007"

	# ZSH
	elif test "$shell" = "zsh"; then
		export PS1="${prefix}
${suffix}"
		# export PROMPT="${prefix}\n\$ "
		# echo -ne "\e]1;${title}\a"
	else
		echo -e "${prefix}\n${suffix}"
	fi
}

if test "$1" = "fish"; then
	oztheme fish "$2"
fi
